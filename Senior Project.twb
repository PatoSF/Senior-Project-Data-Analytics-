<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.20.0125.0835                               -->
<workbook original-version='18.1' source-build='2019.4.3 (20194.20.0125.0835)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='annual-change-fossil-fuels (annual-change-fossil-fuels)' inline='true' name='federated.0bsie6912m5rxo1c7ylww1jn03at' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='annual-change-fossil-fuels' name='excel-direct.0nrrigp1h4m6eo18zfd2r03kmn4n'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Senior Done/annual-change-fossil-fuels.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0nrrigp1h4m6eo18zfd2r03kmn4n' name='annual-change-fossil-fuels' table='[&apos;annual-change-fossil-fuels$&apos;]' type='table'>
          <columns gridOrigin='A1:C4202:no:A1:C4202:0' header='yes' outcome='6'>
            <column datatype='string' name='Entity' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Fossil fuels (TWh growth â€“ sub method)' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Entity]</local-name>
            <parent-name>[annual-change-fossil-fuels]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[annual-change-fossil-fuels]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fossil fuels (TWh growth â€“ sub method)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fossil fuels (TWh growth â€“ sub method)]</local-name>
            <parent-name>[annual-change-fossil-fuels]</parent-name>
            <remote-alias>Fossil fuels (TWh growth â€“ sub method)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[annual-change-fossil-fuels]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C4202:no:A1:C4202:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.5' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='methane-emissions+ (Multiple Connections)' inline='true' name='federated.1pkulbz17ch3r811ctj0w0jrznmb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='methane-emissions' name='excel-direct.0ttx1fv19s3z2h1gnh9qi148z5ox'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Senior Done/methane-emissions.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='nitrous-oxide-emissions' name='excel-direct.0kx1k040k72x4p1bekkgx0hxgbmt'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Senior Done/nitrous-oxide-emissions.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[methane-emissions].[Year]' />
              <expression op='[nitrous-oxide-emissions].[Year]' />
            </expression>
          </clause>
          <relation connection='excel-direct.0ttx1fv19s3z2h1gnh9qi148z5ox' name='methane-emissions' table='[&apos;methane-emissions$&apos;]' type='table'>
            <columns gridOrigin='A1:C5212:no:A1:C5212:0' header='yes' outcome='6'>
              <column datatype='string' name='country' ordinal='0' />
              <column datatype='integer' name='Year' ordinal='1' />
              <column datatype='real' name='Total including LUCF (CH4 emissions, CAIT)' ordinal='2' />
            </columns>
          </relation>
          <relation connection='excel-direct.0kx1k040k72x4p1bekkgx0hxgbmt' name='nitrous-oxide-emissions' table='[&apos;nitrous-oxide-emissions$&apos;]' type='table'>
            <columns gridOrigin='A1:C5212:no:A1:C5212:0' header='yes' outcome='6'>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='integer' name='Year' ordinal='1' />
              <column datatype='real' name='Total including LUCF (N2O emissions, CAIT)' ordinal='2' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Country]' value='[nitrous-oxide-emissions].[Country]' />
          <map key='[Total including LUCF (CH4 emissions, CAIT)]' value='[methane-emissions].[Total including LUCF (CH4 emissions, CAIT)]' />
          <map key='[Total including LUCF (N2O emissions, CAIT)]' value='[nitrous-oxide-emissions].[Total including LUCF (N2O emissions, CAIT)]' />
          <map key='[Year (nitrous-oxide-emissions)]' value='[nitrous-oxide-emissions].[Year]' />
          <map key='[Year]' value='[methane-emissions].[Year]' />
          <map key='[country]' value='[methane-emissions].[country]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[methane-emissions]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[methane-emissions]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total including LUCF (CH4 emissions, CAIT)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total including LUCF (CH4 emissions, CAIT)]</local-name>
            <parent-name>[methane-emissions]</parent-name>
            <remote-alias>Total including LUCF (CH4 emissions, CAIT)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[methane-emissions]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C5212:no:A1:C5212:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[nitrous-oxide-emissions]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (nitrous-oxide-emissions)]</local-name>
            <parent-name>[nitrous-oxide-emissions]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total including LUCF (N2O emissions, CAIT)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total including LUCF (N2O emissions, CAIT)]</local-name>
            <parent-name>[nitrous-oxide-emissions]</parent-name>
            <remote-alias>Total including LUCF (N2O emissions, CAIT)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[nitrous-oxide-emissions]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C5212:no:A1:C5212:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Total including LUCF (CH4 emissions, CAIT)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Total including LUCF (N2O emissions, CAIT)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year (nitrous-oxide-emissions)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column aggregation='None' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column-instance column='[Total including LUCF (CH4 emissions, CAIT)]' derivation='Sum' name='[sum:Total including LUCF (CH4 emissions, CAIT):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total including LUCF (N2O emissions, CAIT)]' derivation='Sum' name='[sum:Total including LUCF (N2O emissions, CAIT):qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.539326' measure-ordering='alphabetic' measure-percentage='0.460674' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;[federated.1pkulbz17ch3r811ctj0w0jrznmb].[sum:Total including LUCF (N2O emissions, CAIT):qk]&quot;</bucket>
            </map>
            <map to='#f9d23c'>
              <bucket>&quot;[federated.1pkulbz17ch3r811ctj0w0jrznmb].[sum:Total including LUCF (CH4 emissions, CAIT):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='emissions-of-air-pollutants (emissions-of-air-pollutants)' inline='true' name='federated.0knmmcm1r0b4oy1g1ezen16lw9ik' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='emissions-of-air-pollutants' name='excel-direct.0085mhc1esot7p15jdn550hrx708'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Senior Done/emissions-of-air-pollutants.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0085mhc1esot7p15jdn550hrx708' name='emissions-of-air-pollutants' table='[&apos;emissions-of-air-pollutants$&apos;]' type='table'>
          <columns gridOrigin='A1:I79:no:A1:I79:0' header='yes' outcome='6'>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='string' name='Code' ordinal='1' />
            <column datatype='integer' name='Year' ordinal='2' />
            <column datatype='real' name='PM10' ordinal='3' />
            <column datatype='real' name='PM2.5' ordinal='4' />
            <column datatype='real' name='Non-methane volatile organic compounds (Index)' ordinal='5' />
            <column datatype='real' name='Nitrogen oxides (Index)' ordinal='6' />
            <column datatype='real' name='Ammonia (Index)' ordinal='7' />
            <column datatype='real' name='Sulphur dioxide (Index)' ordinal='8' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PM10</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PM10]</local-name>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias>PM10</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PM2.5</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PM2.5]</local-name>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias>PM2.5</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Non-methane volatile organic compounds (Index)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Non-methane volatile organic compounds (Index)]</local-name>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias>Non-methane volatile organic compounds (Index)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nitrogen oxides (Index)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Nitrogen oxides (Index)]</local-name>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias>Nitrogen oxides (Index)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ammonia (Index)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Ammonia (Index)]</local-name>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias>Ammonia (Index)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sulphur dioxide (Index)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sulphur dioxide (Index)]</local-name>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias>Sulphur dioxide (Index)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I79:no:A1:I79:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column aggregation='None' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.401914' measure-ordering='alphabetic' measure-percentage='0.598086' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='wind-electricity-per-capita+ (Multiple Connections)' inline='true' name='federated.1g8fant0p8wll511t7tvy0qferey' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='wind-electricity-per-capita' name='excel-direct.1dtqp3q019s13b1ezff1l1bmi0a2'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Senior Done/wind-electricity-per-capita.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='hydro-electricity-per-capita' name='excel-direct.1lj5r980iivj321ena2ur0fmbrbl'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Senior Done/hydro-electricity-per-capita.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='solar-electricity-per-capita' name='excel-direct.1qlcdgy01jht3417wxban1o4nwfu'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Senior Done/solar-electricity-per-capita.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='full' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[wind-electricity-per-capita].[Year]' />
              <expression op='[solar-electricity-per-capita].[Year]' />
            </expression>
          </clause>
          <relation join='full' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[wind-electricity-per-capita].[Year]' />
                <expression op='[hydro-electricity-per-capita].[Year]' />
              </expression>
            </clause>
            <relation connection='excel-direct.1dtqp3q019s13b1ezff1l1bmi0a2' name='wind-electricity-per-capita' table='[&apos;wind-electricity-per-capita$&apos;]' type='table'>
              <columns gridOrigin='A1:C5520:no:A1:C5520:0' header='yes' outcome='6'>
                <column datatype='string' name='country' ordinal='0' />
                <column datatype='integer' name='Year' ordinal='1' />
                <column datatype='real' name='Wind electricity per capita (kWh)' ordinal='2' />
              </columns>
            </relation>
            <relation connection='excel-direct.1lj5r980iivj321ena2ur0fmbrbl' name='hydro-electricity-per-capita' table='[&apos;hydro-electricity-per-capita$&apos;]' type='table'>
              <columns gridOrigin='A1:C5520:no:A1:C5520:0' header='yes' outcome='6'>
                <column datatype='string' name='country' ordinal='0' />
                <column datatype='integer' name='Year' ordinal='1' />
                <column datatype='real' name='Hydro electricity per capita (kWh)' ordinal='2' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.1qlcdgy01jht3417wxban1o4nwfu' name='solar-electricity-per-capita' table='[&apos;solar-electricity-per-capita$&apos;]' type='table'>
            <columns gridOrigin='A1:C5520:no:A1:C5520:0' header='yes' outcome='6'>
              <column datatype='string' name='country' ordinal='0' />
              <column datatype='integer' name='Year' ordinal='1' />
              <column datatype='real' name='Solar electricity per capita (kWh)' ordinal='2' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Hydro electricity per capita (kWh)]' value='[hydro-electricity-per-capita].[Hydro electricity per capita (kWh)]' />
          <map key='[Solar electricity per capita (kWh)]' value='[solar-electricity-per-capita].[Solar electricity per capita (kWh)]' />
          <map key='[Wind electricity per capita (kWh)]' value='[wind-electricity-per-capita].[Wind electricity per capita (kWh)]' />
          <map key='[Year (hydro-electricity-per-capita)]' value='[hydro-electricity-per-capita].[Year]' />
          <map key='[Year (solar-electricity-per-capita)]' value='[solar-electricity-per-capita].[Year]' />
          <map key='[Year]' value='[wind-electricity-per-capita].[Year]' />
          <map key='[country (hydro-electricity-per-capita)]' value='[hydro-electricity-per-capita].[country]' />
          <map key='[country (solar-electricity-per-capita)]' value='[solar-electricity-per-capita].[country]' />
          <map key='[country]' value='[wind-electricity-per-capita].[country]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[wind-electricity-per-capita]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[wind-electricity-per-capita]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wind electricity per capita (kWh)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Wind electricity per capita (kWh)]</local-name>
            <parent-name>[wind-electricity-per-capita]</parent-name>
            <remote-alias>Wind electricity per capita (kWh)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[wind-electricity-per-capita]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C5520:no:A1:C5520:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country (hydro-electricity-per-capita)]</local-name>
            <parent-name>[hydro-electricity-per-capita]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (hydro-electricity-per-capita)]</local-name>
            <parent-name>[hydro-electricity-per-capita]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hydro electricity per capita (kWh)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Hydro electricity per capita (kWh)]</local-name>
            <parent-name>[hydro-electricity-per-capita]</parent-name>
            <remote-alias>Hydro electricity per capita (kWh)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[hydro-electricity-per-capita]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C5520:no:A1:C5520:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country (solar-electricity-per-capita)]</local-name>
            <parent-name>[solar-electricity-per-capita]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (solar-electricity-per-capita)]</local-name>
            <parent-name>[solar-electricity-per-capita]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Solar electricity per capita (kWh)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Solar electricity per capita (kWh)]</local-name>
            <parent-name>[solar-electricity-per-capita]</parent-name>
            <remote-alias>Solar electricity per capita (kWh)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[solar-electricity-per-capita]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C5520:no:A1:C5520:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column aggregation='None' datatype='integer' name='[Hydro electricity per capita (kWh) (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='2' formula='[Hydro electricity per capita (kWh)]' peg='0' size='893' />
      </column>
      <column datatype='real' name='[Hydro electricity per capita (kWh)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Solar electricity per capita (kWh)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Wind electricity per capita (kWh)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year (hydro-electricity-per-capita)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year (solar-electricity-per-capita)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column aggregation='None' datatype='string' name='[country (hydro-electricity-per-capita)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='None' datatype='string' name='[country (solar-electricity-per-capita)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='None' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column-instance column='[Hydro electricity per capita (kWh)]' derivation='Sum' name='[sum:Hydro electricity per capita (kWh):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Solar electricity per capita (kWh)]' derivation='Sum' name='[sum:Solar electricity per capita (kWh):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Wind electricity per capita (kWh)]' derivation='Sum' name='[sum:Wind electricity per capita (kWh):qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.493464' measure-ordering='alphabetic' measure-percentage='0.506536' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1g8fant0p8wll511t7tvy0qferey].[sum:Solar electricity per capita (kWh):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1g8fant0p8wll511t7tvy0qferey].[sum:Hydro electricity per capita (kWh):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1g8fant0p8wll511t7tvy0qferey].[sum:Wind electricity per capita (kWh):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='renewable-energy-investment (renewable-energy-investment)' inline='true' name='federated.19478at1fsti8e17c9mhx1gz4oog' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='renewable-energy-investment' name='excel-direct.0mg54qz0ilx2kj1e86heo0r8mjgt'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Data Analytics/Senior Project/Data/renewable-energy-investment.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0mg54qz0ilx2kj1e86heo0r8mjgt' name='renewable-energy-investment' table='[&apos;renewable-energy-investment$&apos;]' type='table'>
          <columns gridOrigin='A1:C97:no:A1:C97:0' header='yes' outcome='6'>
            <column datatype='string' name='Entity' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Investment in Renewables by Region (IRENA (2016))' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Entity]</local-name>
            <parent-name>[renewable-energy-investment]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[renewable-energy-investment]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Investment in Renewables by Region (IRENA (2016))</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Investment in Renewables by Region (IRENA (2016))]</local-name>
            <parent-name>[renewable-energy-investment]</parent-name>
            <remote-alias>Investment in Renewables by Region (IRENA (2016))</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[renewable-energy-investment]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C97:no:A1:C97:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='real' name='[Investment in Renewables by Region (IRENA (2016))]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Investment in Renewables by Region (IRENA (2016))]' derivation='Sum' name='[sum:Investment in Renewables by Region (IRENA (2016)):qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.409938' measure-ordering='alphabetic' measure-percentage='0.590062' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.19478at1fsti8e17c9mhx1gz4oog].[sum:Investment in Renewables by Region (IRENA (2016)):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.19478at1fsti8e17c9mhx1gz4oog]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='Sheet1 (Tesla EV)' inline='true' name='federated.103js1e0c5wwq418qbx181lswi0o' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tesla EV' name='excel-direct.0xfr8ky1aiwzxs108ctni0cdgztr'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Data Analytics/Senior Project/Data/Tesla EV.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0xfr8ky1aiwzxs108ctni0cdgztr' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E1260:no:A1:E1260:0' header='yes' outcome='6'>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='real' name='Open' ordinal='1' />
            <column datatype='real' name='High' ordinal='2' />
            <column datatype='real' name='Low' ordinal='3' />
            <column datatype='real' name='Close' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Open</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Open]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Open</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>High</remote-name>
            <remote-type>5</remote-type>
            <local-name>[High]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>High</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Low</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Low]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Low</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Close</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Close]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Close</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E1260:no:A1:E1260:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='High Low' datatype='real' name='[Calculation_854276600713629699]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Low])-SUM([High])' />
      </column>
      <column caption='Open Close ' datatype='real' name='[Calculation_854276600714723332]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Close])-SUM([Open])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.242236' measure-ordering='alphabetic' measure-percentage='0.757764' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='Food_Production (Food_Production)' inline='true' name='federated.0ecjhcs1g5jesl140kxcq15s5kub' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Food_Production' name='excel-direct.1qzop680iqllm615la3j90bb3js5'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Data Analytics/Senior Project/Data/Food_Production.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1qzop680iqllm615la3j90bb3js5' name='Food_Production' table='[Food_Production$]' type='table'>
          <columns gridOrigin='A1:I44:no:A1:I44:0' header='yes' outcome='6'>
            <column datatype='string' name='Food product' ordinal='0' />
            <column datatype='real' name='Land use change' ordinal='1' />
            <column datatype='real' name='Animal Feed' ordinal='2' />
            <column datatype='real' name='Farm' ordinal='3' />
            <column datatype='real' name='Processing' ordinal='4' />
            <column datatype='real' name='Transport' ordinal='5' />
            <column datatype='real' name='Packging' ordinal='6' />
            <column datatype='real' name='Retail' ordinal='7' />
            <column datatype='real' name='Total_emissions' ordinal='8' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Food product</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Food product]</local-name>
            <parent-name>[Food_Production]</parent-name>
            <remote-alias>Food product</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Land use change</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Land use change]</local-name>
            <parent-name>[Food_Production]</parent-name>
            <remote-alias>Land use change</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Animal Feed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Animal Feed]</local-name>
            <parent-name>[Food_Production]</parent-name>
            <remote-alias>Animal Feed</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Farm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Farm]</local-name>
            <parent-name>[Food_Production]</parent-name>
            <remote-alias>Farm</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Processing</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Processing]</local-name>
            <parent-name>[Food_Production]</parent-name>
            <remote-alias>Processing</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transport</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Transport]</local-name>
            <parent-name>[Food_Production]</parent-name>
            <remote-alias>Transport</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Packging</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Packging]</local-name>
            <parent-name>[Food_Production]</parent-name>
            <remote-alias>Packging</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Retail</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Retail]</local-name>
            <parent-name>[Food_Production]</parent-name>
            <remote-alias>Retail</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_emissions</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_emissions]</local-name>
            <parent-name>[Food_Production]</parent-name>
            <remote-alias>Total_emissions</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Food_Production]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I44:no:A1:I44:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.223602' measure-ordering='alphabetic' measure-percentage='0.776398' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='pollution_us_2000_2016 (pollution_us_2000_2016)' inline='true' name='federated.1u5oo631ax02om12hazm119x8psu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='pollution_us_2000_2016' name='excel-direct.00a2v3515bpfw51c4wptu0io8jtz'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Data Analytics/Senior Project/Data/pollution_us_2000_2016.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.00a2v3515bpfw51c4wptu0io8jtz' name='pollution_us_2000_2016' table='[pollution_us_2000_2016$]' type='table'>
          <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='string' name='County' ordinal='1' />
            <column datatype='string' name='City' ordinal='2' />
            <column datatype='date' name='Date Local' ordinal='3' />
            <column datatype='string' name='NO2 Units' ordinal='4' />
            <column datatype='real' name='NO2 Mean' ordinal='5' />
            <column datatype='string' name='O3 Units' ordinal='6' />
            <column datatype='real' name='O3 Mean' ordinal='7' />
            <column datatype='string' name='SO2 Units' ordinal='8' />
            <column datatype='real' name='SO2 Mean' ordinal='9' />
            <column datatype='string' name='CO Units' ordinal='10' />
            <column datatype='real' name='CO Mean' ordinal='11' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[pollution_us_2000_2016]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>130</remote-type>
            <local-name>[County]</local-name>
            <parent-name>[pollution_us_2000_2016]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[pollution_us_2000_2016]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date Local</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date Local]</local-name>
            <parent-name>[pollution_us_2000_2016]</parent-name>
            <remote-alias>Date Local</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NO2 Units</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NO2 Units]</local-name>
            <parent-name>[pollution_us_2000_2016]</parent-name>
            <remote-alias>NO2 Units</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NO2 Mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NO2 Mean]</local-name>
            <parent-name>[pollution_us_2000_2016]</parent-name>
            <remote-alias>NO2 Mean</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>O3 Units</remote-name>
            <remote-type>130</remote-type>
            <local-name>[O3 Units]</local-name>
            <parent-name>[pollution_us_2000_2016]</parent-name>
            <remote-alias>O3 Units</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>O3 Mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[O3 Mean]</local-name>
            <parent-name>[pollution_us_2000_2016]</parent-name>
            <remote-alias>O3 Mean</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SO2 Units</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SO2 Units]</local-name>
            <parent-name>[pollution_us_2000_2016]</parent-name>
            <remote-alias>SO2 Units</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SO2 Mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SO2 Mean]</local-name>
            <parent-name>[pollution_us_2000_2016]</parent-name>
            <remote-alias>SO2 Mean</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO Units</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CO Units]</local-name>
            <parent-name>[pollution_us_2000_2016]</parent-name>
            <remote-alias>CO Units</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO Mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO Mean]</local-name>
            <parent-name>[pollution_us_2000_2016]</parent-name>
            <remote-alias>CO Mean</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[pollution_us_2000_2016]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L10001:no:A1:L10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='real' name='[CO Mean]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='string' name='[CO Units]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column aggregation='None' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <semantic-values semantic-role='[City].[Name]'>
          <semantic-value key='&quot;Altoona&quot;' value='&quot;Altoona&quot;' />
          <semantic-value key='&quot;Arden-Arcade&quot;' value='&quot;Sacramento&quot;' />
          <semantic-value key='&quot;Capitan&quot;' value='&quot;Yosemite National Park&quot;' />
          <semantic-value key='&quot;Ladue&quot;' value='&quot;Santa Clara&quot;' />
        </semantic-values>
      </column>
      <column aggregation='None' datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='real' name='[NO2 Mean]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[O3 Mean]' role='measure' type='quantitative' />
      <column datatype='real' name='[SO2 Mean]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot;Country Of Mexico&quot;' value='&quot;New Mexico&quot;' />
        </semantic-values>
      </column>
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[CO Mean]' derivation='Sum' name='[sum:CO Mean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NO2 Mean]' derivation='Sum' name='[sum:NO2 Mean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[O3 Mean]' derivation='Sum' name='[sum:O3 Mean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SO2 Mean]' derivation='Sum' name='[sum:SO2 Mean:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.515528' measure-ordering='alphabetic' measure-percentage='0.484472' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Country Of Mexico&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;District Of Columbia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:O3 Mean:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:CO Mean:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]&#10;[:Measure Names]' palette='cyclic_10_0' type='palette'>
            <map to='#1ba3c6'>
              <multibucket>
                <bucket>&quot;Alexandria&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#1ca4c5'>
              <multibucket>
                <bucket>&quot;Alexandria&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#1da6c5'>
              <multibucket>
                <bucket>&quot;Altoona&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#1fa7c4'>
              <multibucket>
                <bucket>&quot;Altoona&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#1fad80'>
              <multibucket>
                <bucket>&quot;Camden&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#20a9c4'>
              <multibucket>
                <bucket>&quot;Annandale&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#20ae83'>
              <multibucket>
                <bucket>&quot;Calumet City (PU RR name Calumet Park (sta.))&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#21ad7c'>
              <multibucket>
                <bucket>&quot;Camden&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#21af86'>
              <multibucket>
                <bucket>&quot;Calumet City (PU RR name Calumet Park (sta.))&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#22aac3'>
              <multibucket>
                <bucket>&quot;Annandale&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#22b089'>
              <multibucket>
                <bucket>&quot;Calexico&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#23ac79'>
              <multibucket>
                <bucket>&quot;Capitan&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#23acc3'>
              <multibucket>
                <bucket>&quot;Arden-Arcade&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#23b18c'>
              <multibucket>
                <bucket>&quot;Calexico&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#24adc2'>
              <multibucket>
                <bucket>&quot;Arden-Arcade&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#24b28f'>
              <multibucket>
                <bucket>&quot;Burbank&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#25ab75'>
              <multibucket>
                <bucket>&quot;Capitan&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#26aa72'>
              <multibucket>
                <bucket>&quot;Charleroi&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#26afc2'>
              <multibucket>
                <bucket>&quot;Ashland&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#26b392'>
              <multibucket>
                <bucket>&quot;Burbank&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#27b0c1'>
              <multibucket>
                <bucket>&quot;Ashland&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#27b495'>
              <multibucket>
                <bucket>&quot;Bristol&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#28aa6e'>
              <multibucket>
                <bucket>&quot;Charleroi&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#28b598'>
              <multibucket>
                <bucket>&quot;Bristol&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#29b2c1'>
              <multibucket>
                <bucket>&quot;Athens&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#29b69b'>
              <multibucket>
                <bucket>&quot;Breckenridge Hills&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#2aa96b'>
              <multibucket>
                <bucket>&quot;Charlotte&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#2ab3c1'>
              <multibucket>
                <bucket>&quot;Athens&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#2ab79e'>
              <multibucket>
                <bucket>&quot;Breckenridge Hills&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#2bb5c0'>
              <multibucket>
                <bucket>&quot;Bakersfield&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#2ca867'>
              <multibucket>
                <bucket>&quot;Charlotte&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#2cb8a1'>
              <multibucket>
                <bucket>&quot;Boulder City&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#2db6c0'>
              <multibucket>
                <bucket>&quot;Bakersfield&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#2db9a4'>
              <multibucket>
                <bucket>&quot;Boulder City&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#2ea764'>
              <multibucket>
                <bucket>&quot;Cherry Tree&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#2eb8bf'>
              <multibucket>
                <bucket>&quot;Baton Rouge&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#2ebaa7'>
              <multibucket>
                <bucket>&quot;Boston&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#2fbbaa'>
              <multibucket>
                <bucket>&quot;Boston&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#30a760'>
              <multibucket>
                <bucket>&quot;Cherry Tree&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#30b9bf'>
              <multibucket>
                <bucket>&quot;Baton Rouge&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#30bcad'>
              <multibucket>
                <bucket>&quot;Bethel Island&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#31bbbe'>
              <multibucket>
                <bucket>&quot;Beaver Falls&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#32a65d'>
              <multibucket>
                <bucket>&quot;Chicago&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#32bcbe'>
              <multibucket>
                <bucket>&quot;Beaver Falls&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#32bdb0'>
              <multibucket>
                <bucket>&quot;Bethel Island&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#33beb3'>
              <multibucket>
                <bucket>&quot;Berkeley&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#34a559'>
              <multibucket>
                <bucket>&quot;Chicago&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#34bebd'>
              <multibucket>
                <bucket>&quot;Beltsville&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#34bfb6'>
              <multibucket>
                <bucket>&quot;Berkeley&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#35bfb9'>
              <multibucket>
                <bucket>&quot;Benicia&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#35bfbd'>
              <multibucket>
                <bucket>&quot;Beltsville&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#36a456'>
              <multibucket>
                <bucket>&quot;Chula Vista&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#36c0bc'>
              <multibucket>
                <bucket>&quot;Benicia&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#38a452'>
              <multibucket>
                <bucket>&quot;Chula Vista&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#3aa34f'>
              <multibucket>
                <bucket>&quot;Cicero&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#3ba24b'>
              <multibucket>
                <bucket>&quot;Cicero&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#3da148'>
              <multibucket>
                <bucket>&quot;Concord&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#3fa144'>
              <multibucket>
                <bucket>&quot;Concord&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#41a041'>
              <multibucket>
                <bucket>&quot;Cornwall&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#439f3d'>
              <multibucket>
                <bucket>&quot;Cornwall&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#469f3a'>
              <multibucket>
                <bucket>&quot;Costa Mesa&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4ca039'>
              <multibucket>
                <bucket>&quot;Costa Mesa&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4f7cba'>
              <multibucket>
                <bucket>&quot;York&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#527bba'>
              <multibucket>
                <bucket>&quot;York&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#52a238'>
              <multibucket>
                <bucket>&quot;Crockett&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#557abb'>
              <multibucket>
                <bucket>&quot;Winter Park&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#587abb'>
              <multibucket>
                <bucket>&quot;Winter Park&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#58a336'>
              <multibucket>
                <bucket>&quot;Crockett&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#5c79bc'>
              <multibucket>
                <bucket>&quot;Winston-Salem&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#5ea535'>
              <multibucket>
                <bucket>&quot;Cupertino&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#5f78bc'>
              <multibucket>
                <bucket>&quot;Winston-Salem&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#6278bd'>
              <multibucket>
                <bucket>&quot;Wilkes-Barre&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#64a634'>
              <multibucket>
                <bucket>&quot;Cupertino&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#6577bd'>
              <multibucket>
                <bucket>&quot;Wilkes-Barre&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#6976be'>
              <multibucket>
                <bucket>&quot;Westport&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#6aa833'>
              <multibucket>
                <bucket>&quot;Dallas&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#6c76be'>
              <multibucket>
                <bucket>&quot;Westport&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#6f75bf'>
              <multibucket>
                <bucket>&quot;West Los Angeles&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#70a931'>
              <multibucket>
                <bucket>&quot;Dallas&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#7274bf'>
              <multibucket>
                <bucket>&quot;West Los Angeles&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#7674c0'>
              <multibucket>
                <bucket>&quot;Welby&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#76ab30'>
              <multibucket>
                <bucket>&quot;Davenport&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#7973c0'>
              <multibucket>
                <bucket>&quot;Welby&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#7c72c1'>
              <multibucket>
                <bucket>&quot;Washington&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#7cac2f'>
              <multibucket>
                <bucket>&quot;Davenport&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#7f72c1'>
              <multibucket>
                <bucket>&quot;Washington&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#82ae2e'>
              <multibucket>
                <bucket>&quot;Denver&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8371c2'>
              <multibucket>
                <bucket>&quot;Waco&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8670c2'>
              <multibucket>
                <bucket>&quot;Waco&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#88af2c'>
              <multibucket>
                <bucket>&quot;Denver&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8970c3'>
              <multibucket>
                <bucket>&quot;Victorville&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8d6fc3'>
              <multibucket>
                <bucket>&quot;Victorville&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8eb12b'>
              <multibucket>
                <bucket>&quot;Des Moines&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#906ec3'>
              <multibucket>
                <bucket>&quot;Vandenberg Air Force Base&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#936ec3'>
              <multibucket>
                <bucket>&quot;Vandenberg Air Force Base&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#94b22a'>
              <multibucket>
                <bucket>&quot;Des Moines&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#976ec3'>
              <multibucket>
                <bucket>&quot;Valrico&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9a6ec3'>
              <multibucket>
                <bucket>&quot;Valrico&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9ab429'>
              <multibucket>
                <bucket>&quot;Detroit&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9e6dc2'>
              <multibucket>
                <bucket>&quot;Vallejo&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0b527'>
              <multibucket>
                <bucket>&quot;Detroit&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a16dc2'>
              <multibucket>
                <bucket>&quot;Vallejo&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a56dc2'>
              <multibucket>
                <bucket>&quot;Tulsa&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a6b726'>
              <multibucket>
                <bucket>&quot;East Hartford&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a86cc1'>
              <multibucket>
                <bucket>&quot;Tulsa&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ac6cc1'>
              <multibucket>
                <bucket>&quot;Tucson&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb825'>
              <multibucket>
                <bucket>&quot;East Hartford&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#af6cc1'>
              <multibucket>
                <bucket>&quot;Tucson&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b2ba24'>
              <multibucket>
                <bucket>&quot;East Saint Louis&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b36bc0'>
              <multibucket>
                <bucket>&quot;Tijuana&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b66bc0'>
              <multibucket>
                <bucket>&quot;Tijuana&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b8bb22'>
              <multibucket>
                <bucket>&quot;East Saint Louis&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ba6bc0'>
              <multibucket>
                <bucket>&quot;Sunset Hills&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bd6bc0'>
              <multibucket>
                <bucket>&quot;Sunset Hills&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bdbc21'>
              <multibucket>
                <bucket>&quot;El Paso&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c0bc21'>
              <multibucket>
                <bucket>&quot;El Paso&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c16abf'>
              <multibucket>
                <bucket>&quot;St. Louis&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c3bc21'>
              <multibucket>
                <bucket>&quot;Erie&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c56abf'>
              <multibucket>
                <bucket>&quot;St. Louis&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c6bc21'>
              <multibucket>
                <bucket>&quot;Erie&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c86abf'>
              <multibucket>
                <bucket>&quot;St. Ann&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c9bc21'>
              <multibucket>
                <bucket>&quot;Essex&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#cc69be'>
              <multibucket>
                <bucket>&quot;St. Ann&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ccbb21'>
              <multibucket>
                <bucket>&quot;Essex&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#cf69be'>
              <multibucket>
                <bucket>&quot;Seven Corners&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#cfbb21'>
              <multibucket>
                <bucket>&quot;Eureka&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d2bb21'>
              <multibucket>
                <bucket>&quot;Eureka&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d369be'>
              <multibucket>
                <bucket>&quot;Seven Corners&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d5bb21'>
              <multibucket>
                <bucket>&quot;Ferguson&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d669bd'>
              <multibucket>
                <bucket>&quot;Scranton&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d86abc'>
              <multibucket>
                <bucket>&quot;Scranton&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d8bb21'>
              <multibucket>
                <bucket>&quot;Ferguson&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#da6bbb'>
              <multibucket>
                <bucket>&quot;Scottsdale&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#dbba21'>
              <multibucket>
                <bucket>&quot;Fontana&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#dc6cba'>
              <multibucket>
                <bucket>&quot;Scottsdale&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#de6cb9'>
              <multibucket>
                <bucket>&quot;San Pablo&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#deba21'>
              <multibucket>
                <bucket>&quot;Fontana&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#df3029'>
              <multibucket>
                <bucket>&quot;Milwaukee&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#df3127'>
              <multibucket>
                <bucket>&quot;Miami&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e0302c'>
              <multibucket>
                <bucket>&quot;Milwaukee&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e03526'>
              <multibucket>
                <bucket>&quot;Miami&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e06db8'>
              <multibucket>
                <bucket>&quot;San Pablo&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e1312f'>
              <multibucket>
                <bucket>&quot;New Castle&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e1ba21'>
              <multibucket>
                <bucket>&quot;Freemansburg&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e23232'>
              <multibucket>
                <bucket>&quot;New Castle&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e23925'>
              <multibucket>
                <bucket>&quot;Mexicali&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e26eb7'>
              <multibucket>
                <bucket>&quot;San Jose&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e33235'>
              <multibucket>
                <bucket>&quot;New Haven&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e33d24'>
              <multibucket>
                <bucket>&quot;Mexicali&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e43338'>
              <multibucket>
                <bucket>&quot;New Haven&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e44123'>
              <multibucket>
                <bucket>&quot;McLean&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e46fb6'>
              <multibucket>
                <bucket>&quot;San Jose&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e4ba21'>
              <multibucket>
                <bucket>&quot;Freemansburg&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e5333b'>
              <multibucket>
                <bucket>&quot;New York&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e54622'>
              <multibucket>
                <bucket>&quot;McLean&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e6343e'>
              <multibucket>
                <bucket>&quot;New York&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e670b5'>
              <multibucket>
                <bucket>&quot;San Francisco&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e74a21'>
              <multibucket>
                <bucket>&quot;Manchester&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e7ba21'>
              <multibucket>
                <bucket>&quot;Fresno&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e83541'>
              <multibucket>
                <bucket>&quot;Newark&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e84e20'>
              <multibucket>
                <bucket>&quot;Manchester&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e871b4'>
              <multibucket>
                <bucket>&quot;San Francisco&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e93544'>
              <multibucket>
                <bucket>&quot;Newark&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e9521f'>
              <multibucket>
                <bucket>&quot;Louisville&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ea3647'>
              <multibucket>
                <bucket>&quot;Norristown&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ea561e'>
              <multibucket>
                <bucket>&quot;Louisville&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ea72b3'>
              <multibucket>
                <bucket>&quot;San Diego&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#eab921'>
              <multibucket>
                <bucket>&quot;Fresno&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#eb364a'>
              <multibucket>
                <bucket>&quot;Norristown&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ec374d'>
              <multibucket>
                <bucket>&quot;North Little Rock&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ec5a1d'>
              <multibucket>
                <bucket>&quot;Los Angeles&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ec73b2'>
              <multibucket>
                <bucket>&quot;San Diego&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ed3850'>
              <multibucket>
                <bucket>&quot;North Little Rock&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ed5e1b'>
              <multibucket>
                <bucket>&quot;Los Angeles&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#edb921'>
              <multibucket>
                <bucket>&quot;Goleta&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ee3853'>
              <multibucket>
                <bucket>&quot;Northbrook&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ee621a'>
              <multibucket>
                <bucket>&quot;Long Beach&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ee74b1'>
              <multibucket>
                <bucket>&quot;San Antonio&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ef3956'>
              <multibucket>
                <bucket>&quot;Northbrook&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ef6619'>
              <multibucket>
                <bucket>&quot;Long Beach&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f03959'>
              <multibucket>
                <bucket>&quot;Not in a city&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f075b0'>
              <multibucket>
                <bucket>&quot;San Antonio&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f0b921'>
              <multibucket>
                <bucket>&quot;Goleta&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f13a5c'>
              <multibucket>
                <bucket>&quot;Not in a city&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f16a18'>
              <multibucket>
                <bucket>&quot;Lompoc&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f23b5f'>
              <multibucket>
                <bucket>&quot;Oakland&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f26e17'>
              <multibucket>
                <bucket>&quot;Lompoc&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f276af'>
              <multibucket>
                <bucket>&quot;Rubidoux&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f33b62'>
              <multibucket>
                <bucket>&quot;Oakland&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f37216'>
              <multibucket>
                <bucket>&quot;Lexington-Fayette (corporate name for Lexington)&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f3b921'>
              <multibucket>
                <bucket>&quot;Grand Rapids&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f43e65'>
              <multibucket>
                <bucket>&quot;Paducah&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f44168'>
              <multibucket>
                <bucket>&quot;Paducah&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f47615'>
              <multibucket>
                <bucket>&quot;Lexington-Fayette (corporate name for Lexington)&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f477ae'>
              <multibucket>
                <bucket>&quot;Rubidoux&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f5446c'>
              <multibucket>
                <bucket>&quot;Park Hill&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f54770'>
              <multibucket>
                <bucket>&quot;Park Hill&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f64a73'>
              <multibucket>
                <bucket>&quot;Philadelphia&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f64e77'>
              <multibucket>
                <bucket>&quot;Philadelphia&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f678ad'>
              <multibucket>
                <bucket>&quot;Rosarito&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f67a14'>
              <multibucket>
                <bucket>&quot;Lancaster&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f6b921'>
              <multibucket>
                <bucket>&quot;Grand Rapids&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f7517a'>
              <multibucket>
                <bucket>&quot;Phoenix&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f7547e'>
              <multibucket>
                <bucket>&quot;Phoenix&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f77e13'>
              <multibucket>
                <bucket>&quot;Lancaster&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f85781'>
              <multibucket>
                <bucket>&quot;Pittsburg&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f85b85'>
              <multibucket>
                <bucket>&quot;Pittsburg&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f879ac'>
              <multibucket>
                <bucket>&quot;Rosarito&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f88213'>
              <multibucket>
                <bucket>&quot;Ladue&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f88514'>
              <multibucket>
                <bucket>&quot;Ladue&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f88814'>
              <multibucket>
                <bucket>&quot;Kenner&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f88a15'>
              <multibucket>
                <bucket>&quot;Kenner&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f88d16'>
              <multibucket>
                <bucket>&quot;Kansas City&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f89016'>
              <multibucket>
                <bucket>&quot;Kansas City&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f89317'>
              <multibucket>
                <bucket>&quot;Johnstown&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f89618'>
              <multibucket>
                <bucket>&quot;Johnstown&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f89818'>
              <multibucket>
                <bucket>&quot;Indianapolis (Remainder)&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f89b19'>
              <multibucket>
                <bucket>&quot;Indianapolis (Remainder)&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f89e1a'>
              <multibucket>
                <bucket>&quot;Houston&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f8a11b'>
              <multibucket>
                <bucket>&quot;Houston&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f8a41b'>
              <multibucket>
                <bucket>&quot;Holtsville&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f8a61c'>
              <multibucket>
                <bucket>&quot;Holtsville&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f8a91d'>
              <multibucket>
                <bucket>&quot;Henderson&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f8ac1d'>
              <multibucket>
                <bucket>&quot;Henderson&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f8af1e'>
              <multibucket>
                <bucket>&quot;Hawthorne&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f8b21f'>
              <multibucket>
                <bucket>&quot;Hawthorne&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f8b520'>
              <multibucket>
                <bucket>&quot;Greensburg&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f8b720'>
              <multibucket>
                <bucket>&quot;Greensburg&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f95e89'>
              <multibucket>
                <bucket>&quot;Pittsburgh&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f9618c'>
              <multibucket>
                <bucket>&quot;Pittsburgh&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fa6490'>
              <multibucket>
                <bucket>&quot;Ponca City&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fa6793'>
              <multibucket>
                <bucket>&quot;Ponca City&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fa7aab'>
              <multibucket>
                <bucket>&quot;Reno&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fb6b97'>
              <multibucket>
                <bucket>&quot;Portland&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fb6e9a'>
              <multibucket>
                <bucket>&quot;Portland&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fc719e'>
              <multibucket>
                <bucket>&quot;Presque Isle&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fc74a1'>
              <multibucket>
                <bucket>&quot;Presque Isle&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fc7baa'>
              <multibucket>
                <bucket>&quot;Reno&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fd77a5'>
              <multibucket>
                <bucket>&quot;Reading&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fd7ba9'>
              <multibucket>
                <bucket>&quot;Reading&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' palette='cyclic_10_0' type='palette'>
            <map to='#1ba3c6'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#1da6c5'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#1fad7f'>
              <bucket>&quot;Camden&quot;</bucket>
            </map>
            <map to='#20a9c4'>
              <bucket>&quot;Annandale&quot;</bucket>
            </map>
            <map to='#21af86'>
              <bucket>&quot;Calumet City (PU RR name Calumet Park (sta.))&quot;</bucket>
            </map>
            <map to='#23ac78'>
              <bucket>&quot;Capitan&quot;</bucket>
            </map>
            <map to='#23acc3'>
              <bucket>&quot;Arden-Arcade&quot;</bucket>
            </map>
            <map to='#23b18c'>
              <bucket>&quot;Calexico&quot;</bucket>
            </map>
            <map to='#25b392'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#26afc2'>
              <bucket>&quot;Ashland&quot;</bucket>
            </map>
            <map to='#27aa71'>
              <bucket>&quot;Charleroi&quot;</bucket>
            </map>
            <map to='#28b598'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#29b2c1'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#2ab79e'>
              <bucket>&quot;Breckenridge Hills&quot;</bucket>
            </map>
            <map to='#2ba96a'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#2bb5c0'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#2db9a4'>
              <bucket>&quot;Boulder City&quot;</bucket>
            </map>
            <map to='#2ea763'>
              <bucket>&quot;Cherry Tree&quot;</bucket>
            </map>
            <map to='#2eb8bf'>
              <bucket>&quot;Baton Rouge&quot;</bucket>
            </map>
            <map to='#2fbbaa'>
              <bucket>&quot;Boston&quot;</bucket>
            </map>
            <map to='#31bbbe'>
              <bucket>&quot;Beaver Falls&quot;</bucket>
            </map>
            <map to='#31bdb0'>
              <bucket>&quot;Bethel Island&quot;</bucket>
            </map>
            <map to='#32a65c'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#34beb6'>
              <bucket>&quot;Berkeley&quot;</bucket>
            </map>
            <map to='#34bebd'>
              <bucket>&quot;Beltsville&quot;</bucket>
            </map>
            <map to='#36a455'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#36c0bc'>
              <bucket>&quot;Benicia&quot;</bucket>
            </map>
            <map to='#3aa34e'>
              <bucket>&quot;Cicero&quot;</bucket>
            </map>
            <map to='#3ea147'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#42a040'>
              <bucket>&quot;Cornwall&quot;</bucket>
            </map>
            <map to='#489f3a'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#4f7cba'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#54a237'>
              <bucket>&quot;Crockett&quot;</bucket>
            </map>
            <map to='#557abb'>
              <bucket>&quot;Winter Park&quot;</bucket>
            </map>
            <map to='#5c79bc'>
              <bucket>&quot;Winston-Salem&quot;</bucket>
            </map>
            <map to='#60a535'>
              <bucket>&quot;Cupertino&quot;</bucket>
            </map>
            <map to='#6278bd'>
              <bucket>&quot;Wilkes-Barre&quot;</bucket>
            </map>
            <map to='#6976be'>
              <bucket>&quot;Westport&quot;</bucket>
            </map>
            <map to='#6ca832'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#6f75bf'>
              <bucket>&quot;West Los Angeles&quot;</bucket>
            </map>
            <map to='#7674c0'>
              <bucket>&quot;Welby&quot;</bucket>
            </map>
            <map to='#78ab30'>
              <bucket>&quot;Davenport&quot;</bucket>
            </map>
            <map to='#7c72c1'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#8371c2'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#84ae2d'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#8970c3'>
              <bucket>&quot;Victorville&quot;</bucket>
            </map>
            <map to='#906ec3'>
              <bucket>&quot;Vandenberg Air Force Base&quot;</bucket>
            </map>
            <map to='#90b12b'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#976ec3'>
              <bucket>&quot;Valrico&quot;</bucket>
            </map>
            <map to='#9cb428'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#9e6dc2'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#a56dc2'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#a8b726'>
              <bucket>&quot;East Hartford&quot;</bucket>
            </map>
            <map to='#ac6cc1'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#b36bc0'>
              <bucket>&quot;Tijuana&quot;</bucket>
            </map>
            <map to='#b4ba23'>
              <bucket>&quot;East Saint Louis&quot;</bucket>
            </map>
            <map to='#ba6bc0'>
              <bucket>&quot;Sunset Hills&quot;</bucket>
            </map>
            <map to='#bebc21'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#c26abf'>
              <bucket>&quot;St. Louis&quot;</bucket>
            </map>
            <map to='#c4bc21'>
              <bucket>&quot;Erie&quot;</bucket>
            </map>
            <map to='#c96abf'>
              <bucket>&quot;St. Ann&quot;</bucket>
            </map>
            <map to='#cabc21'>
              <bucket>&quot;Essex&quot;</bucket>
            </map>
            <map to='#d069be'>
              <bucket>&quot;Seven Corners&quot;</bucket>
            </map>
            <map to='#d0bb21'>
              <bucket>&quot;Eureka&quot;</bucket>
            </map>
            <map to='#d669bd'>
              <bucket>&quot;Scranton&quot;</bucket>
            </map>
            <map to='#d6bb21'>
              <bucket>&quot;Ferguson&quot;</bucket>
            </map>
            <map to='#da6bbb'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#dcba21'>
              <bucket>&quot;Fontana&quot;</bucket>
            </map>
            <map to='#de6db9'>
              <bucket>&quot;San Pablo&quot;</bucket>
            </map>
            <map to='#e0302b'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#e03327'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#e23131'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#e23b25'>
              <bucket>&quot;Mexicali&quot;</bucket>
            </map>
            <map to='#e26fb7'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#e2ba21'>
              <bucket>&quot;Freemansburg&quot;</bucket>
            </map>
            <map to='#e43337'>
              <bucket>&quot;New Haven&quot;</bucket>
            </map>
            <map to='#e54322'>
              <bucket>&quot;McLean&quot;</bucket>
            </map>
            <map to='#e6343d'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#e670b5'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#e74b20'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#e83543'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#e8ba21'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#ea3649'>
              <bucket>&quot;Norristown&quot;</bucket>
            </map>
            <map to='#ea541e'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#ea72b3'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#ec374f'>
              <bucket>&quot;North Little Rock&quot;</bucket>
            </map>
            <map to='#ec5c1c'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#ee74b1'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#eeb921'>
              <bucket>&quot;Goleta&quot;</bucket>
            </map>
            <map to='#ef3955'>
              <bucket>&quot;Northbrook&quot;</bucket>
            </map>
            <map to='#ef641a'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#f13a5b'>
              <bucket>&quot;Not in a city&quot;</bucket>
            </map>
            <map to='#f16c18'>
              <bucket>&quot;Lompoc&quot;</bucket>
            </map>
            <map to='#f276af'>
              <bucket>&quot;Rubidoux&quot;</bucket>
            </map>
            <map to='#f33b61'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#f44067'>
              <bucket>&quot;Paducah&quot;</bucket>
            </map>
            <map to='#f47416'>
              <bucket>&quot;Lexington-Fayette (corporate name for Lexington)&quot;</bucket>
            </map>
            <map to='#f4b921'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#f5466e'>
              <bucket>&quot;Park Hill&quot;</bucket>
            </map>
            <map to='#f64d76'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#f678ad'>
              <bucket>&quot;Rosarito&quot;</bucket>
            </map>
            <map to='#f67c14'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#f7537d'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#f85a84'>
              <bucket>&quot;Pittsburg&quot;</bucket>
            </map>
            <map to='#f88313'>
              <bucket>&quot;Ladue&quot;</bucket>
            </map>
            <map to='#f88915'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#f88f16'>
              <bucket>&quot;Kansas City&quot;</bucket>
            </map>
            <map to='#f89417'>
              <bucket>&quot;Johnstown&quot;</bucket>
            </map>
            <map to='#f89a19'>
              <bucket>&quot;Indianapolis (Remainder)&quot;</bucket>
            </map>
            <map to='#f8a01a'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#f8a51c'>
              <bucket>&quot;Holtsville&quot;</bucket>
            </map>
            <map to='#f8ab1d'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#f8b11f'>
              <bucket>&quot;Hawthorne&quot;</bucket>
            </map>
            <map to='#f8b620'>
              <bucket>&quot;Greensburg&quot;</bucket>
            </map>
            <map to='#f9608b'>
              <bucket>&quot;Pittsburgh&quot;</bucket>
            </map>
            <map to='#fa6792'>
              <bucket>&quot;Ponca City&quot;</bucket>
            </map>
            <map to='#fa7aab'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#fb6d99'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#fc73a1'>
              <bucket>&quot;Presque Isle&quot;</bucket>
            </map>
            <map to='#fd7aa8'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;USA&quot;' />
        <semantic-value key='[County].[Name]' value='%null%' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='global_power_plant_database (global_power_plant_database)' inline='true' name='federated.16rnq7y079v2cy13achj50ego07y' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='global_power_plant_database' name='excel-direct.1u121nx1t1qqrj19sg27j12x4kr7'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Data Analytics/Senior Project/Data/global_power_plant_database.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1u121nx1t1qqrj19sg27j12x4kr7' name='global_power_plant_database' table='[global_power_plant_database$]' type='table'>
          <columns gridOrigin='A1:R10001:no:A1:R10001:0' header='yes' outcome='6'>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='string' name='name' ordinal='1' />
            <column datatype='real' name='capacity_mw' ordinal='2' />
            <column datatype='real' name='latitude' ordinal='3' />
            <column datatype='real' name='longitude' ordinal='4' />
            <column datatype='string' name='primary_fuel' ordinal='5' />
            <column datatype='string' name='other_fuel1' ordinal='6' />
            <column datatype='string' name='other_fuel2' ordinal='7' />
            <column datatype='string' name='other_fuel3' ordinal='8' />
            <column datatype='real' name='commissioning_year' ordinal='9' />
            <column datatype='string' name='source' ordinal='10' />
            <column datatype='integer' name='year_of_capacity_data' ordinal='11' />
            <column datatype='real' name='generation_gwh_2013' ordinal='12' />
            <column datatype='real' name='generation_gwh_2014' ordinal='13' />
            <column datatype='real' name='generation_gwh_2015' ordinal='14' />
            <column datatype='real' name='generation_gwh_2016' ordinal='15' />
            <column datatype='real' name='generation_gwh_2017' ordinal='16' />
            <column datatype='real' name='estimated_generation_gwh' ordinal='17' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[global_power_plant_database]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[global_power_plant_database]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>capacity_mw</remote-name>
            <remote-type>5</remote-type>
            <local-name>[capacity_mw]</local-name>
            <parent-name>[global_power_plant_database]</parent-name>
            <remote-alias>capacity_mw</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[global_power_plant_database]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[global_power_plant_database]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>primary_fuel</remote-name>
            <remote-type>130</remote-type>
            <local-name>[primary_fuel]</local-name>
            <parent-name>[global_power_plant_database]</parent-name>
            <remote-alias>primary_fuel</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_fuel1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[other_fuel1]</local-name>
            <parent-name>[global_power_plant_database]</parent-name>
            <remote-alias>other_fuel1</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_fuel2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[other_fuel2]</local-name>
            <parent-name>[global_power_plant_database]</parent-name>
            <remote-alias>other_fuel2</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_fuel3</remote-name>
            <remote-type>130</remote-type>
            <local-name>[other_fuel3]</local-name>
            <parent-name>[global_power_plant_database]</parent-name>
            <remote-alias>other_fuel3</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>commissioning_year</remote-name>
            <remote-type>5</remote-type>
            <local-name>[commissioning_year]</local-name>
            <parent-name>[global_power_plant_database]</parent-name>
            <remote-alias>commissioning_year</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source</remote-name>
            <remote-type>130</remote-type>
            <local-name>[source]</local-name>
            <parent-name>[global_power_plant_database]</parent-name>
            <remote-alias>source</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year_of_capacity_data</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year_of_capacity_data]</local-name>
            <parent-name>[global_power_plant_database]</parent-name>
            <remote-alias>year_of_capacity_data</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>generation_gwh_2013</remote-name>
            <remote-type>5</remote-type>
            <local-name>[generation_gwh_2013]</local-name>
            <parent-name>[global_power_plant_database]</parent-name>
            <remote-alias>generation_gwh_2013</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>generation_gwh_2014</remote-name>
            <remote-type>5</remote-type>
            <local-name>[generation_gwh_2014]</local-name>
            <parent-name>[global_power_plant_database]</parent-name>
            <remote-alias>generation_gwh_2014</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>generation_gwh_2015</remote-name>
            <remote-type>5</remote-type>
            <local-name>[generation_gwh_2015]</local-name>
            <parent-name>[global_power_plant_database]</parent-name>
            <remote-alias>generation_gwh_2015</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>generation_gwh_2016</remote-name>
            <remote-type>5</remote-type>
            <local-name>[generation_gwh_2016]</local-name>
            <parent-name>[global_power_plant_database]</parent-name>
            <remote-alias>generation_gwh_2016</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>generation_gwh_2017</remote-name>
            <remote-type>5</remote-type>
            <local-name>[generation_gwh_2017]</local-name>
            <parent-name>[global_power_plant_database]</parent-name>
            <remote-alias>generation_gwh_2017</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>estimated_generation_gwh</remote-name>
            <remote-type>5</remote-type>
            <local-name>[estimated_generation_gwh]</local-name>
            <parent-name>[global_power_plant_database]</parent-name>
            <remote-alias>estimated_generation_gwh</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[global_power_plant_database]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:R10001:no:A1:R10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[commissioning_year]' role='dimension' type='quantitative' />
      <column aggregation='None' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='CountD' datatype='string' name='[primary_fuel]' role='dimension' type='nominal' />
      <column datatype='integer' name='[year_of_capacity_data]' role='dimension' type='quantitative' />
      <column-instance column='[primary_fuel]' derivation='Attribute' name='[attr:primary_fuel:nk]' pivot='key' type='nominal' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[primary_fuel]' derivation='None' name='[none:primary_fuel:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.409938' measure-ordering='alphabetic' measure-percentage='0.590062' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' palette='tableau-10' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Antarctica&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Cote DIvoire&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:primary_fuel:nk]' palette='cyclic_10_0' type='palette'>
            <map to='#1ba3c6'>
              <bucket>&quot;Coal&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Biomass&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Geothermal&quot;</bucket>
            </map>
            <map to='#2ea865'>
              <bucket>&quot;Gas&quot;</bucket>
            </map>
            <map to='#4f7cba'>
              <bucket>&quot;Petcoke&quot;</bucket>
            </map>
            <map to='#4f7cba'>
              <bucket>&quot;Wind&quot;</bucket>
            </map>
            <map to='#57a337'>
              <bucket>&quot;Cogeneration&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Solar&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Hydro&quot;</bucket>
            </map>
            <map to='#b36cc1'>
              <bucket>&quot;Wave and Tidal&quot;</bucket>
            </map>
            <map to='#e33233'>
              <bucket>&quot;Oil&quot;</bucket>
            </map>
            <map to='#e670b6'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#e93645'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#ecb921'>
              <bucket>&quot;Nuclear&quot;</bucket>
            </map>
            <map to='#fe7caa'>
              <bucket>&quot;Waste&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:primary_fuel:nk]' palette='cyclic_10_0' type='palette'>
            <map to='#1ba3c6'>
              <bucket>&quot;Coal&quot;</bucket>
            </map>
            <map to='#25b392'>
              <bucket>&quot;Cogeneration&quot;</bucket>
            </map>
            <map to='#2ea865'>
              <bucket>&quot;Gas&quot;</bucket>
            </map>
            <map to='#3ca8bc'>
              <bucket>&quot;Wind&quot;</bucket>
            </map>
            <map to='#4f7cba'>
              <bucket>&quot;Petcoke&quot;</bucket>
            </map>
            <map to='#78ab30'>
              <bucket>&quot;Geothermal&quot;</bucket>
            </map>
            <map to='#8670c2'>
              <bucket>&quot;Wave and Tidal&quot;</bucket>
            </map>
            <map to='#c26abf'>
              <bucket>&quot;Waste&quot;</bucket>
            </map>
            <map to='#e23b25'>
              <bucket>&quot;Solar&quot;</bucket>
            </map>
            <map to='#e33233'>
              <bucket>&quot;Oil&quot;</bucket>
            </map>
            <map to='#e670b6'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#eb364a'>
              <bucket>&quot;Biomass&quot;</bucket>
            </map>
            <map to='#ecb921'>
              <bucket>&quot;Nuclear&quot;</bucket>
            </map>
            <map to='#f9608b'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;Hydro&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='emissions-of-air-pollutants (emissions-of-air-pollutants) (2)' inline='true' name='federated.1negdth1velvj20zroh431nqvxc7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='emissions-of-air-pollutants' name='excel-direct.06jzhjv1l1o3j51ct2rum1ntd740'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Data Analytics/Senior Project/Data/emissions-of-air-pollutants.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.06jzhjv1l1o3j51ct2rum1ntd740' name='emissions-of-air-pollutants' table='[&apos;emissions-of-air-pollutants$&apos;]' type='table'>
          <columns gridOrigin='A1:I79:no:A1:I79:0' header='yes' outcome='6'>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='string' name='Code' ordinal='1' />
            <column datatype='integer' name='Year' ordinal='2' />
            <column datatype='real' name='PM10' ordinal='3' />
            <column datatype='real' name='PM2.5' ordinal='4' />
            <column datatype='real' name='Non-methane volatile organic compounds (Index)' ordinal='5' />
            <column datatype='real' name='Nitrogen oxides (Index)' ordinal='6' />
            <column datatype='real' name='Ammonia (Index)' ordinal='7' />
            <column datatype='real' name='Sulphur dioxide (Index)' ordinal='8' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PM10</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PM10]</local-name>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias>PM10</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PM2.5</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PM2.5]</local-name>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias>PM2.5</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Non-methane volatile organic compounds (Index)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Non-methane volatile organic compounds (Index)]</local-name>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias>Non-methane volatile organic compounds (Index)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nitrogen oxides (Index)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Nitrogen oxides (Index)]</local-name>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias>Nitrogen oxides (Index)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ammonia (Index)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Ammonia (Index)]</local-name>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias>Ammonia (Index)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sulphur dioxide (Index)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sulphur dioxide (Index)]</local-name>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias>Sulphur dioxide (Index)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I79:no:A1:I79:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='real' name='[Ammonia (Index)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Nitrogen oxides (Index)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Non-methane volatile organic compounds (Index)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[PM10]' role='measure' type='quantitative' />
      <column datatype='real' name='[PM2.5]' role='measure' type='quantitative' />
      <column datatype='real' name='[Sulphur dioxide (Index)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column aggregation='None' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column-instance column='[Ammonia (Index)]' derivation='Sum' name='[sum:Ammonia (Index):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Nitrogen oxides (Index)]' derivation='Sum' name='[sum:Nitrogen oxides (Index):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Non-methane volatile organic compounds (Index)]' derivation='Sum' name='[sum:Non-methane volatile organic compounds (Index):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[PM10]' derivation='Sum' name='[sum:PM10:qk]' pivot='key' type='quantitative' />
      <column-instance column='[PM2.5]' derivation='Sum' name='[sum:PM2.5:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sulphur dioxide (Index)]' derivation='Sum' name='[sum:Sulphur dioxide (Index):qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.391304' measure-ordering='alphabetic' measure-percentage='0.608696' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1negdth1velvj20zroh431nqvxc7].[sum:Ammonia (Index):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1negdth1velvj20zroh431nqvxc7].[sum:PM10:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1negdth1velvj20zroh431nqvxc7].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1negdth1velvj20zroh431nqvxc7].[sum:Sulphur dioxide (Index):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1negdth1velvj20zroh431nqvxc7].[sum:Non-methane volatile organic compounds (Index):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1negdth1velvj20zroh431nqvxc7].[sum:PM2.5:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1negdth1velvj20zroh431nqvxc7].[sum:Nitrogen oxides (Index):qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1negdth1velvj20zroh431nqvxc7]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='co2-transport-mode (co2-transport-mode)' inline='true' name='federated.0n8g3ka0foyhu215s8ly51pxgj27' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='co2-transport-mode' name='excel-direct.0vggka90np9l7t1gsrt441v0n1k6'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Data Analytics/Senior Project/Data/co2-transport-mode.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0vggka90np9l7t1gsrt441v0n1k6' name='co2-transport-mode' table='[&apos;co2-transport-mode$&apos;]' type='table'>
          <columns gridOrigin='A1:C40:no:A1:C40:0' header='yes' outcome='6'>
            <column datatype='string' name='Entity' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='CO2 emissions (gCO2/km)' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Entity]</local-name>
            <parent-name>[co2-transport-mode]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[co2-transport-mode]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2 emissions (gCO2/km)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO2 emissions (gCO2/km)]</local-name>
            <parent-name>[co2-transport-mode]</parent-name>
            <remote-alias>CO2 emissions (gCO2/km)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[co2-transport-mode]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C40:no:A1:C40:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.503106' measure-ordering='alphabetic' measure-percentage='0.496894' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='greenhouse_gas_inventory_data_d (greenhouse_gas_inventory_data_data)' inline='true' name='federated.0h8b2o61vxszg414kx4r40ud4c6i' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='greenhouse_gas_inventory_data_data' name='excel-direct.11glz9j04yr6161biqi9h0okclsp'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Data Analytics/Senior Project/Data/greenhouse_gas_inventory_data_data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.11glz9j04yr6161biqi9h0okclsp' name='greenhouse_gas_inventory_data_d' table='[greenhouse_gas_inventory_data_d$]' type='table'>
          <columns gridOrigin='A1:D8407:no:A1:D8407:0' header='yes' outcome='6'>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='integer' date-parse-format='yyyy' name='year' ordinal='1' />
            <column datatype='real' name='value' ordinal='2' />
            <column datatype='string' name='category' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[greenhouse_gas_inventory_data_d]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[greenhouse_gas_inventory_data_d]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[greenhouse_gas_inventory_data_d]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[greenhouse_gas_inventory_data_d]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[greenhouse_gas_inventory_data_d]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D8407:no:A1:D8407:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.447205' measure-ordering='alphabetic' measure-percentage='0.552795' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='global-monthly-temperature-anom (global-monthly-temperature-anomaly)' inline='true' name='federated.1juel6n1dq3l2b1c2oool1rpny2q' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='global-monthly-temperature-anomaly' name='excel-direct.1fgu13r07cv8u61esv8020h1liwp'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Data Analytics/Senior Project/Data/global-monthly-temperature-anomaly.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1fgu13r07cv8u61esv8020h1liwp' name='global-monthly-temperature-anom' table='[&apos;global-monthly-temperature-anom$&apos;]' type='table'>
          <columns gridOrigin='A1:C5107:no:A1:C5107:0' header='yes' outcome='2'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='date' date-parse-format='dd/MM/yyyy|#|#|yyyy-MM-dd' name='Day' ordinal='1' />
            <column datatype='real' name='temperature_anomaly' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[global-monthly-temperature-anom]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C5107:no:A1:C5107:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[global-monthly-temperature-anom]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Day</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Day]</local-name>
            <parent-name>[global-monthly-temperature-anom]</parent-name>
            <remote-alias>Day</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temperature_anomaly</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temperature_anomaly]</local-name>
            <parent-name>[global-monthly-temperature-anom]</parent-name>
            <remote-alias>temperature_anomaly</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.391304' measure-ordering='alphabetic' measure-percentage='0.608696' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='Sheet1 (Earth&apos;s Temperature)' inline='true' name='federated.0r9d3c01gc3fvo19whl3r0pk963r' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Earth&apos;s Temperature' name='excel-direct.0k8g7jl0vfp9lw10e8wk50nhez3l'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Data Analytics/Senior Project/Data/Earth&apos;s Temperature.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0k8g7jl0vfp9lw10e8wk50nhez3l' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D142:no:A1:D142:0' header='yes' outcome='2'>
            <column datatype='string' name='Land-Ocean Temperature Index ©' ordinal='0' />
            <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='1' />
            <column datatype='real' name='No_Smooting' ordinal='2' />
            <column datatype='real' name='Lowess' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Land-Ocean Temperature Index ©</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Land-Ocean Temperature Index ©]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Land-Ocean Temperature Index ©</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>No_Smooting</remote-name>
            <remote-type>5</remote-type>
            <local-name>[No_Smooting]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>No_Smooting</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lowess</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lowess]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Lowess</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D142:no:A1:D142:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='CountD' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.434783' measure-ordering='alphabetic' measure-percentage='0.565217' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='annual-deforestation (annual-deforestation)' inline='true' name='federated.08ko4rp1bkc3tn1ebdp4l1nhumnl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='annual-deforestation' name='excel-direct.1i6b4vc01b9gyn1byil0q1kwbm6k'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Data Analytics/Senior Project/Data/annual-deforestation.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1i6b4vc01b9gyn1byil0q1kwbm6k' name='annual-deforestation' table='[&apos;annual-deforestation$&apos;]' type='table'>
          <columns gridOrigin='A1:C400:no:A1:C400:0' header='yes' outcome='6'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Deforestation' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[annual-deforestation]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[annual-deforestation]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deforestation</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deforestation]</local-name>
            <parent-name>[annual-deforestation]</parent-name>
            <remote-alias>Deforestation</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[annual-deforestation]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C400:no:A1:C400:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Deforestation]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Deforestation]' derivation='Sum' name='[sum:Deforestation:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.391304' measure-ordering='alphabetic' measure-percentage='0.608696' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[none:Country:nk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[sum:Deforestation:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[sum:Number of Records:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Central African Republic&quot;' />
        <semantic-value key='[County].[Name]' value='%null%' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='drivers-forest-loss-brazil-amaz (drivers-forest-loss-brazil-amazon)' inline='true' name='federated.0nwptkc1p8324u1eimeud1o88ar9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='drivers-forest-loss-brazil-amazon' name='excel-direct.0menrs114vjwz61ckja1f0mcgfx3'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Data Analytics/Senior Project/Data/drivers-forest-loss-brazil-amazon.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0menrs114vjwz61ckja1f0mcgfx3' name='drivers-forest-loss-brazil-amaz' table='[&apos;drivers-forest-loss-brazil-amaz$&apos;]' type='table'>
          <columns gridOrigin='A1:M14:no:A1:M14:0' header='yes' outcome='6'>
            <column datatype='string' name='Entity' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='integer' name='commercial_crops' ordinal='2' />
            <column datatype='integer' name='flooding_due_to_dams' ordinal='3' />
            <column datatype='integer' name='natural_disturbances' ordinal='4' />
            <column datatype='integer' name='pasture' ordinal='5' />
            <column datatype='integer' name='selective_logging' ordinal='6' />
            <column datatype='integer' name='fire' ordinal='7' />
            <column datatype='integer' name='mining' ordinal='8' />
            <column datatype='integer' name='other_infrastructure' ordinal='9' />
            <column datatype='integer' name='roads' ordinal='10' />
            <column datatype='integer' name='tree_plantations_including_palm' ordinal='11' />
            <column datatype='integer' name='small-scale_clearing' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Entity]</local-name>
            <parent-name>[drivers-forest-loss-brazil-amaz]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[drivers-forest-loss-brazil-amaz]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>commercial_crops</remote-name>
            <remote-type>20</remote-type>
            <local-name>[commercial_crops]</local-name>
            <parent-name>[drivers-forest-loss-brazil-amaz]</parent-name>
            <remote-alias>commercial_crops</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flooding_due_to_dams</remote-name>
            <remote-type>20</remote-type>
            <local-name>[flooding_due_to_dams]</local-name>
            <parent-name>[drivers-forest-loss-brazil-amaz]</parent-name>
            <remote-alias>flooding_due_to_dams</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>natural_disturbances</remote-name>
            <remote-type>20</remote-type>
            <local-name>[natural_disturbances]</local-name>
            <parent-name>[drivers-forest-loss-brazil-amaz]</parent-name>
            <remote-alias>natural_disturbances</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pasture</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pasture]</local-name>
            <parent-name>[drivers-forest-loss-brazil-amaz]</parent-name>
            <remote-alias>pasture</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>selective_logging</remote-name>
            <remote-type>20</remote-type>
            <local-name>[selective_logging]</local-name>
            <parent-name>[drivers-forest-loss-brazil-amaz]</parent-name>
            <remote-alias>selective_logging</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fire</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fire]</local-name>
            <parent-name>[drivers-forest-loss-brazil-amaz]</parent-name>
            <remote-alias>fire</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mining</remote-name>
            <remote-type>20</remote-type>
            <local-name>[mining]</local-name>
            <parent-name>[drivers-forest-loss-brazil-amaz]</parent-name>
            <remote-alias>mining</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_infrastructure</remote-name>
            <remote-type>20</remote-type>
            <local-name>[other_infrastructure]</local-name>
            <parent-name>[drivers-forest-loss-brazil-amaz]</parent-name>
            <remote-alias>other_infrastructure</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>roads</remote-name>
            <remote-type>20</remote-type>
            <local-name>[roads]</local-name>
            <parent-name>[drivers-forest-loss-brazil-amaz]</parent-name>
            <remote-alias>roads</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tree_plantations_including_palm</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tree_plantations_including_palm]</local-name>
            <parent-name>[drivers-forest-loss-brazil-amaz]</parent-name>
            <remote-alias>tree_plantations_including_palm</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>small-scale_clearing</remote-name>
            <remote-type>20</remote-type>
            <local-name>[small-scale_clearing]</local-name>
            <parent-name>[drivers-forest-loss-brazil-amaz]</parent-name>
            <remote-alias>small-scale_clearing</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[drivers-forest-loss-brazil-amaz]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:M14:no:A1:M14:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[commercial_crops]' role='measure' type='quantitative' />
      <column datatype='integer' name='[fire]' role='measure' type='quantitative' />
      <column datatype='integer' name='[flooding_due_to_dams]' role='measure' type='quantitative' />
      <column datatype='integer' name='[mining]' role='measure' type='quantitative' />
      <column datatype='integer' name='[natural_disturbances]' role='measure' type='quantitative' />
      <column datatype='integer' name='[other_infrastructure]' role='measure' type='quantitative' />
      <column datatype='integer' name='[pasture]' role='measure' type='quantitative' />
      <column datatype='integer' name='[roads]' role='measure' type='quantitative' />
      <column datatype='integer' name='[selective_logging]' role='measure' type='quantitative' />
      <column datatype='integer' name='[small-scale_clearing]' role='measure' type='quantitative' />
      <column datatype='integer' name='[tree_plantations_including_palm]' role='measure' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[commercial_crops]' derivation='Sum' name='[sum:commercial_crops:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fire]' derivation='Sum' name='[sum:fire:qk]' pivot='key' type='quantitative' />
      <column-instance column='[flooding_due_to_dams]' derivation='Sum' name='[sum:flooding_due_to_dams:qk]' pivot='key' type='quantitative' />
      <column-instance column='[mining]' derivation='Sum' name='[sum:mining:qk]' pivot='key' type='quantitative' />
      <column-instance column='[natural_disturbances]' derivation='Sum' name='[sum:natural_disturbances:qk]' pivot='key' type='quantitative' />
      <column-instance column='[other_infrastructure]' derivation='Sum' name='[sum:other_infrastructure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pasture]' derivation='Sum' name='[sum:pasture:qk]' pivot='key' type='quantitative' />
      <column-instance column='[roads]' derivation='Sum' name='[sum:roads:qk]' pivot='key' type='quantitative' />
      <column-instance column='[selective_logging]' derivation='Sum' name='[sum:selective_logging:qk]' pivot='key' type='quantitative' />
      <column-instance column='[small-scale_clearing]' derivation='Sum' name='[sum:small-scale_clearing:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tree_plantations_including_palm]' derivation='Sum' name='[sum:tree_plantations_including_palm:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.391304' measure-ordering='alphabetic' measure-percentage='0.608696' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='cyclic_10_0' type='palette'>
            <map to='#1170aa'>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:fire:qk]&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:small-scale_clearing:qk]&quot;</bucket>
            </map>
            <map to='#1ba3c6'>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:other_infrastructure:qk]&quot;</bucket>
            </map>
            <map to='#2ea865'>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:mining:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:natural_disturbances:qk]&quot;</bucket>
            </map>
            <map to='#e03426'>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:pasture:qk]&quot;</bucket>
            </map>
            <map to='#eb73b3'>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:selective_logging:qk]&quot;</bucket>
            </map>
            <map to='#f7d42a'>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:commercial_crops:qk]&quot;</bucket>
            </map>
            <map to='#f8557f'>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:roads:qk]&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:tree_plantations_including_palm:qk]&quot;</bucket>
            </map>
            <map to='#fd6f30'>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:flooding_due_to_dams:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='primary-energy-consumption-by-s (primary-energy-consumption-by-source)' inline='true' name='federated.01aa8lq04kpily16skfsu0yx1tje' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='primary-energy-consumption-by-source' name='excel-direct.10z69yj0ptiae012toyyl0sfhcow'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Data Analytics/Senior Project/Data/primary-energy-consumption-by-source.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.10z69yj0ptiae012toyyl0sfhcow' name='primary-energy-consumption-by-s' table='[&apos;primary-energy-consumption-by-s$&apos;]' type='table'>
          <columns gridOrigin='A1:J5004:no:A1:J5004:0' header='yes' outcome='6'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Oil Consumption - TWh' ordinal='2' />
            <column datatype='real' name='Gas Consumption - TWh' ordinal='3' />
            <column datatype='real' name='Coal Consumption - TWh' ordinal='4' />
            <column datatype='real' name='Hydro Generation - TWh' ordinal='5' />
            <column datatype='real' name='Solar Generation - TWh' ordinal='6' />
            <column datatype='real' name='Wind Generation - TWh' ordinal='7' />
            <column datatype='real' name='Nuclear Generation - TWh' ordinal='8' />
            <column datatype='real' name='Geo Biomass Other - TWh' ordinal='9' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[primary-energy-consumption-by-s]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[primary-energy-consumption-by-s]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Oil Consumption - TWh</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Oil Consumption - TWh]</local-name>
            <parent-name>[primary-energy-consumption-by-s]</parent-name>
            <remote-alias>Oil Consumption - TWh</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gas Consumption - TWh</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Gas Consumption - TWh]</local-name>
            <parent-name>[primary-energy-consumption-by-s]</parent-name>
            <remote-alias>Gas Consumption - TWh</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Coal Consumption - TWh</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Coal Consumption - TWh]</local-name>
            <parent-name>[primary-energy-consumption-by-s]</parent-name>
            <remote-alias>Coal Consumption - TWh</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hydro Generation - TWh</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Hydro Generation - TWh]</local-name>
            <parent-name>[primary-energy-consumption-by-s]</parent-name>
            <remote-alias>Hydro Generation - TWh</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Solar Generation - TWh</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Solar Generation - TWh]</local-name>
            <parent-name>[primary-energy-consumption-by-s]</parent-name>
            <remote-alias>Solar Generation - TWh</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wind Generation - TWh</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Wind Generation - TWh]</local-name>
            <parent-name>[primary-energy-consumption-by-s]</parent-name>
            <remote-alias>Wind Generation - TWh</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nuclear Generation - TWh</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Nuclear Generation - TWh]</local-name>
            <parent-name>[primary-energy-consumption-by-s]</parent-name>
            <remote-alias>Nuclear Generation - TWh</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Geo Biomass Other - TWh</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Geo Biomass Other - TWh]</local-name>
            <parent-name>[primary-energy-consumption-by-s]</parent-name>
            <remote-alias>Geo Biomass Other - TWh</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[primary-energy-consumption-by-s]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:J5004:no:A1:J5004:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='real' name='[Coal Consumption - TWh]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Gas Consumption - TWh]' role='measure' type='quantitative' />
      <column datatype='real' name='[Geo Biomass Other - TWh]' role='measure' type='quantitative' />
      <column datatype='real' name='[Hydro Generation - TWh]' role='measure' type='quantitative' />
      <column datatype='real' name='[Nuclear Generation - TWh]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Oil Consumption - TWh]' role='measure' type='quantitative' />
      <column datatype='real' name='[Solar Generation - TWh]' role='measure' type='quantitative' />
      <column datatype='real' name='[Wind Generation - TWh]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Coal Consumption - TWh]' derivation='Attribute' name='[attr:Coal Consumption - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Gas Consumption - TWh]' derivation='Attribute' name='[attr:Gas Consumption - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Geo Biomass Other - TWh]' derivation='Attribute' name='[attr:Geo Biomass Other - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Hydro Generation - TWh]' derivation='Attribute' name='[attr:Hydro Generation - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Nuclear Generation - TWh]' derivation='Attribute' name='[attr:Nuclear Generation - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Oil Consumption - TWh]' derivation='Attribute' name='[attr:Oil Consumption - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Solar Generation - TWh]' derivation='Attribute' name='[attr:Solar Generation - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Wind Generation - TWh]' derivation='Attribute' name='[attr:Wind Generation - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Coal Consumption - TWh]' derivation='Count' name='[cnt:Coal Consumption - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Gas Consumption - TWh]' derivation='Count' name='[cnt:Gas Consumption - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Geo Biomass Other - TWh]' derivation='Count' name='[cnt:Geo Biomass Other - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Hydro Generation - TWh]' derivation='Count' name='[cnt:Hydro Generation - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Nuclear Generation - TWh]' derivation='Count' name='[cnt:Nuclear Generation - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Oil Consumption - TWh]' derivation='Count' name='[cnt:Oil Consumption - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Solar Generation - TWh]' derivation='Count' name='[cnt:Solar Generation - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Wind Generation - TWh]' derivation='Count' name='[cnt:Wind Generation - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Coal Consumption - TWh]' derivation='CountD' name='[ctd:Coal Consumption - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Gas Consumption - TWh]' derivation='CountD' name='[ctd:Gas Consumption - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Geo Biomass Other - TWh]' derivation='CountD' name='[ctd:Geo Biomass Other - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Hydro Generation - TWh]' derivation='CountD' name='[ctd:Hydro Generation - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Nuclear Generation - TWh]' derivation='CountD' name='[ctd:Nuclear Generation - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Oil Consumption - TWh]' derivation='CountD' name='[ctd:Oil Consumption - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Solar Generation - TWh]' derivation='CountD' name='[ctd:Solar Generation - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Wind Generation - TWh]' derivation='CountD' name='[ctd:Wind Generation - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Coal Consumption - TWh]' derivation='Sum' name='[sum:Coal Consumption - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Gas Consumption - TWh]' derivation='Sum' name='[sum:Gas Consumption - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Geo Biomass Other - TWh]' derivation='Sum' name='[sum:Geo Biomass Other - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Hydro Generation - TWh]' derivation='Sum' name='[sum:Hydro Generation - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Nuclear Generation - TWh]' derivation='Sum' name='[sum:Nuclear Generation - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Oil Consumption - TWh]' derivation='Sum' name='[sum:Oil Consumption - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Solar Generation - TWh]' derivation='Sum' name='[sum:Solar Generation - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Wind Generation - TWh]' derivation='Sum' name='[sum:Wind Generation - TWh:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.391304' measure-ordering='alphabetic' measure-percentage='0.608696' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[attr:Oil Consumption - TWh:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[cnt:Oil Consumption - TWh:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[ctd:Oil Consumption - TWh:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[sum:Oil Consumption - TWh:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[attr:Hydro Generation - TWh:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[cnt:Hydro Generation - TWh:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[ctd:Hydro Generation - TWh:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[sum:Hydro Generation - TWh:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[attr:Nuclear Generation - TWh:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[cnt:Nuclear Generation - TWh:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[ctd:Nuclear Generation - TWh:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[sum:Nuclear Generation - TWh:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[attr:Gas Consumption - TWh:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[cnt:Gas Consumption - TWh:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[ctd:Gas Consumption - TWh:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[sum:Gas Consumption - TWh:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[attr:Wind Generation - TWh:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[cnt:Wind Generation - TWh:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[ctd:Wind Generation - TWh:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[sum:Wind Generation - TWh:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[attr:Geo Biomass Other - TWh:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[cnt:Geo Biomass Other - TWh:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[ctd:Geo Biomass Other - TWh:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[sum:Geo Biomass Other - TWh:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[attr:Solar Generation - TWh:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[cnt:Solar Generation - TWh:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[ctd:Solar Generation - TWh:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[sum:Solar Generation - TWh:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[attr:Coal Consumption - TWh:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[cnt:Coal Consumption - TWh:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[ctd:Coal Consumption - TWh:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[sum:Coal Consumption - TWh:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='fossil-electricity-per-capita (fossil-electricity-per-capita)' inline='true' name='federated.1gk4jrf1xn51cn1acxvni1y0y642' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='fossil-electricity-per-capita' name='excel-direct.1p2g7wg0fo3lid12cnbma13kf5o4'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Data Analytics/Senior Project/Data/fossil-electricity-per-capita.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1p2g7wg0fo3lid12cnbma13kf5o4' name='fossil-electricity-per-capita' table='[&apos;fossil-electricity-per-capita$&apos;]' type='table'>
          <columns gridOrigin='A1:C4780:no:A1:C4780:0' header='yes' outcome='6'>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='real' name='Fossil fuel electricity per capita (kWh)' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[fossil-electricity-per-capita]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[fossil-electricity-per-capita]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fossil fuel electricity per capita (kWh)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fossil fuel electricity per capita (kWh)]</local-name>
            <parent-name>[fossil-electricity-per-capita]</parent-name>
            <remote-alias>Fossil fuel electricity per capita (kWh)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[fossil-electricity-per-capita]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C4780:no:A1:C4780:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.391304' measure-ordering='alphabetic' measure-percentage='0.608696' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='%null%' />
        <semantic-value key='[County].[Name]' value='%null%' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='global-energy-use-and-energy-re (global-energy-use-and-energy-related-co2-emissions-by-sector-2020)' inline='true' name='federated.0b3hmbr0eai96h15v83u00vr57p1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='global-energy-use-and-energy-related-co2-emissions-by-sector-2020' name='excel-direct.0qqqwnn0d5umwo1e21agd0f6raxn'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Data Analytics/Senior Project/Data/global-energy-use-and-energy-related-co2-emissions-by-sector-2020.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0qqqwnn0d5umwo1e21agd0f6raxn' name='global-energy-use-and-energy-re' table='[&apos;global-energy-use-and-energy-re$&apos;]' type='table'>
          <columns gridOrigin='A1:C12:no:A1:C12:0' header='yes' outcome='6'>
            <column datatype='string' name='Types' ordinal='0' />
            <column datatype='integer' name='Energy use' ordinal='1' />
            <column datatype='integer' name='Emissions' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Types</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Types]</local-name>
            <parent-name>[global-energy-use-and-energy-re]</parent-name>
            <remote-alias>Types</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy use</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Energy use]</local-name>
            <parent-name>[global-energy-use-and-energy-re]</parent-name>
            <remote-alias>Energy use</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Emissions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Emissions]</local-name>
            <parent-name>[global-energy-use-and-energy-re]</parent-name>
            <remote-alias>Emissions</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[global-energy-use-and-energy-re]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C12:no:A1:C12:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Emissions]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Energy use]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Types]' role='dimension' type='nominal' />
      <column-instance column='[Types]' derivation='None' name='[none:Types:nk]' pivot='key' type='nominal' />
      <column-instance column='[Emissions]' derivation='Sum' name='[sum:Emissions:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Energy use]' derivation='Sum' name='[sum:Energy use:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.242236' measure-ordering='alphabetic' measure-percentage='0.757764' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0b3hmbr0eai96h15v83u00vr57p1].[sum:Emissions:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0b3hmbr0eai96h15v83u00vr57p1].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0b3hmbr0eai96h15v83u00vr57p1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0b3hmbr0eai96h15v83u00vr57p1].[sum:Energy use:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Types:nk]' palette='cyclic_10_0' type='palette'>
            <map to='#1ba3c6'>
              <bucket>&quot;Building construction industry&quot;</bucket>
            </map>
            <map to='#2ea865'>
              <bucket>&quot;Non-residential (direct)&quot;</bucket>
            </map>
            <map to='#32bdb1'>
              <bucket>&quot;Non-residential&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Emissions&quot;</bucket>
            </map>
            <map to='#4f7cba'>
              <bucket>&quot;Transport&quot;</bucket>
            </map>
            <map to='#8cb12c'>
              <bucket>&quot;Non-residential (indirect)&quot;</bucket>
            </map>
            <map to='#9e6dc2'>
              <bucket>&quot;Residential (indirect)&quot;</bucket>
            </map>
            <map to='#e33233'>
              <bucket>&quot;Other industry&quot;</bucket>
            </map>
            <map to='#e670b6'>
              <bucket>&quot;Residential (direct)&quot;</bucket>
            </map>
            <map to='#ecb921'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Energy use&quot;</bucket>
            </map>
            <map to='#f8557f'>
              <bucket>&quot;Residential&quot;</bucket>
            </map>
            <map to='#f88113'>
              <bucket>&quot;Other construction industry&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='global-electric-car-sales-by-ke (global-electric-car-sales-by-key-markets-2010-2020)' inline='true' name='federated.0wsc9uc02jgx4d13u6t3e0ts0yt8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='global-electric-car-sales-by-key-markets-2010-2020' name='excel-direct.0z9qvk60f4jwai14s0qvf0d0x6wi'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Data Analytics/Senior Project/Data/global-electric-car-sales-by-key-markets-2010-2020.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0z9qvk60f4jwai14s0qvf0d0x6wi' name='global-electric-car-sales-by-ke' table='[&apos;global-electric-car-sales-by-ke$&apos;]' type='table'>
          <columns gridOrigin='A1:H12:no:A1:H12:0' header='yes' outcome='6'>
            <column datatype='integer' name='Years' ordinal='0' />
            <column datatype='real' name='China' ordinal='1' />
            <column datatype='real' name='USA' ordinal='2' />
            <column datatype='real' name='Europe' ordinal='3' />
            <column datatype='real' name='Japan' ordinal='4' />
            <column datatype='real' name='Rest of the Earth' ordinal='5' />
            <column datatype='real' name='World' ordinal='6' />
            <column datatype='real' name='Market Share' ordinal='7' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Years</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Years]</local-name>
            <parent-name>[global-electric-car-sales-by-ke]</parent-name>
            <remote-alias>Years</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>China</remote-name>
            <remote-type>5</remote-type>
            <local-name>[China]</local-name>
            <parent-name>[global-electric-car-sales-by-ke]</parent-name>
            <remote-alias>China</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>USA</remote-name>
            <remote-type>5</remote-type>
            <local-name>[USA]</local-name>
            <parent-name>[global-electric-car-sales-by-ke]</parent-name>
            <remote-alias>USA</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Europe</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Europe]</local-name>
            <parent-name>[global-electric-car-sales-by-ke]</parent-name>
            <remote-alias>Europe</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Japan</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Japan]</local-name>
            <parent-name>[global-electric-car-sales-by-ke]</parent-name>
            <remote-alias>Japan</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rest of the Earth</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Rest of the Earth]</local-name>
            <parent-name>[global-electric-car-sales-by-ke]</parent-name>
            <remote-alias>Rest of the Earth</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>World</remote-name>
            <remote-type>5</remote-type>
            <local-name>[World]</local-name>
            <parent-name>[global-electric-car-sales-by-ke]</parent-name>
            <remote-alias>World</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market Share</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Market Share]</local-name>
            <parent-name>[global-electric-car-sales-by-ke]</parent-name>
            <remote-alias>Market Share</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[global-electric-car-sales-by-ke]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H12:no:A1:H12:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[China]' role='measure' type='quantitative' />
      <column datatype='real' name='[Europe]' role='measure' type='quantitative' />
      <column datatype='real' name='[Japan]' role='measure' type='quantitative' />
      <column caption='Market Share' datatype='real' name='[Market Share (copy)_686798982843633664]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Market Share]' />
      </column>
      <column aggregation='Sum' caption='Market Share1' datatype='real' name='[Market Share]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Rest of the Earth]' role='measure' type='quantitative' />
      <column datatype='real' name='[USA]' role='measure' type='quantitative' />
      <column datatype='real' name='[World]' role='measure' type='quantitative' />
      <column-instance column='[China]' derivation='Attribute' name='[attr:China:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Europe]' derivation='Attribute' name='[attr:Europe:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Japan]' derivation='Attribute' name='[attr:Japan:qk]' pivot='key' type='quantitative' />
      <column-instance column='[USA]' derivation='Attribute' name='[attr:USA:qk]' pivot='key' type='quantitative' />
      <column-instance column='[World]' derivation='Attribute' name='[attr:World:qk]' pivot='key' type='quantitative' />
      <column-instance column='[World]' derivation='CountD' name='[ctd:World:qk]' pivot='key' type='quantitative' />
      <column-instance column='[China]' derivation='Sum' name='[sum:China:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Europe]' derivation='Sum' name='[sum:Europe:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Japan]' derivation='Sum' name='[sum:Japan:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Market Share (copy)_686798982843633664]' derivation='Sum' name='[sum:Market Share (copy)_686798982843633664:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Rest of the Earth]' derivation='Sum' name='[sum:Rest of the Earth:qk]' pivot='key' type='quantitative' />
      <column-instance column='[USA]' derivation='Sum' name='[sum:USA:qk]' pivot='key' type='quantitative' />
      <column-instance column='[World]' derivation='Sum' name='[sum:World:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.223602' measure-ordering='alphabetic' measure-percentage='0.776398' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='red_10_0' type='palette'>
            <map to='#2cb5c0'>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[attr:China:qk]&quot;</bucket>
            </map>
            <map to='#2cb5c0'>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:China:qk]&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[attr:Rest of the world:qk]&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Rest of the Earth:qk]&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Rest of the world:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[attr:Japan:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Japan:qk]&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[attr:Europe:qk]&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Europe:qk]&quot;</bucket>
            </map>
            <map to='#f64971'>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[attr:World:qk]&quot;</bucket>
            </map>
            <map to='#f77b66'>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[ctd:World:qk]&quot;</bucket>
            </map>
            <map to='#f77b66'>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:World:qk]&quot;</bucket>
            </map>
            <map to='#f8b620'>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[attr:USA:qk]&quot;</bucket>
            </map>
            <map to='#f8b620'>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:USA:qk]&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Market Share (copy)_686798982843633664:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Electricity From Fossil Fuel' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Annual Deforestation '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt; Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='annual-deforestation (annual-deforestation)' name='federated.08ko4rp1bkc3tn1ebdp4l1nhumnl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.08ko4rp1bkc3tn1ebdp4l1nhumnl'>
            <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Deforestation]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deforestation]' derivation='Sum' name='[sum:Deforestation:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[Longitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[none:Year:qk]' included-values='in-range'>
            <min>1990</min>
            <max>2015</max>
          </filter>
          <slices>
            <column>[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[Latitude (generated)]</column>
            <column>[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[Longitude (generated)]</column>
            <column>[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[Longitude (generated)]' field-type='quantitative' max='25037578.217433158' min='-20929067.681764383' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[Latitude (generated)]' field-type='quantitative' max='17733675.745338343' min='-8792082.7956124172' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[sum:Deforestation:qk]' max='1500000.0' min='1000.0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[none:Country:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[sum:Deforestation:qk]' />
              <lod column='[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[none:Country:nk]' />
              <geometry column='[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='4.4617786407470703' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[Latitude (generated)]</rows>
        <cols>[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A41F2AEE-C16E-4B44-98AA-52F53C209714}' />
    </worksheet>
    <worksheet name='CO2 Transport Emission'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt; In gCO2 Per Km</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='co2-transport-mode (co2-transport-mode)' name='federated.0n8g3ka0foyhu215s8ly51pxgj27' />
          </datasources>
          <datasource-dependencies datasource='federated.0n8g3ka0foyhu215s8ly51pxgj27'>
            <column datatype='real' name='[CO2 emissions (gCO2/km)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[CO2 emissions (gCO2/km)]' derivation='Sum' name='[sum:CO2 emissions (gCO2/km):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]' />
              <color column='[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]' />
              <text column='[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]' />
              <text column='[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Taxi&quot;</value>
                <value>148.85999999999899</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Small electric vehicle (UK electricity)&quot;</value>
                <value>45.310000000000002</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Small car (plug-in hybrid electric)&quot;</value>
                <value>29.18</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Small car (petrol)&quot;</value>
                <value>153.00999999999999</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Small car (hybrid)&quot;</value>
                <value>104.09</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='5' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Small car (diesel)&quot;</value>
                <value>140.24000000000001</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='6' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Short-haul flight (economy)&quot;</value>
                <value>81.549999999999997</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='7' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Short-haul flight (business class)&quot;</value>
                <value>122.33</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='8' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Petrol car, 4 passengers&quot;</value>
                <value>47.895000000000003</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='9' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Petrol car, 2 passengers&quot;</value>
                <value>95.790000000000006</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='10' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;National rail&quot;</value>
                <value>40.770000000000003</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='11' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Motorcycle (small)&quot;</value>
                <value>82.409999999999997</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='12' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Motorcycle (medium)&quot;</value>
                <value>100.04000000000001</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='13' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Motorcycle (large)&quot;</value>
                <value>133.08000000000001</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='14' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Medium electric vehicle (UK electricity)&quot;</value>
                <value>52.75</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='15' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Medium car (plug-in hybrid electric)&quot;</value>
                <value>70.400000000000006</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='16' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Medium car (petrol)&quot;</value>
                <value>191.58000000000001</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='17' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Medium car (hybrid)&quot;</value>
                <value>107.64</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='18' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Medium car (diesel)&quot;</value>
                <value>168.77000000000001</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='19' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Long-haul flight (first class)&quot;</value>
                <value>313.81999999999999</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='20' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Long-haul flight (economy+)&quot;</value>
                <value>125.53</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='21' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Long-haul flight (economy)&quot;</value>
                <value>78.450000000000003</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='22' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Long-haul flight (business class)&quot;</value>
                <value>227.52000000000001</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='23' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;London Underground&quot;</value>
                <value>30.59</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='24' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Light rail and tram&quot;</value>
                <value>34.799999999999997</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='25' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Large electric vehicle (UK electricity)&quot;</value>
                <value>66.349999999999994</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='26' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Large car (plug-in hybrid electric)&quot;</value>
                <value>76.849999999999994</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='27' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Large car (petrol)&quot;</value>
                <value>282.25</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='28' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Large car (hybrid)&quot;</value>
                <value>130.22</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='29' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Large car (diesel)&quot;</value>
                <value>207.63</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='30' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Ferry (foot passenger)&quot;</value>
                <value>18.48</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='31' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Ferry (car passenger)&quot;</value>
                <value>127.738999999999</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='32' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Eurostar (international rail)&quot;</value>
                <value>5.9199999999999999</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='33' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Domestic flight&quot;</value>
                <value>133.44999999999999</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='34' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Diesel car, 4 passengers&quot;</value>
                <value>42.192500000000003</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='35' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Diesel car, 2 passengers&quot;</value>
                <value>84.385000000000005</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='36' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Coach&quot;</value>
                <value>27.279999999999902</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='37' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Bus&quot;</value>
                <value>103.91</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='38' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Black cab (taxi)&quot;</value>
                <value>210.53</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{6E5E286E-BC6D-408B-A649-A7E1F82E2269}' />
    </worksheet>
    <worksheet name='Earth Temperature'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Earth&apos;s Daily Temperature From 1880 to 2021</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='global-monthly-temperature-anom (global-monthly-temperature-anomaly)' name='federated.1juel6n1dq3l2b1c2oool1rpny2q' />
          </datasources>
          <datasource-dependencies datasource='federated.1juel6n1dq3l2b1c2oool1rpny2q'>
            <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Day]' role='dimension' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[temperature_anomaly]' derivation='Sum' name='[sum:temperature_anomaly:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Day]' derivation='Day-Trunc' name='[tdy:Day:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[temperature_anomaly]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1juel6n1dq3l2b1c2oool1rpny2q].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;World&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1juel6n1dq3l2b1c2oool1rpny2q].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1juel6n1dq3l2b1c2oool1rpny2q].[tdy:Day:qk]' value='#ffffff' />
            <format attr='background-color' field='[federated.1juel6n1dq3l2b1c2oool1rpny2q].[sum:temperature_anomaly:qk]' value='#ffffff' />
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='background-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1juel6n1dq3l2b1c2oool1rpny2q].[tdy:Day:qk]' value='bold' />
            <format attr='font-weight' field='[federated.1juel6n1dq3l2b1c2oool1rpny2q].[sum:temperature_anomaly:qk]' value='bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1juel6n1dq3l2b1c2oool1rpny2q].[sum:temperature_anomaly:qk]' max='1.8999999999999999' min='-0.5' num-steps='4' palette='orange_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='total' scope='cols' value='#00000000' />
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-style' scope='cols' value='none' />
            <format attr='band-color' scope='rows' value='#000000' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#000000' />
            <format attr='band-color' scope='cols' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1juel6n1dq3l2b1c2oool1rpny2q].[sum:temperature_anomaly:qk]' />
              <size column='[federated.1juel6n1dq3l2b1c2oool1rpny2q].[sum:temperature_anomaly:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.16392265260219574' />
                <format attr='mark-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1juel6n1dq3l2b1c2oool1rpny2q].[sum:temperature_anomaly:qk]</rows>
        <cols>[federated.1juel6n1dq3l2b1c2oool1rpny2q].[tdy:Day:qk]</cols>
      </table>
      <simple-id uuid='{8C702B3F-023F-4D81-AC1B-B94E49704886}' />
    </worksheet>
    <worksheet name='Electricity From Fossil Fuel'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Electricity Generation From Fossil Fuels Per Capita</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run fontname='Lato,Helvetica Neue,Arial,sans-serif'>This Graph represents the average amount of electricity produced from fossil fuels between the year 2000 and 2019. (Electricity from fossil fuels is the sum of electricity generation from coal, oil and gas.) We can see that the top 3 countries that generated the most electricity from fossil fuels are: The United States Of America, Australia and Saudi Arabia</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='fossil-electricity-per-capita (fossil-electricity-per-capita)' name='federated.1gk4jrf1xn51cn1acxvni1y0y642' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1gk4jrf1xn51cn1acxvni1y0y642'>
            <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Fossil fuel electricity per capita (kWh)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Fossil fuel electricity per capita (kWh)]' derivation='Avg' name='[avg:Fossil fuel electricity per capita (kWh):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[Longitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Year:qk]' included-values='in-range'>
            <min>1985</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.1gk4jrf1xn51cn1acxvni1y0y642].[Latitude (generated)]</column>
            <column>[federated.1gk4jrf1xn51cn1acxvni1y0y642].[Longitude (generated)]</column>
            <column>[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[Longitude (generated)]' field-type='quantitative' max='36568368.465981379' min='-40549542.038381137' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[Latitude (generated)]' field-type='quantitative' max='18283963.821257763' min='-17089479.425594259' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[avg:Fossil fuel electricity per capita (kWh):qk]' max='10000.0' num-steps='6' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Country:nk]' value='false' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Country:nk]' />
              <color column='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[avg:Fossil fuel electricity per capita (kWh):qk]' />
              <geometry column='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gk4jrf1xn51cn1acxvni1y0y642].[Latitude (generated)]</rows>
        <cols>[federated.1gk4jrf1xn51cn1acxvni1y0y642].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1B7EBF9B-2DC0-40C7-A6F3-7D75CFE8BDA5}' />
    </worksheet>
    <worksheet name='Electricity generation from Power Plants'>
      <table>
        <view>
          <datasources>
            <datasource caption='primary-energy-consumption-by-s (primary-energy-consumption-by-source)' name='federated.01aa8lq04kpily16skfsu0yx1tje' />
          </datasources>
          <datasource-dependencies datasource='federated.01aa8lq04kpily16skfsu0yx1tje'>
            <column datatype='real' name='[Coal Consumption - TWh]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Gas Consumption - TWh]' role='measure' type='quantitative' />
            <column datatype='real' name='[Geo Biomass Other - TWh]' role='measure' type='quantitative' />
            <column datatype='real' name='[Hydro Generation - TWh]' role='measure' type='quantitative' />
            <column datatype='real' name='[Nuclear Generation - TWh]' role='measure' type='quantitative' />
            <column datatype='real' name='[Oil Consumption - TWh]' role='measure' type='quantitative' />
            <column datatype='real' name='[Solar Generation - TWh]' role='measure' type='quantitative' />
            <column datatype='real' name='[Wind Generation - TWh]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Coal Consumption - TWh]' derivation='Sum' name='[sum:Coal Consumption - TWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gas Consumption - TWh]' derivation='Sum' name='[sum:Gas Consumption - TWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Geo Biomass Other - TWh]' derivation='Sum' name='[sum:Geo Biomass Other - TWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Hydro Generation - TWh]' derivation='Sum' name='[sum:Hydro Generation - TWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Nuclear Generation - TWh]' derivation='Sum' name='[sum:Nuclear Generation - TWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Oil Consumption - TWh]' derivation='Sum' name='[sum:Oil Consumption - TWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Solar Generation - TWh]' derivation='Sum' name='[sum:Solar Generation - TWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Wind Generation - TWh]' derivation='Sum' name='[sum:Wind Generation - TWh:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01aa8lq04kpily16skfsu0yx1tje].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[sum:Coal Consumption - TWh:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[sum:Gas Consumption - TWh:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[sum:Geo Biomass Other - TWh:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[sum:Hydro Generation - TWh:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[sum:Nuclear Generation - TWh:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[sum:Oil Consumption - TWh:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[sum:Solar Generation - TWh:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[sum:Wind Generation - TWh:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01aa8lq04kpily16skfsu0yx1tje].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;World&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.01aa8lq04kpily16skfsu0yx1tje].[none:Year:qk]' included-values='in-range'>
            <min>1965</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.01aa8lq04kpily16skfsu0yx1tje].[none:Country:nk]</column>
            <column>[federated.01aa8lq04kpily16skfsu0yx1tje].[:Measure Names]</column>
            <column>[federated.01aa8lq04kpily16skfsu0yx1tje].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01aa8lq04kpily16skfsu0yx1tje].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.01aa8lq04kpily16skfsu0yx1tje].[Multiple Values]</rows>
        <cols>[federated.01aa8lq04kpily16skfsu0yx1tje].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{C0C614F8-63E5-48F4-A1B3-BB44B1F67010}' />
    </worksheet>
    <worksheet name='Global Electric Car Sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Global Electric Car Sales By Key Markets 2010-2020</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='global-electric-car-sales-by-ke (global-electric-car-sales-by-key-markets-2010-2020)' name='federated.0wsc9uc02jgx4d13u6t3e0ts0yt8' />
          </datasources>
          <datasource-dependencies datasource='federated.0wsc9uc02jgx4d13u6t3e0ts0yt8'>
            <column datatype='real' name='[China]' role='measure' type='quantitative' />
            <column datatype='real' name='[Europe]' role='measure' type='quantitative' />
            <column datatype='real' name='[Japan]' role='measure' type='quantitative' />
            <column caption='Market Share' datatype='real' name='[Market Share (copy)_686798982843633664]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Market Share]' />
            </column>
            <column aggregation='Sum' caption='Market Share1' datatype='real' name='[Market Share]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Rest of the Earth]' role='measure' type='quantitative' />
            <column datatype='real' name='[USA]' role='measure' type='quantitative' />
            <column datatype='real' name='[World]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Years]' role='measure' type='quantitative' />
            <column-instance column='[Years]' derivation='None' name='[none:Years:qk]' pivot='key' type='quantitative' />
            <column-instance column='[China]' derivation='Sum' name='[sum:China:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Europe]' derivation='Sum' name='[sum:Europe:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Japan]' derivation='Sum' name='[sum:Japan:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Market Share (copy)_686798982843633664]' derivation='Sum' name='[sum:Market Share (copy)_686798982843633664:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rest of the Earth]' derivation='Sum' name='[sum:Rest of the Earth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[USA]' derivation='Sum' name='[sum:USA:qk]' pivot='key' type='quantitative' />
            <column-instance column='[World]' derivation='Sum' name='[sum:World:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Rest of the Earth:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Japan:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Europe:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:USA:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:China:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:World:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Rest of the Earth:qk]&quot;</bucket>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Japan:qk]&quot;</bucket>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Europe:qk]&quot;</bucket>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:USA:qk]&quot;</bucket>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:China:qk]&quot;</bucket>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:World:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:China:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Europe:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Japan:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[:Measure Names]</column>
            <column>[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:China:qk]</column>
            <column>[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Europe:qk]</column>
            <column>[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Japan:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Market Share (copy)_686798982843633664:qk]' field-type='quantitative' fold='true' max='3.5' min='0.0' minor-show='false' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[Multiple Values]' field-type='quantitative' max='2.7999999999999998' min='0.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[none:Years:qk]' field-type='quantitative' minor-origin='0' minor-show='false' minor-spacing='1' scope='cols' type='space' />
            <format attr='auto-subtitle' class='0' field='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Market Share (copy)_686798982843633664:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[Multiple Values]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Market Share (copy)_686798982843633664:qk]' value='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' />
            <format attr='text-orientation' field='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Market Share (copy)_686798982843633664:qk]' value='0' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-weight' field='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Market Share (copy)_686798982843633664:qk]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[:Measure Names]' />
              <lod column='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='0.5' mark-alignment='mark-alignment-center' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='true' />
            <encodings>
              <color column='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[:Measure Names]' />
              <lod column='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='size' value='1.9890055656433105' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Market Share (copy)_686798982843633664:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[:Measure Names]' />
              <lod column='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='on' />
                <format attr='vertical-align' value='bottom' />
                <format attr='text-align' value='right' />
                <format attr='text-orientation' value='0' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='shape' value=':filled/circle' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[Multiple Values] + [federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Market Share (copy)_686798982843633664:qk])</rows>
        <cols>[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[none:Years:qk]</cols>
      </table>
      <simple-id uuid='{4F3F293F-45D3-46BD-8D10-0524E7A2A580}' />
    </worksheet>
    <worksheet name='Global Energy Use'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Global Energy Use And Energy Related CO2 Emissions By Sector 2020</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='global-energy-use-and-energy-re (global-energy-use-and-energy-related-co2-emissions-by-sector-2020)' name='federated.0b3hmbr0eai96h15v83u00vr57p1' />
          </datasources>
          <datasource-dependencies datasource='federated.0b3hmbr0eai96h15v83u00vr57p1'>
            <column datatype='integer' name='[Emissions]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Energy use]' role='measure' type='quantitative' />
            <column datatype='string' name='[Types]' role='dimension' type='nominal' />
            <column-instance column='[Types]' derivation='None' name='[none:Types:nk]' pivot='key' type='nominal' />
            <column-instance column='[Emissions]' derivation='Sum' name='[sum:Emissions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Energy use]' derivation='Sum' name='[sum:Energy use:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0b3hmbr0eai96h15v83u00vr57p1].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0b3hmbr0eai96h15v83u00vr57p1].[sum:Emissions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0b3hmbr0eai96h15v83u00vr57p1].[sum:Energy use:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0b3hmbr0eai96h15v83u00vr57p1].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0b3hmbr0eai96h15v83u00vr57p1].[Multiple Values]' field-type='quantitative' major-origin='0.0' major-spacing='5.0' max='100.0' min='0.0' minor-origin='0.0' minor-show='false' minor-spacing='1.0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.0b3hmbr0eai96h15v83u00vr57p1].[Multiple Values]' scope='cols' value='Percentage ' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0b3hmbr0eai96h15v83u00vr57p1].[:Measure Names]' value='193' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0b3hmbr0eai96h15v83u00vr57p1].[:Measure Names]' value='10' />
            <format attr='font-weight' field='[federated.0b3hmbr0eai96h15v83u00vr57p1].[:Measure Names]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0b3hmbr0eai96h15v83u00vr57p1].[none:Types:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5712155103683472' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='386' />
                <format attr='maxheight' value='386' />
                <format attr='minwidth' value='865' />
                <format attr='maxwidth' value='865' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0b3hmbr0eai96h15v83u00vr57p1].[:Measure Names]</rows>
        <cols>[federated.0b3hmbr0eai96h15v83u00vr57p1].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{1FB09AD6-C0FB-43F1-931F-F17D92C285F2}' />
    </worksheet>
    <worksheet name='Greenhouse'>
      <table>
        <view>
          <datasources>
            <datasource caption='greenhouse_gas_inventory_data_d (greenhouse_gas_inventory_data_data)' name='federated.0h8b2o61vxszg414kx4r40ud4c6i' />
          </datasources>
          <datasource-dependencies datasource='federated.0h8b2o61vxszg414kx4r40ud4c6i'>
            <column datatype='string' name='[category]' role='dimension' type='nominal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0h8b2o61vxszg414kx4r40ud4c6i].[none:category:nk]' value='112' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='background-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0h8b2o61vxszg414kx4r40ud4c6i].[sum:value:qk]' max='5000000.0' min='0.0' num-steps='6' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0h8b2o61vxszg414kx4r40ud4c6i].[sum:value:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0h8b2o61vxszg414kx4r40ud4c6i].[none:category:nk]</rows>
        <cols>[federated.0h8b2o61vxszg414kx4r40ud4c6i].[none:year:ok]</cols>
      </table>
      <simple-id uuid='{376CCAAB-E4A2-4189-B6AC-AFE3BCE2E56D}' />
    </worksheet>
    <worksheet name='SO2 CO O3'>
      <table>
        <view>
          <datasources>
            <datasource caption='pollution_us_2000_2016 (pollution_us_2000_2016)' name='federated.1u5oo631ax02om12hazm119x8psu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1u5oo631ax02om12hazm119x8psu'>
            <column datatype='real' name='[CO Mean]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Altoona&quot;' value='&quot;Altoona&quot;' />
                <semantic-value key='&quot;Arden-Arcade&quot;' value='&quot;Sacramento&quot;' />
                <semantic-value key='&quot;Capitan&quot;' value='&quot;Yosemite National Park&quot;' />
                <semantic-value key='&quot;Ladue&quot;' value='&quot;Santa Clara&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[O3 Mean]' role='measure' type='quantitative' />
            <column datatype='real' name='[SO2 Mean]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[CO Mean]' derivation='Sum' name='[sum:CO Mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[O3 Mean]' derivation='Sum' name='[sum:O3 Mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SO2 Mean]' derivation='Sum' name='[sum:SO2 Mean:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]' field-type='quantitative' max='110000.0' min='-11794.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1u5oo631ax02om12hazm119x8psu].[none:City:nk]' />
              <size column='[federated.1u5oo631ax02om12hazm119x8psu].[sum:O3 Mean:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2853591442108154' />
                <format attr='has-stroke' value='false' />
                <format attr='shape' value='circle' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='595' />
                <format attr='maxwidth' value='595' />
                <format attr='minheight' value='406' />
                <format attr='maxheight' value='406' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='595' />
                <format attr='maxwidth' value='595' />
                <format attr='minheight' value='406' />
                <format attr='maxheight' value='406' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]</rows>
        <cols>[federated.1u5oo631ax02om12hazm119x8psu].[sum:CO Mean:qk]</cols>
      </table>
      <simple-id uuid='{4FCAF07D-1006-406E-BB6D-BFE55E22A03E}' />
    </worksheet>
    <worksheet name='Sheet 13'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='12'>Emissions of air pollutants, United States, 1970 to 2016</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='emissions-of-air-pollutants (emissions-of-air-pollutants) (2)' name='federated.1negdth1velvj20zroh431nqvxc7' />
          </datasources>
          <datasource-dependencies datasource='federated.1negdth1velvj20zroh431nqvxc7'>
            <column datatype='real' name='[Ammonia (Index)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Nitrogen oxides (Index)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Non-methane volatile organic compounds (Index)]' role='measure' type='quantitative' />
            <column datatype='real' name='[PM10]' role='measure' type='quantitative' />
            <column datatype='real' name='[PM2.5]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sulphur dioxide (Index)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column aggregation='None' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ammonia (Index)]' derivation='Sum' name='[sum:Ammonia (Index):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Nitrogen oxides (Index)]' derivation='Sum' name='[sum:Nitrogen oxides (Index):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Non-methane volatile organic compounds (Index)]' derivation='Sum' name='[sum:Non-methane volatile organic compounds (Index):qk]' pivot='key' type='quantitative' />
            <column-instance column='[PM10]' derivation='Sum' name='[sum:PM10:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PM2.5]' derivation='Sum' name='[sum:PM2.5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sulphur dioxide (Index)]' derivation='Sum' name='[sum:Sulphur dioxide (Index):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1negdth1velvj20zroh431nqvxc7].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1negdth1velvj20zroh431nqvxc7].[sum:Ammonia (Index):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1negdth1velvj20zroh431nqvxc7].[sum:Nitrogen oxides (Index):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1negdth1velvj20zroh431nqvxc7].[sum:Non-methane volatile organic compounds (Index):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1negdth1velvj20zroh431nqvxc7].[sum:PM10:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1negdth1velvj20zroh431nqvxc7].[sum:PM2.5:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1negdth1velvj20zroh431nqvxc7].[sum:Sulphur dioxide (Index):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1negdth1velvj20zroh431nqvxc7].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1negdth1velvj20zroh431nqvxc7].[none:country:nk]</column>
            <column>[federated.1negdth1velvj20zroh431nqvxc7].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1negdth1velvj20zroh431nqvxc7].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1negdth1velvj20zroh431nqvxc7].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;[federated.1negdth1velvj20zroh431nqvxc7].[none:Year:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>&lt;[federated.1negdth1velvj20zroh431nqvxc7].[:Measure Names]&gt;:&#9;</run>
                <run bold='true'>&lt;[federated.1negdth1velvj20zroh431nqvxc7].[Multiple Values]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1negdth1velvj20zroh431nqvxc7].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1negdth1velvj20zroh431nqvxc7].[:Measure Names]' />
              <text column='[federated.1negdth1velvj20zroh431nqvxc7].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;[federated.1negdth1velvj20zroh431nqvxc7].[none:Year:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>&lt;[federated.1negdth1velvj20zroh431nqvxc7].[:Measure Names]&gt;:&#9;</run>
                <run bold='true'>&lt;[federated.1negdth1velvj20zroh431nqvxc7].[Multiple Values]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1negdth1velvj20zroh431nqvxc7].[Multiple Values]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1negdth1velvj20zroh431nqvxc7].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;[federated.1negdth1velvj20zroh431nqvxc7].[none:Year:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>&lt;[federated.1negdth1velvj20zroh431nqvxc7].[:Measure Names]&gt;:&#9;</run>
                <run bold='true'>&lt;[federated.1negdth1velvj20zroh431nqvxc7].[Multiple Values]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.69165748357772827' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1negdth1velvj20zroh431nqvxc7].[Multiple Values] + [federated.1negdth1velvj20zroh431nqvxc7].[Multiple Values])</rows>
        <cols>[federated.1negdth1velvj20zroh431nqvxc7].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{C52F7586-3344-436E-9CD0-6E36FDF53556}' />
    </worksheet>
    <worksheet name='Sheet 14'>
      <table>
        <view>
          <datasources>
            <datasource caption='fossil-electricity-per-capita (fossil-electricity-per-capita)' name='federated.1gk4jrf1xn51cn1acxvni1y0y642' />
          </datasources>
          <datasource-dependencies datasource='federated.1gk4jrf1xn51cn1acxvni1y0y642'>
            <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Fossil fuel electricity per capita (kWh)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fossil fuel electricity per capita (kWh)]' derivation='Sum' name='[sum:Fossil fuel electricity per capita (kWh):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Year:qk]' included-values='in-range'>
            <min>2000</min>
            <max>2019</max>
          </filter>
          <slices>
            <column>[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Year:qk]</column>
            <column>[federated.1gk4jrf1xn51cn1acxvni1y0y642].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Year:ok]' value='-90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[sum:Fossil fuel electricity per capita (kWh):qk]' max='10000.0' min='0.0' num-steps='8' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[sum:Fossil fuel electricity per capita (kWh):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Country:nk]</rows>
        <cols>[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Year:ok]</cols>
      </table>
      <simple-id uuid='{C7669FAC-C58A-4115-81B1-67029F9378D3}' />
    </worksheet>
    <worksheet name='Sheet 15'>
      <table>
        <view>
          <datasources>
            <datasource caption='global_power_plant_database (global_power_plant_database)' name='federated.16rnq7y079v2cy13achj50ego07y' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.16rnq7y079v2cy13achj50ego07y'>
            <column datatype='real' name='[capacity_mw]' role='measure' type='quantitative' />
            <column datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[capacity_mw]' derivation='None' name='[none:capacity_mw:qk]' pivot='key' type='quantitative' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[primary_fuel]' derivation='None' name='[none:primary_fuel:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' datatype='string' name='[primary_fuel]' role='dimension' type='nominal' />
            <column-instance column='[capacity_mw]' derivation='Sum' name='[sum:capacity_mw:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.16rnq7y079v2cy13achj50ego07y].[none:capacity_mw:qk]' included-values='in-range'>
            <min>1.0</min>
            <max>10012.0</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.16rnq7y079v2cy13achj50ego07y].[none:primary_fuel:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.16rnq7y079v2cy13achj50ego07y].[sum:capacity_mw:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.16rnq7y079v2cy13achj50ego07y].[none:capacity_mw:qk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.16rnq7y079v2cy13achj50ego07y].[sum:capacity_mw:qk]' field-type='quantitative' max='10000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.16rnq7y079v2cy13achj50ego07y].[sum:capacity_mw:qk]' max='8000.0' symmetric='false' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff007f</color>
                <color>#f82990</color>
                <color>#f250a1</color>
                <color>#ec76b0</color>
                <color>#e599bf</color>
                <color>#dfbacc</color>
                <color>#d9d9d9</color>
                <color>#bad2df</color>
                <color>#99cce5</color>
                <color>#76c4ec</color>
                <color>#50bcf2</color>
                <color>#29b3f8</color>
                <color>#00aaff</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='refboxplot'>
            <format attr='palette' id='refline0' value='bp_gray40' />
            <format attr='opacity' id='refline0' value='70' />
            <format attr='whisker-stroke-size' id='refline0' value='1' />
            <format attr='whisker-stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.16rnq7y079v2cy13achj50ego07y].[sum:capacity_mw:qk]' />
              <size column='[federated.16rnq7y079v2cy13achj50ego07y].[sum:capacity_mw:qk]' />
              <lod column='[federated.16rnq7y079v2cy13achj50ego07y].[none:name:nk]' />
            </encodings>
            <reference-line axis-column='[federated.16rnq7y079v2cy13achj50ego07y].[sum:capacity_mw:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.16rnq7y079v2cy13achj50ego07y].[sum:capacity_mw:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.71364641189575195' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#555555' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16rnq7y079v2cy13achj50ego07y].[sum:capacity_mw:qk]</rows>
        <cols>[federated.16rnq7y079v2cy13achj50ego07y].[none:primary_fuel:nk]</cols>
      </table>
      <simple-id uuid='{EC0D4E69-DC7B-4092-B06C-6A92770EC1EF}' />
    </worksheet>
    <worksheet name='Sheet 17'>
      <table>
        <view>
          <datasources>
            <datasource caption='Food_Production (Food_Production)' name='federated.0ecjhcs1g5jesl140kxcq15s5kub' />
          </datasources>
          <datasource-dependencies datasource='federated.0ecjhcs1g5jesl140kxcq15s5kub'>
            <column datatype='string' name='[Food product]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='real' name='[Total_emissions]' role='measure' type='quantitative' />
            <column-instance column='[Food product]' derivation='None' name='[none:Food product:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total_emissions]' derivation='Sum' name='[sum:Total_emissions:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0ecjhcs1g5jesl140kxcq15s5kub].[sum:Number of Records:qk]' field-type='quantitative' scope='rows' type='space' />
            <encoding attr='space' class='1' domain-expand='false' field='[federated.0ecjhcs1g5jesl140kxcq15s5kub].[sum:Number of Records:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <text column='[federated.0ecjhcs1g5jesl140kxcq15s5kub].[sum:Total_emissions:qk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ecjhcs1g5jesl140kxcq15s5kub].[sum:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0ecjhcs1g5jesl140kxcq15s5kub].[none:Food product:nk]' />
              <wedge-size column='[federated.0ecjhcs1g5jesl140kxcq15s5kub].[sum:Total_emissions:qk]' />
              <text column='[federated.0ecjhcs1g5jesl140kxcq15s5kub].[none:Food product:nk]' />
              <text column='[federated.0ecjhcs1g5jesl140kxcq15s5kub].[sum:Total_emissions:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='4.798032283782959' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ecjhcs1g5jesl140kxcq15s5kub].[sum:Number of Records:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0ecjhcs1g5jesl140kxcq15s5kub].[sum:Total_emissions:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='3.3038673400878906' />
                <format attr='mark-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ecjhcs1g5jesl140kxcq15s5kub].[sum:Number of Records:qk] + [federated.0ecjhcs1g5jesl140kxcq15s5kub].[sum:Number of Records:qk])</rows>
        <cols />
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields>
                    <field>[federated.0ecjhcs1g5jesl140kxcq15s5kub].[sum:Number of Records:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0ecjhcs1g5jesl140kxcq15s5kub].[none:Food product:nk]</field>
                  <field>[federated.0ecjhcs1g5jesl140kxcq15s5kub].[sum:Number of Records:qk]</field>
                  <field>[federated.0ecjhcs1g5jesl140kxcq15s5kub].[sum:Total_emissions:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Cassava&quot;</value>
                <value>1</value>
                <value>0.90000000000000002</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{0CA8B455-E872-4169-8FBD-93C323561954}' />
    </worksheet>
    <worksheet name='Sheet 18'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Tesla Growth 2020-2021</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tesla EV)' name='federated.103js1e0c5wwq418qbx181lswi0o' />
          </datasources>
          <datasource-dependencies datasource='federated.103js1e0c5wwq418qbx181lswi0o'>
            <column caption='High Low' datatype='real' name='[Calculation_854276600713629699]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Low])-SUM([High])' />
            </column>
            <column caption='Open Close ' datatype='real' name='[Calculation_854276600714723332]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Close])-SUM([Open])' />
            </column>
            <column datatype='real' name='[Close]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[High]' role='measure' type='quantitative' />
            <column datatype='real' name='[Low]' role='measure' type='quantitative' />
            <column datatype='real' name='[Open]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[High]' derivation='Sum' name='[sum:High:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Open]' derivation='Sum' name='[sum:Open:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_854276600713629699]' derivation='User' name='[usr:Calculation_854276600713629699:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_854276600714723332]' derivation='User' name='[usr:Calculation_854276600714723332:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.103js1e0c5wwq418qbx181lswi0o].[none:Date:qk]' included-values='in-range'>
            <min>#2020-10-09#</min>
            <max>#2021-02-02#</max>
          </filter>
          <slices>
            <column>[federated.103js1e0c5wwq418qbx181lswi0o].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.103js1e0c5wwq418qbx181lswi0o].[sum:Open:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.103js1e0c5wwq418qbx181lswi0o].[sum:High:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.103js1e0c5wwq418qbx181lswi0o].[sum:Open:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.103js1e0c5wwq418qbx181lswi0o].[usr:Calculation_854276600714723332:qk]' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff0000</color>
                <color>#fb1616</color>
                <color>#f82d2d</color>
                <color>#f44242</color>
                <color>#f15757</color>
                <color>#ed6c6c</color>
                <color>#ea7f7f</color>
                <color>#e69292</color>
                <color>#e3a5a5</color>
                <color>#dfb7b7</color>
                <color>#dcc8c8</color>
                <color>#d9d9d9</color>
                <color>#c4d3c7</color>
                <color>#b1ceb7</color>
                <color>#9fc9a7</color>
                <color>#8dc398</color>
                <color>#7cbe89</color>
                <color>#6bb97b</color>
                <color>#5cb46d</color>
                <color>#4dae60</color>
                <color>#3fa954</color>
                <color>#31a448</color>
                <color>#259f3d</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#555555' />
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.103js1e0c5wwq418qbx181lswi0o].[sum:High:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.103js1e0c5wwq418qbx181lswi0o].[usr:Calculation_854276600713629699:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#555555' />
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.103js1e0c5wwq418qbx181lswi0o].[sum:Open:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.103js1e0c5wwq418qbx181lswi0o].[usr:Calculation_854276600714723332:qk]' />
              <size column='[federated.103js1e0c5wwq418qbx181lswi0o].[usr:Calculation_854276600714723332:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#555555' />
                <format attr='size' value='1.9890055656433105' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.103js1e0c5wwq418qbx181lswi0o].[sum:High:qk] + [federated.103js1e0c5wwq418qbx181lswi0o].[sum:Open:qk])</rows>
        <cols>[federated.103js1e0c5wwq418qbx181lswi0o].[none:Date:ok]</cols>
      </table>
      <simple-id uuid='{3B59696F-2528-4A60-B3CC-720DCAE29641}' />
    </worksheet>
    <worksheet name='Sheet 19'>
      <table>
        <view>
          <datasources>
            <datasource caption='renewable-energy-investment (renewable-energy-investment)' name='federated.19478at1fsti8e17c9mhx1gz4oog' />
          </datasources>
          <datasource-dependencies datasource='federated.19478at1fsti8e17c9mhx1gz4oog'>
            <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
            <column datatype='real' name='[Investment in Renewables by Region (IRENA (2016))]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Investment in Renewables by Region (IRENA (2016))]' derivation='Sum' name='[sum:Investment in Renewables by Region (IRENA (2016)):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.19478at1fsti8e17c9mhx1gz4oog].[none:Entity:nk]' />
              <text column='[federated.19478at1fsti8e17c9mhx1gz4oog].[none:Entity:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19478at1fsti8e17c9mhx1gz4oog].[sum:Investment in Renewables by Region (IRENA (2016)):qk]</rows>
        <cols>[federated.19478at1fsti8e17c9mhx1gz4oog].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{7C8026F2-D151-458E-A109-96FCFDCDC20D}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Earth&apos;s Temperature)' name='federated.0r9d3c01gc3fvo19whl3r0pk963r' />
          </datasources>
          <datasource-dependencies datasource='federated.0r9d3c01gc3fvo19whl3r0pk963r'>
            <column datatype='real' name='[Lowess]' role='measure' type='quantitative' />
            <column datatype='real' name='[No_Smooting]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Lowess]' derivation='Sum' name='[sum:Lowess:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No_Smooting]' derivation='Sum' name='[sum:No_Smooting:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0r9d3c01gc3fvo19whl3r0pk963r].[sum:No_Smooting:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0r9d3c01gc3fvo19whl3r0pk963r].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0r9d3c01gc3fvo19whl3r0pk963r].[sum:No_Smooting:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0r9d3c01gc3fvo19whl3r0pk963r].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0r9d3c01gc3fvo19whl3r0pk963r].[sum:Lowess:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0r9d3c01gc3fvo19whl3r0pk963r].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0r9d3c01gc3fvo19whl3r0pk963r].[sum:Lowess:qk] + [federated.0r9d3c01gc3fvo19whl3r0pk963r].[sum:No_Smooting:qk])</rows>
        <cols>[federated.0r9d3c01gc3fvo19whl3r0pk963r].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{F7A13BA2-4FC7-40ED-895B-2F1DCA9D6652}' />
    </worksheet>
    <worksheet name='Types Deforestation'>
      <table>
        <view>
          <datasources>
            <datasource caption='drivers-forest-loss-brazil-amaz (drivers-forest-loss-brazil-amazon)' name='federated.0nwptkc1p8324u1eimeud1o88ar9' />
          </datasources>
          <datasource-dependencies datasource='federated.0nwptkc1p8324u1eimeud1o88ar9'>
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column datatype='integer' name='[commercial_crops]' role='measure' type='quantitative' />
            <column datatype='integer' name='[fire]' role='measure' type='quantitative' />
            <column datatype='integer' name='[flooding_due_to_dams]' role='measure' type='quantitative' />
            <column datatype='integer' name='[mining]' role='measure' type='quantitative' />
            <column datatype='integer' name='[natural_disturbances]' role='measure' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[other_infrastructure]' role='measure' type='quantitative' />
            <column datatype='integer' name='[pasture]' role='measure' type='quantitative' />
            <column datatype='integer' name='[roads]' role='measure' type='quantitative' />
            <column datatype='integer' name='[selective_logging]' role='measure' type='quantitative' />
            <column datatype='integer' name='[small-scale_clearing]' role='measure' type='quantitative' />
            <column-instance column='[commercial_crops]' derivation='Sum' name='[sum:commercial_crops:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fire]' derivation='Sum' name='[sum:fire:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flooding_due_to_dams]' derivation='Sum' name='[sum:flooding_due_to_dams:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mining]' derivation='Sum' name='[sum:mining:qk]' pivot='key' type='quantitative' />
            <column-instance column='[natural_disturbances]' derivation='Sum' name='[sum:natural_disturbances:qk]' pivot='key' type='quantitative' />
            <column-instance column='[other_infrastructure]' derivation='Sum' name='[sum:other_infrastructure:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pasture]' derivation='Sum' name='[sum:pasture:qk]' pivot='key' type='quantitative' />
            <column-instance column='[roads]' derivation='Sum' name='[sum:roads:qk]' pivot='key' type='quantitative' />
            <column-instance column='[selective_logging]' derivation='Sum' name='[sum:selective_logging:qk]' pivot='key' type='quantitative' />
            <column-instance column='[small-scale_clearing]' derivation='Sum' name='[sum:small-scale_clearing:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tree_plantations_including_palm]' derivation='Sum' name='[sum:tree_plantations_including_palm:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[tree_plantations_including_palm]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0nwptkc1p8324u1eimeud1o88ar9].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:fire:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:flooding_due_to_dams:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:mining:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:natural_disturbances:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:tree_plantations_including_palm:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:other_infrastructure:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:selective_logging:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:roads:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:commercial_crops:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:small-scale_clearing:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:pasture:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0nwptkc1p8324u1eimeud1o88ar9].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:fire:qk]&quot;</bucket>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:flooding_due_to_dams:qk]&quot;</bucket>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:mining:qk]&quot;</bucket>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:natural_disturbances:qk]&quot;</bucket>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:tree_plantations_including_palm:qk]&quot;</bucket>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:other_infrastructure:qk]&quot;</bucket>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:selective_logging:qk]&quot;</bucket>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:roads:qk]&quot;</bucket>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:commercial_crops:qk]&quot;</bucket>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:small-scale_clearing:qk]&quot;</bucket>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:pasture:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0nwptkc1p8324u1eimeud1o88ar9].[none:Year:qk]' included-values='in-range-or-null'>
            <min>2001</min>
            <max>2013</max>
          </filter>
          <slices>
            <column>[federated.0nwptkc1p8324u1eimeud1o88ar9].[none:Year:qk]</column>
            <column>[federated.0nwptkc1p8324u1eimeud1o88ar9].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0nwptkc1p8324u1eimeud1o88ar9].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0nwptkc1p8324u1eimeud1o88ar9].[Multiple Values]</rows>
        <cols>[federated.0nwptkc1p8324u1eimeud1o88ar9].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{5402015A-1FA0-4BEC-AA2C-CECB864A7120}' />
    </worksheet>
    <worksheet name='Types Of Power Plants'>
      <table>
        <view>
          <datasources>
            <datasource caption='global_power_plant_database (global_power_plant_database)' name='federated.16rnq7y079v2cy13achj50ego07y' />
          </datasources>
          <datasource-dependencies datasource='federated.16rnq7y079v2cy13achj50ego07y'>
            <column aggregation='None' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[estimated_generation_gwh]' role='measure' type='quantitative' />
            <column datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[primary_fuel]' derivation='None' name='[none:primary_fuel:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' datatype='string' name='[primary_fuel]' role='dimension' type='nominal' />
            <column-instance column='[estimated_generation_gwh]' derivation='Sum' name='[sum:estimated_generation_gwh:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16rnq7y079v2cy13achj50ego07y].[none:primary_fuel:nk]'>
            <groupfilter from='&quot;Biomass&quot;' function='range' level='[none:primary_fuel:nk]' to='&quot;Wind&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.16rnq7y079v2cy13achj50ego07y].[none:primary_fuel:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.16rnq7y079v2cy13achj50ego07y].[sum:estimated_generation_gwh:qk]' value='false' />
            <format attr='break-on-special' field='[federated.16rnq7y079v2cy13achj50ego07y].[sum:estimated_generation_gwh:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.16rnq7y079v2cy13achj50ego07y].[sum:estimated_generation_gwh:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.16rnq7y079v2cy13achj50ego07y].[none:primary_fuel:nk]' />
              <size column='[federated.16rnq7y079v2cy13achj50ego07y].[sum:estimated_generation_gwh:qk]' />
              <text column='[federated.16rnq7y079v2cy13achj50ego07y].[none:name:nk]' />
              <text column='[federated.16rnq7y079v2cy13achj50ego07y].[none:country:nk]' />
              <lod column='[federated.16rnq7y079v2cy13achj50ego07y].[none:country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#1b1b1b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.16rnq7y079v2cy13achj50ego07y].[none:country:nk]</field>
                  <field>[federated.16rnq7y079v2cy13achj50ego07y].[none:name:nk]</field>
                  <field>[federated.16rnq7y079v2cy13achj50ego07y].[none:primary_fuel:nk]</field>
                  <field>[federated.16rnq7y079v2cy13achj50ego07y].[sum:estimated_generation_gwh:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;United States of America&quot;</value>
                <value>&quot;A.E.S. Corp.&quot;</value>
                <value>&quot;Coal&quot;</value>
                <value>450562.69234955101</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{60D654F5-5991-404F-9ECE-A983F4B52A72}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1300' minheight='800' minwidth='1300' preset-index='2' sizing-mode='fixed' />
      <datasources>
        <datasource caption='fossil-electricity-per-capita (fossil-electricity-per-capita)' name='federated.1gk4jrf1xn51cn1acxvni1y0y642' />
      </datasources>
      <datasource-dependencies datasource='federated.1gk4jrf1xn51cn1acxvni1y0y642'>
        <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
        <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='16' param='vert' type='layout-flow' w='98770' x='615' y='1000'>
            <zone h='98000' id='7' param='horz' type='layout-flow' w='98770' x='615' y='1000'>
              <zone h='98000' id='5' type='layout-basic' w='87385' x='615' y='1000'>
                <zone h='98000' id='3' name='Electricity From Fossil Fuel' w='46761' x='615' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='98000' id='10' name='Sheet 14' w='40624' x='47376' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='148' h='98000' id='6' is-fixed='true' param='vert' type='layout-flow' w='11385' x='88000' y='1000'>
                <zone h='8625' id='8' name='Electricity From Fossil Fuel' param='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Year:qk]' show-domain='false' show-filter-state='false' show-null-ctrls='false' type='filter' w='11385' x='88000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='8125' id='9' name='Electricity From Fossil Fuel' pane-specification-id='0' param='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[avg:Fossil fuel electricity per capita (kWh):qk]' type='color' w='11385' x='88000' y='9625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='8625' id='11' name='Sheet 14' param='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='11385' x='88000' y='17750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='8125' id='12' name='Sheet 14' pane-specification-id='0' param='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[sum:Fossil fuel electricity per capita (kWh):qk]' type='color' w='11385' x='88000' y='26375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='850' minheight='850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='128' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='127' param='vert' type='layout-flow' w='98770' x='615' y='1000'>
                <zone h='8625' id='8' name='Electricity From Fossil Fuel' param='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Year:qk]' show-domain='false' show-filter-state='false' show-null-ctrls='false' type='filter' w='11385' x='88000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Electricity From Fossil Fuel' w='46761' x='615' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='9' name='Electricity From Fossil Fuel' pane-specification-id='0' param='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[avg:Fossil fuel electricity per capita (kWh):qk]' type='color' w='11385' x='88000' y='9625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8625' id='11' name='Sheet 14' param='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='11385' x='88000' y='17750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='10' is-fixed='true' name='Sheet 14' w='40624' x='47376' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='12' name='Sheet 14' pane-specification-id='0' param='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[sum:Fossil fuel electricity per capita (kWh):qk]' type='color' w='11385' x='88000' y='26375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{CA9C285F-965B-4A38-A232-948F40FC2EB3}' />
    </dashboard>
  </dashboards>
  <windows source-height='351'>
    <window class='worksheet' name='Global Electric Car Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='measures' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{042F67FA-E2A9-4DC0-8036-DE9CA8500DB1}' />
    </window>
    <window class='worksheet' name='Global Energy Use'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[federated.0b3hmbr0eai96h15v83u00vr57p1].[none:Types:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0b3hmbr0eai96h15v83u00vr57p1].[:Measure Names]</field>
            <field>[federated.0b3hmbr0eai96h15v83u00vr57p1].[none:Types:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8EE7C2D4-F30A-4A3A-AEB2-69BDA22DF935}' />
    </window>
    <window class='worksheet' name='Electricity From Fossil Fuel'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[avg:Fossil fuel electricity per capita (kWh):qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Year:qk]' show-domain='false' show-filter-state='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gk4jrf1xn51cn1acxvni1y0y642].[avg:Fossil fuel electricity per capita (kWh):qk]</field>
            <field>[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{A5D2BC3F-F0E0-481F-AAB1-336D0E46E165}' />
    </window>
    <window class='worksheet' name='Sheet 14'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[sum:Fossil fuel electricity per capita (kWh):qk]' type='color' />
            <card param='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Country:nk]</field>
            <field>[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{84E3BD54-BBCD-4BD9-B6DF-7318F653E7C1}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Electricity From Fossil Fuel'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 14'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{64376C7C-0335-4A6D-A3FD-EC8F91D11EA0}' />
    </window>
    <window class='worksheet' name='Types Of Power Plants'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.16rnq7y079v2cy13achj50ego07y].[none:primary_fuel:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16rnq7y079v2cy13achj50ego07y].[none:country:nk]</field>
            <field>[federated.16rnq7y079v2cy13achj50ego07y].[none:name:nk]</field>
            <field>[federated.16rnq7y079v2cy13achj50ego07y].[none:primary_fuel:nk]</field>
            <field>[federated.16rnq7y079v2cy13achj50ego07y].[none:source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{595F779F-5C99-4C0B-90B6-D5B72C9D2904}' />
    </window>
    <window class='worksheet' name='Electricity generation from Power Plants'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.01aa8lq04kpily16skfsu0yx1tje].[none:Year:qk]' show-domain='false' show-filter-state='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.01aa8lq04kpily16skfsu0yx1tje].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01aa8lq04kpily16skfsu0yx1tje].[:Measure Names]</field>
            <field>[federated.01aa8lq04kpily16skfsu0yx1tje].[none:Country:nk]</field>
            <field>[federated.01aa8lq04kpily16skfsu0yx1tje].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{863854BF-84F0-4AFB-BD28-16947F50B0D7}' />
    </window>
    <window class='worksheet' name='Types Deforestation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0nwptkc1p8324u1eimeud1o88ar9].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0nwptkc1p8324u1eimeud1o88ar9].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0nwptkc1p8324u1eimeud1o88ar9].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{55BA6AA3-C652-492C-A272-56CEAA523146}' />
    </window>
    <window class='worksheet' name='Annual Deforestation '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[none:Year:qk]' show-domain='false' show-filter-state='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='2' param='[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[sum:Deforestation:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[:Measure Names]</field>
            <field>[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[none:Country:nk]</field>
            <field>[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[none:Entity:nk]</field>
            <field>[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[none:Year:qk]</field>
            <field>[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[sum:Deforestation:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{47C398D8-7BC7-46BC-9DBD-B5AF03503403}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='4' param='[federated.0r9d3c01gc3fvo19whl3r0pk963r].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0r9d3c01gc3fvo19whl3r0pk963r].[none:Lowess:nk]</field>
            <field>[federated.0r9d3c01gc3fvo19whl3r0pk963r].[none:No_Smooting:nk]</field>
            <field>[federated.0r9d3c01gc3fvo19whl3r0pk963r].[none:Year:nk]</field>
            <field>[federated.0r9d3c01gc3fvo19whl3r0pk963r].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4787FEB0-0DD4-4CD4-BF36-F5F14B04D8E9}' />
    </window>
    <window class='worksheet' name='Earth Temperature'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1juel6n1dq3l2b1c2oool1rpny2q].[sum:temperature_anomaly:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.1juel6n1dq3l2b1c2oool1rpny2q].[sum:temperature_anomaly:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1juel6n1dq3l2b1c2oool1rpny2q].[none:Country:nk]</field>
            <field>[federated.1juel6n1dq3l2b1c2oool1rpny2q].[none:Day:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{824E2EF0-35D9-418F-B0DD-8D97996E7149}' />
    </window>
    <window class='worksheet' name='Greenhouse'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.0h8b2o61vxszg414kx4r40ud4c6i].[sum:value:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0h8b2o61vxszg414kx4r40ud4c6i].[none:category:nk]</field>
            <field>[federated.0h8b2o61vxszg414kx4r40ud4c6i].[sum:value:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CB3F6EA0-1F2B-431B-AECB-ED74F38FFCC5}' />
    </window>
    <window class='worksheet' name='CO2 Transport Emission'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1972188A-2943-4FC5-A500-CD6D1C8F87F2}' />
    </window>
    <window class='worksheet' name='Sheet 13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='31' type='pages' />
            <card size='70' type='filters' />
            <card size='240' type='marks' />
            <card pane-specification-id='1' param='[federated.1negdth1velvj20zroh431nqvxc7].[:Measure Names]' size='22' type='color' />
            <card size='45' type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1negdth1velvj20zroh431nqvxc7].[:Measure Names]</field>
            <field>[federated.1negdth1velvj20zroh431nqvxc7].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3CA512CE-F299-4109-BB03-985BE7CF44BE}' />
    </window>
    <window class='worksheet' name='Sheet 15'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.16rnq7y079v2cy13achj50ego07y].[sum:capacity_mw:qk]' type='color' />
            <card pane-specification-id='1' param='[federated.16rnq7y079v2cy13achj50ego07y].[sum:capacity_mw:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16rnq7y079v2cy13achj50ego07y].[none:capacity_mw:qk]</field>
            <field>[federated.16rnq7y079v2cy13achj50ego07y].[none:name:nk]</field>
            <field>[federated.16rnq7y079v2cy13achj50ego07y].[none:primary_fuel:nk]</field>
            <field>[federated.1u5oo631ax02om12hazm119x8psu].[:Measure Names]</field>
            <field>[federated.1u5oo631ax02om12hazm119x8psu].[none:City:nk]</field>
            <field>[federated.1u5oo631ax02om12hazm119x8psu].[none:State:nk]</field>
            <field>[federated.1u5oo631ax02om12hazm119x8psu].[yr:Date Local:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{6C22ED22-1377-42DA-8F10-7C3838BE3428}' />
    </window>
    <window class='worksheet' name='SO2 CO O3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1u5oo631ax02om12hazm119x8psu].[sum:O3 Mean:qk]' type='size' />
            <card pane-specification-id='3' param='[federated.1u5oo631ax02om12hazm119x8psu].[none:City:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1u5oo631ax02om12hazm119x8psu].[:Measure Names]</field>
            <field>[federated.1u5oo631ax02om12hazm119x8psu].[none:City:nk]</field>
            <field>[federated.1u5oo631ax02om12hazm119x8psu].[none:State:nk]</field>
            <field>[federated.1u5oo631ax02om12hazm119x8psu].[yr:Date Local:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{84E6A2B5-FEFC-494C-A959-8D9126D46246}' />
    </window>
    <window class='worksheet' name='Sheet 17'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0ecjhcs1g5jesl140kxcq15s5kub].[none:Food product:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.0ecjhcs1g5jesl140kxcq15s5kub].[sum:Number of Records:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0ecjhcs1g5jesl140kxcq15s5kub].[none:Food product:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B9345ACA-6D27-413D-B35B-3F951546CAA8}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 18'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[federated.103js1e0c5wwq418qbx181lswi0o].[usr:Calculation_854276600714723332:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.103js1e0c5wwq418qbx181lswi0o].[none:Date:ok]</field>
            <field>[federated.103js1e0c5wwq418qbx181lswi0o].[none:Date:qk]</field>
            <field>[federated.103js1e0c5wwq418qbx181lswi0o].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0C2E443D-3CE9-4B9B-8AB4-EA896E4BBD7B}' />
    </window>
    <window class='worksheet' name='Sheet 19'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19478at1fsti8e17c9mhx1gz4oog].[none:Entity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19478at1fsti8e17c9mhx1gz4oog].[none:Entity:nk]</field>
            <field>[federated.19478at1fsti8e17c9mhx1gz4oog].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{99BAB6F5-0FF8-4D71-9285-7B6791D122DB}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Annual Deforestation ' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='CO2 Transport Emission' width='192'>
      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
      /wdjG6hRq80BYAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Earth Temperature' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29WZMcR37g+XOPK++6T9wAAQIgCRIg2U022RTZTal7Wj3TLc3ITDKbl509
      PsF+AL2P2drsvs2a6WFsbG1MMo1JsxptH9L0wfsAAQIkQNxnHagrq7LyjMt9HyIzq7IqC0gU
      qooAMn5mNKIyIyM8Ivzv/j/dhdZaExPTpchvuwExMd8msQDEdDU7KgBhGBJrXDGPEzsqAHHn
      j3nciFWgmK4mFoCYriYWgJiuJhaAmK4mFoCYriYWgJiuJhaAmK4mFoCYriYWgJiuJhaAmK4m
      FoCYriYWgJiuJhaAmK4mFoCYriYWgJiuJhaAmK4mFoCYriYWgJiuJhaAmK4mFoCYriYWgJiu
      JhaAmK4mFoCYriYWgJiuJhaAmK4mFoCYriYWgJiuJhaAmK4mFoCYriYWgJiuZksEQAUuV86f
      5l7Bjz7Qmtk7V/jg488peeFWXCImZlvYEgHwa1WqS9PcW44EQHlFvrg4wdF9WT4/e3UrLhET
      sy2YW3ESJ9PLYG+GufrfyvcwkmmyPYP4l6+hlCIMQ5RSKKW24pIxMVvClgiAW1lmZn6JfDBD
      qacPLW1kdYnLly7RM7QPKSVSSoIgwDAMhBBbcdmYmEdGbMU2qbXSIlMzebS0GOpLo60stiox
      u1Rj164xTBl1+FgAYh43tkQAOiUWgJjHjdgNGtPVxAIQ09XEAhDT1cQCENPVxAIQ09XEAhDT
      1cQCENPVxAIQ09XEAhDT1cQCENPVxAIQ09XEAhDT1cQCENPVxAIQ09XEAhDT1cQCENPVxAIQ
      09XEAhDT1cQCENPVdCAAFc58eoZC1d/+1sTE7DAdLItiEZam+M//8TeQ3cWf/8WfMZjaktVU
      YmK+dTqaAS5+fRUjN85rJ8b46qvb29+qmJgd4r5D+dK9C/yf/8dfMVMKyGSmSY8c4N/+i4M7
      1baYmG2no3WB8jMT5Is10r1DjA32bPpi8bpAMY8bHSjzBf7qP/x7Zlybo2/9nP/l529sf6ti
      YnaIDmwAgwMvvMr4YAI7HrljnjI6mAEyvP7aKYbGxhk+cGj7WxQTs4N0MAPk+Zv//HdcvX6D
      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
    </thumbnail>
    <thumbnail height='192' name='Electricity From Fossil Fuel' width='192'>
      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
      D6SbEJU1JwmNAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Electricity generation from Power Plants' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dd3AkV37fP50mYzAYYJCBzTlxA7kkl2F5d+TdkUddkk4XpLNOJ1uWS2VV
      uVy2y0nnKperbMtK5yC5FCxLOlOnO50uJ4Y78kjukpsTNmGBRQYGGMxgcqfnP3qAzctF2gUw
      78NtdgPT07/3Gr/v6xd/rQghBBJJlaI+6ARIJA8SKQBJVXNfBeA4DnOtcbmui+M4C5yiW7Ft
      W9qoIhv3VQDzbW7cj+aK67rSRhXZkFUgSVUjBSCpaqQAJFWNFICkqpECkFQ1UgCSqkYKQFLV
      SAFIqhopAElVIwUgqWqkACRVjRSApKqRApBUNVIAkqpGn+8Fes4d5epYljVb96BP9XFpOMe+
      /bvJTkxRX+tjOG2yqjWxEGmVSBaceQsgU1Y5ePAgrm1xvN/k0Z0tdHUP43NtJoZSdGzbsxDp
      lEgWhXkLIKCUePXlH5FYtQ1fMEggGoeeXpIjfbg1rWz16zOruVzXnfMCByEEQohFXyDhOA6m
      aUobVWJDmV9UCJsLp89QNAsQ7sBOdSNwqV2zCyuVpjFqM+7E2Ly6CQVveZumaSiKMmtL0+LR
      9Xlr9q6YponP55M2qsTGPL1JZ9W69RTKDtHaKMKqJ1d0iNWGseqjGIZGjWktTEolkkVg/lWg
      UIRAqPKDP0Sd3zv0+bwOpoDfP18TEsmiIbtBJVWNFICkqpECkFQ1UgCSqkYKQFLVSAFIqhop
      AElVIwUgqWqkACRVjRSApKqRApBUNVIAkqpGCkBS1UgBSKoaKQBJVSMFIKlqpAAkVY0UgKSq
      kQKQVDVSAJKqRgpAUtVIAUiqmnkLQAiHC6dPki6ajF29wBtvH6Vkm4yNpbBLOQZHxhcinRLJ
      ojBvAeTGB+gZSlLIFbk6lmXPphhdl0dIJlNc6uoiGK1diHRKJIvC/AJjCYtLVydY25HAsm2C
      4Qjhuibo6yE50odT08bmoCFjg0obS9bG/ARglnAck4sXB6hbHcRXGOPsiXECDZvwGSHqQyUu
      DU6wob0eQ1VlbFBpY8nYcF3BSCo3TwH4a3h4/6OYpSKK7sMpNTKetWhtrqdcihLw60QKpQVK
      skQyf7KFMu+eH+L1k1e5NJCaf2xQAF8gCIARidEe8X4XDHoxQSOR8EKYkEjmjBCCZLrAj450
      88PD3fh9Gvs2t/ILB7cujAAkkgeJ6wrOXU1iaCoNtSGiYT+GriEEjE3m+N6hS/zkRC+xSJDP
      f2gn+7e2Ew15BbQUgGTZIYSgbDkMjmd5+0w/754fYiSVw9BUVFVBURSiIR8+Q2d0MkciFuaL
      L+zh4c2tBP3GDdeSApAsOWzHJZkuMJCc4mJ/kmLZwRUC1xW4QlAq2/SMpBmbzLOmJcYTOzrY
      sa6JSNBHtlAmnSuRmiqRyhZZ2xLjkS1tGLp2W1tSAMscr3sYFIU59a4tBYQQTOXLHL04zJme
      MS4PppicKmE5Du0NNTTEwqiKgqIqqIqCpio8u28tuzc00xyP3NG57wUpgGWIEIJMvsylgRSH
      zg7Qn8zwq8/vZnNnw4NO2j3jCsF4usDpK2O8dbaf092jxGoCbGyv59m9a9nY2cCa5hgIZ1G7
      Wuf5jrDZIccB5mfDcVwOdw1yuGuQsz1j5EsW21YnKJZt+pMZfuuT+9mzsQVFUZZ0PoYmsnzl
      x6c51T2Kpqns29TKge0drG+PEw4YN/jHYudDCuAmlqrjZAtl/vhbRzlxeYQda5s4sL2DXeub
      CAd8OK7L3/7kHN956yKf+cAOnt+/Hsexl1w+TMvhJyd6+csfnWJVUy2feGoLW1cn8Bt39okl
      /pI8yf0gNVXk9//2EMl0gf/whYOsbY1zvb+oqsZn3r+deDTI//3BSSYyBX7+qU0ssv/PiuGJ
      LH/63eOc7xvnU89s44OPrMNvPHj3e/ApkNwRIQTDEzn+60tvoWsqv/0rT9NcH7ntuYqi8NzD
      62iui/D7XzvE0PgUv/Gxh6mrCd7nVF9DCEGhZPHqsR7+7o3ztDfU8B+/+D5WNdcumQa7rALd
      xFKqAp2/Os7vfvVtOptq+aef3E80fG9v3OwdSfPlrx8mX7L49Rf3smt9M6q68A53p3w4jkv3
      0CRvnOrjzdN9oMDPPb6Jjzy+EV2b3QRk2QaoUE0CcF3BG6f6+JPvHGPv5hb+0Uf2EArMLk2p
      TI6vvX6BV4/28PxjG/jsB3bM2vnei5vz4TguPz15lVeO9nB5MMWq5lqe27eOPZtaqIsE5vR3
      lwKoUA0CEEIwOpnnz757nDM9Y3zy6a187IlNaHNwXNM0MQyDd7qG+JPvHqMuEuAff3Qfa1pi
      C1b9mM6H47qc7UnyFz84yXgmz4EdnXzokfV0NEbnbUsKoMJKF4DjuLx6vJeXXjlDY12IL3x4
      Nxva43N2oOttjE3m+eNvHeFC/wSfeGoLzz+6gYBv/vfRNE0yBYuXXjnDW2cGeHRbO7/4vm00
      1YUXXGSLhRTATTwIAUxkCvzRN49wvn+Cjx7YxM8d2ITPmPvo5u1smJbD6yev8tIrZwgHfXz+
      Q7vYta7pPatFQgjyJYuL/RMUyxauK3Aq0xJ6hyd5/VQfjbEwn//QLrasakBTF7eatdBIAdzE
      /RbAVKHMf/7rN8kVTX7r5/cvWBXlTvmYyBT4+k+7eO14L49saeUTT2+l8zZVFVcI+semeO14
      D2+d7idbMInVBLwpCQqoioKhqTyzZw3PPrx20bo0pQAqrEQB2I7L7371bXqH03zpVw/SGFu4
      tRN3y4frCi4NTPDn3z9B/9gU8ZoATfEILfU1NMcjuMLl2MURLvZP0BwP8+y+dezd1ErIr4Oi
      oODNPXJsm3Bobo3bhcjHQiAFcBNzveGuKzBt566jmtfbUDWdv/zhSd443ce//fxTrG2pm2uS
      72jjvfJhOy5ne5MMjGUYSeUZnsgynilQMm22rU7wvj1r2bq64YGN0t4PG3IgbIH4ztsX+cHh
      y2zsqGfH2ia2r0nQWBfhTlr4weHL/PDdbv7VZ59YcOe/V3RNZde6JnatawK8+r7tuJRNh3DQ
      WDKDVYuJFMACcK43yVdePs3796wlky/x1dfO8r+/XSJeE2Tr6gQbO+KsaamjoTZETcjHoXOD
      /NWPTvEPX9zLrvVNDzr5MyiKgqFr85pevNyQApgnk9ki/+ubR3hy5yp+9fmHUFWVkmkxmMzS
      1TfOhb5xvvP2JUYmcoQCBolYiKHxLB9/ajMHd6+qilJ2KSMFMA9sx+XPvncCBfjChx+aGbAK
      +g3Wt8dZ3x7nI49twLQcCmWLvtEM3UOTCNflY09uWfAuQ8nskQKYBy8fucLxS8P8+3/wNKGA
      cdtzFEXB79Px+3TqaoLsWt+MaZpzGt2VLDzzFoDreOs1NU0DIXBcgaapM8v0hBCoK6ykE0LQ
      PTTJV14+zaffv50N7fEHnSTJHJmnAATnTxxmPJMjtmon1shZJnNl1u15jMJYiuZalzE7ypbV
      S6ehtxBkCyb/4xvvsmNdI88/ukHW45cx8xSAQntHOxP5XqJBg2yshQ881saxU/3kkoNMZJs5
      sH/DTB++4zjMddhhOi7oYg9bOI6DZVl3/Nx1BX/+veMUyxa//OwOHNvGWWAbC4G0cW/MUwAu
      /mgTOzZbXBpOo7kmVimPYgSpa16FmZ+kYDpEfCqapiGEmPNAluu6qKp3ncXkbml0heAbP+vi
      6KVh/s0vP0lTvGbBbSwU0sa9Mc8rW1w4eZRUyWL1pl2IVIY3Dl9mz2OPMDWWpmVdEz1Do2xY
      01oZPveqCnOpMiiKghDivlQ37mTj7dP9/P0b5/mNjz3Mpo75RWB4kPmQNq679ntPhRCcPfwT
      RG0reiDG5nnU55frVAgh4MpQit/+85/w4uOb+IWDW+e1wmolTCFYKTbuoXsmzRuHjjLQ38/J
      Y+cXLSFLmdHJHP/tb95m/5Z2PvHU5kVZXih5MNyDAKJsXd/CmWOnWLtj0+KnaIlRMm2+/Hfv
      EAn6+LWP7K6qaQLVwD0IoIxph+jsTJCezCx+ipYQk9ki/+mv3iCdLfHPP/34LYFVJcufe6hQ
      h/jARz+Ok+/jW6+PLH6KlggDySl+76uHsB2Xf/nZAzTWyfccrETuKgDhOpTLaV7+5g+ZNG02
      7H3mfqXrgSEEnOoe5fe/doi1LXX85iceIRYJPOhkSRaJuwqgkBnkm994memXHBUKhfuQpAeH
      EIKXj17hK6+c45ndq/ml53YuyOJxydLlHrpBSxx+8x1qauqJNHfQ2Rids7Gl3A3qCsG3fnaB
      v3ntLJ9+3zZeeGz2QZzulZXQfbhgNoTwNleAcL0JZKo6He99KawIK3L+7HmMkIHonuRzH39i
      0RLzoBBC8Nbpfl569Qy//uIeDu5eI+f3LCamCaPjkEpDNge5PGTz3t7vg3gMYrUQr0UJhyBa
      A34/GN6a5HkhBDgOWBaY9t0FYFtFLCfCR3/hk4z09xJp2TA/40uU3pE0f/zto7z4+CYObG+X
      zr9YFIpwuQcu9XgOXx/znLuxAdavgUgIiiVPGJMZ6B9EzxXA5wOfAcEARCPeFgiAYXiiMHSo
      zEambHqbaULJrDi6CZZdOba8vWWD/R4CsIppvvv33yfj+mjrXM2utvt1p+4fyXSe33npbfZu
      bOFTz2xFuLOd2ia5K64L4ym40A29/RAOwab1sH61V9rDraX66o6ZQ7tQxCgUvSfFVGUbHPGc
      3HG9apMrPDvT1SdNBV33nho+w9vCIW9vGBDwQygIoeB7twHscp4zx49w+J13iGx4ms99+JE5
      34ul1gYoli3+y/97k1zR4rd/5WkiQd/yqTsvdRtCeKX4yXPQPwRNDbB5PbQ2eU44XxtCeAJw
      nGubWnF8XbvWjngP7upN2VQv3/veYdY9tIfPfvE3CYdWTneg47r8xQ9OMpjM8qUvHCQSXELB
      9JczQkCuACfPwtUBaIjDBw9CIu455UKhKJ6jz3Nk/q4CqImv5hd/afW8DCxFXFfw7bcu8rPT
      ffyLzxygtWFu05oleKVwsQiFEuTzMDTqVXViUXhyP7S3LKzjLzBV18k93df/0itn+fUX97Bj
      beODTtLyQwgYm0A/eRamsjMNSjTNc/z9e2B1u1cdWeIs/RQuIEIIXj95lT/97nG+8OGHOLh7
      tezxmQ1CQDoDJ87CwDC0NMHOrV5PTjTi9dIss/tZNQIQQnDo3AB/9K2jfO7ZHTz78Frp/LOh
      WILTXV4XZjwGH3gSOx7D57+3t9YsVapCAEIIjlwY4stff4ePP7mZFx/fKJ3/XimVvb77U+ch
      FIADD0Nnm1evN80Hnbp5s+IFIITg5OVRvvz1d3j+0Q184qkt0vnvBduGnj442eV1MT601eu7
      X0qvnlwAVrQAhBCc7B7l9/72EE8/tIpPv3/7os3vWREIAbYDQyNePT9fgK0bYdM6b/BoBRYc
      K1YAQghOXB7hd796iGd2r+bzz+2Szn8nXNcbtOrt97ZSGdathu2bvBHUFej406xIAXjOP8rv
      VZz/l5/bia5XufNfP+A/PWcmm4PkhOf0qbTXm7NpvVfHrwmvaMefZsUJQAjB8Usj/M5Lb/HB
      R9bxS8/tQqu2RezTVRkz7/XeZLIwmfb2ubzn+I7rzY3x+6Cj1eu7r6+rCqefRgixsgTgdXUO
      8j+/8S4f2r+ez7x/e/U4vxDebMvRJAyOYCQnvKqMaXnVmOm++tYmiIQhHPQmi01PM64ihCsY
      7xml/3j3/AVw7sjPGEnnSazZhTvWxUi6wNb9T5Ifm6AlBoPFIFvXNC9Euu+KaTt8+82LfO0n
      53ih8mLoFR++RAivNL/c682QTE95pXqiHmfDGvSmhOf4ul6ZHMaKLuGFELiOi2s5OLaDXbYw
      CyXMgolVLGMWypSyRcYuD1HMFIh3JOb/jjAhXJIDl8i4MYrZcXZuaePY6SFK6THcQC2P7t+N
      KryYno7jYBhze/XO3WaDpnMl/uQ7xzh9ZYwvvrCbAzs65hx7/4HPorxXpnLQddFz/poItLV4
      pXt9DAwD07KWRz5mYUMIQTlXIjOUopQrYpetmc0qmpTzJcr5Ema+hJkvY5sWus9ADxje3q+j
      +w3q2hto37WWSCI6/yfAUM8FnFATa+ojnDk3iutYoOmEauoolwqYjktQuxYSca6BToUQMwFy
      r6d3JM1//8YRFEXhX3/ucda0xOYUsHYax3EwF3mAZ842XBeKJZTz3eg9fSihIM6je3Bamm6c
      FWlZSzsfs8Asm2SGUyS7h5noHiU/PoVru/hCfnS/cd2mE6qLEO9MEIiG8EeD+CMBVF1D1VQU
      TUVVFRRNnSmALcua7xPA5vUf/gDXH6FlzRaUdC99yRwPPf442dEUbY0BuoeLbF7fjsLCrgdw
      XcFrx3v4P98/ye6NzfzaC3uIhuc/LL8kngBCeH3wkxmv0ZrLe1OMCwWYmIRoFHZs9iac3SFY
      8JLIxxyxTZvM0ATD5/oYOT9AKVsk0hClYW0zibXNxDsbMRZo+vqyfE1qybT56x+f4sdHrvDz
      T2/lo09sWrCIbQ/Mcaadvn8I+gY9R7dsrzsyHPIarpGQt1a2pcmr68/WxgKzkDaEEOSSGfpP
      9DB6vp98KkusrYGmLe20bGonGAuj6nPznbux7Jr/A2NT/OHXD5POlfh3n3+KrasTy3dqw3Qj
      tn8Iuq96My3DIWhrhu2boTlx41z65ZrPOyHANi3Ge0a58tY5Uv3jRJvr6NizjtbtqwnWhrAW
      uS2zbAQghODwuUH+7Psn6Wyq5Z/94mM0xyMPOllzw7a9XpsrfTA8BkE/rGqHR/dAXawquiXN
      YpnBU71cPXKJ/ESW1u2reOx9u6jrSKDexxH7ZXOnf/juFf7yR6d44dENfOqZbfiMJRakVlQW
      ZgPMVCor8W5M06vPT0zCeMrrowev1+Z9ByBR7zViV1oJfxPCFRSnClx99yL9x7tBUejYvY5V
      e9cTrA2jPIBu62XTBjh6YQjXFezd3Iq6iI4yq3qtEF4DNTnhLRCZylWmHAhPBEJ4A1H5gjeZ
      rCYCdbXY8Rj6qjYIBpdGPhbZhhCCzPAkve9cZOhML+F4DZ1719O2YzW+0N07LhY7H8tGAIsa
      GW4mOpmLZZoYPt+10lhRrjmzbXujrbm8F+pjeAwyU97nLY0Qr/UiHlSimqEoXnWmLuatlvL5
      QFOXlHMupg3hukwOTHD5jTOM94wSbapj3eNbSKxvQb/HSNtLIDLcCmO6VM5MeRPAprJeyV2J
      O2M4jte1OB1wSde9qs30tAJDrwRpCnpOv2d7pQpTfbfyTriOw/iVUa681cXE1VEaN7Sx/5ee
      Ib6qccl1WFTPXy1fgOFRL2rB6LhXkoeDUBv15si0NUO0BktVMFCuRQ+zLK8kDwW9FVFGJbhS
      pTSXgOu4WMUy5XyJzPAk/ce7SfUlad7czuNfeJbatvol+67oZSMAZWwCtW/AK4nzRc+B8wWv
      m7CuFmprrk34UhSvRJ+OJpbJQqnkhdNL1MPu7V4D9PpFHpW9MM0Vt+ppIXAd15tLM1UgPTRB
      ejBFemiccraEVSyjKIo36qprJNY18/Q/eYFIQ3TJlfg3s2wEQGoSZTLjlcSN9TOh7XAcz8Ez
      WW8AKV8J4R4Ken3q8ZjXxVhX69XF32MASXIjQggmese48OpJcskMZtEkHK8h0hilaWMbkYZa
      /OEARtCHHjDwBfz4wv4l7/jTLBsBiE3rcDes8RrBt7u5092QTmUWkHbv4fEkt8cuW1x47RRX
      371E06Y21j+5jWhzHUbAh2Zoiz5IdT9YNgK4oWflTp9r2h3nxkjuHSEEqatjnPneEayiyUMf
      f4yWbZ3LplSfDctHAJIF45aebyEQrqCULVKYzDF6YYDeI5do2tDGtuf3EawJeWsJViBSACsE
      4bo4totre4tBysUSRaFgFbzemXKuSDlfxi5bOJaNYzk4lo1dsihm8hQyeRQUjICBLxzgoY89
      Ruu2VQ9kdPZ+IgWwjLFNm8FTPQyduYpZKHtObdu4loNt2Timjapp+MJ+fKEAvpAP3aejGTqa
      oeELhtATBm07VxOKRfDXBDCCfnxBP9pSm2qySEgBLDOmV0X1H++m952LuK5Ly5YOGje0YgT9
      GEEfvqAPxVAJ10bQfN4KPEVVvOZTpR6voKzYas1skAJYJriOy9ToJEOnr9J/4gqaT2fN/k20
      P7SWQM2tc4rux1SIlYAUwBJFuALbtEgPpRjp6mfs0hDlXJFQLMzm9++iddsq9MDc1ldLriEF
      sETwemEK5CeypPqSTA6MM9mXRAhBbWuc1Q9vILGuhZqmmHT6BUQK4AFTyhbpP9HN8Nl+CpNZ
      rKJJtKmOus4G2l98hLr2BgK1oSU7l2a5IwXwALDLFqkrY/Qdu8zYxUFCdTW0bO2gYe1D1LU3
      3PNUYcn8kQJYIIQQ2GWLQipHPpUlNzFFdixDKVu8FpdTCISAUq5AOVeiaWMbD3/2IPWrGqXT
      PyCkAOaIEALbtMmPTzF2eYiR8wPkkhkUVUHVVALRMDWJWuIdDSiV6st01V0LGLTvWI0/HFzx
      A01LHSmAWSCEwCyUSfWOMXpxkImroxQzBWoaYzSub2HjwR2E4zUEa8Noxp1XvskuyqXDvAXQ
      ffYIw4UgB/Zt4dyRNxkYz7HzwJPkRlO0xBX6pwy23IfYoIuFcAVWySTZPczQmauk+pI4lk39
      6ibWHdhKYm0zgWhoUWLWSBafeQtg3badlM5eRdg2dqCODz63nWNn+rHzacbHfex7dO9MSEPX
      ddGWyWxNs2iS6h1l4GQPoxcHMQI+6tc0sf35fTSub12wyGSSB8tirDAHQFU1LNvCFYDCDfEY
      53TVO8QGXWjSwylGz/YzemGQcrZI48ZWdn3iMWpb4/gjAS8tMK+YmCslbudKsDHvqBDnjr3B
      +d4JNu7ch5ruZWAiz87HnyA3mqK90cflEZNtGzsWPDboQmKVLca7h7ly6DyT/eNEG2O07147
      E7Zjoas2SyFig7ThUdVhUcr5EoOneug72k0hnaNlayftu9dQ39GIukCxRm/HSnCclWKj6nqB
      hCvIp7JcPXqJgeNXUHWVjt3r6dy7nmA0hGVbi+r8kqVF1QjAdVxSfUn6jl5i+Fw/NYlaNj+7
      m9atnbJBW8WsaAEIIXBMm9GLg/S+c5H04ATxzgQPf+Zp4qsa0Q1dzomvclakABzLJj2UYuh0
      L4OnelE0haZN7ex44WE5m1JyAytGAK7rMjU8ydilQYa7BsiOTlLXnmDrh/aQWN9KoCYoHV9y
      C8tWAMJ1KWWLTPaPM3phkGT3MLZlE4qFadrUxt5PPUGoLuItB5SOL7kDy04A+Ykpkt0jjJwf
      INU3hmZoxDsb2fS+ncQ7E4QbonLuvOSeWTYCGL0wyKXXz5Afn0Lz6d5U4k8/TW1rHCPok6W8
      ZE4sGwGUcyXinQm2PreHuo4GNNlXL1kAlo0AOveuW7wXZEiqFllZllQ1UgCSqkYKQFLVSAFI
      qhopAElVIwUgqWqkACRVjRSApKqRo0qSFYEQgrJdpmDmKVh5CmaBgpXHdmwELm4lqIIQLiW7
      RLY8Ra6ckwKoNoQQCATev8p/wnMQV7iV42mH8Y5t18K0TWzXxnZtHNfGdh3KZglFVXCEg+s6
      OMLFFQ6O6173OwfHtbEcC9MxMW0T0ylTMAtoqoaqKCio16KGuBamXaZslzHtMiW7hF35vuVY
      2K63F9y6lF0IgSuYcXa3ksfrUVBQVQNdC6KrASmApYoQAsu1KNtlylaJkl30ju0SpmNSskqU
      7BJlq0TZ8ZzEcRxs4TmoaZkIReC4zg1O6zmogyvcyt6ZcS7TKWM6FpZjes7mWNiujaIo6Kpe
      cVgNVVHRVM17ywwKLsqMwzlC4LgCUfnMczkFFLXi6BqKoiOEjaJ4kxgVQFUUNEVBU3V0zYeu
      GuhqBE2NEfD7iWoGPs2HX/fh030Yqlb5rjfdXVXA0HwE9CB+PYjf8PaGqqOrGpqqoakqqqJi
      qCo+TcPQtJUvgOuDXkyXBtO/mykdxLVywnIssMUNpY7lmJiuhWWbWK45Uxq6lRJSVJzJcizy
      Zo5cOUfOzJItZylZxRvOM22TvJknGqydcQ8UBSFcr4R1bCzXwqlc33E9h3Uqjuu4Nqqi4tcD
      +PUAASOAT/Oja/qMk+qqjoqKofvQVQ1DMwgaQTRVR1OmnUGrHOv4dX9lC8wcG5ofQzPQVQPL
      EaRLJW8rFkkVi6SLRTLlcuWuXZuJK7yHC37dIOzzETb8hH1+In4/Nb4AEX+AiM9P2OfDr2ue
      cyqq9yRQqOwV1IpjO7aF3+f3BKKq3j1bwJm/yyYsylh2lL5ULw4Opm16TumUPUd0PQe79gi+
      znldrySbfgR735su5SolXeX86cerXXEyb5t2Fq/UUyuOoyrqDSWQ92jV8Gt+wv4wYV8NNf4a
      AkYATdVnzldRsRwLn+67Vh0BQMHQdHTVmHE8n+4jZIQI+yKE/WFCRpiQL4yu6u95D03TxDAM
      XCGwXAfLcbBdt1I9Ed7edTFdh6JlzWwFyyRnmkyVSmRKRdKlIpbjEDAMghWnjodC1AVDRA0f
      NcEgAd0goOv4dZ2AbhA0DLQFWoi0jOICCTJj/VwcyrNn1waymSLRiI+JTIFEfR0wPwF89fhf
      88rFH2JoBobmm9nrqnads15z2GknmnYqn+Y9On2av7L33XAdo+J4ilAI+IMzJeX0415Trjm/
      pmooinqD8yuKgqaoGNp7r0240x9VCIHpOJRtm5JtU7Yt72fHxnQcTNvbe/X1a5sjXGzXxXYc
      LNfFchxKlkXZ8a5juw6m42A7XiHhuKJSWAh0VSWoGzMOHjB0QoaPWCBILBgkHgxR4/cTrHzu
      16+JbyXEBVowAQjH4t0jR1nfHqGvUIdhlgiINOGO7TTX+oH5CcB2bGzHQtN0KhWHSg5m/ncb
      bvq9uLFJNF0RqvwDvBuuG8aNDcXK927YC4GLwHWF53zuNeezXQfL8Y5N16FsWUPlVxgAAAh5
      SURBVJRsm5JtUbK9ktYRAsvxSmbL9Zy77DiAQFWUa1WB66oDmqJgaBqaqtxwjqYolaqOhqGq
      3jkohP1+QobhbT4fQd3Ap2kzm6GpM3Xw6bs1/bdRrrtD3HLsYVkWhmFc+1xcf+bt3OpOrnbd
      H2DmQFRsmNfZmP7obum6i41bzImFawO4riAUjRFv66DvxBWSI3040XbeX+vHdV0cx8F1XRRF
      mYnyNs10wFzHcWZ+p6oqqqpi2zYAuaFvoZROVFx/ui5/fdZuzPgN9fwbegMqR9c58/RvhQBX
      eOm61pNw/ebecOw19m694dMOpVe20C1niBsFrFU2QFMVfKqGXnFQXVU951ZVNKXyalNx47Vu
      xUujailg3d4xbQT29M/i+uvctBd3+D2Ve6codznn5mvcms7b2xGVv4sA4VZerHC9A9/Ozu1E
      dIfjSn4FCzgOoKoKhcwkIz0l1JomEkaIsDpFXzJHRyKCUXFmRVHQNO2Gdbszpc51T4bpxeyG
      YSCEwOdrQKQD3ssm7uWZdf1TphKg96YTbvs1V7he2qbvuQKI68+9s/FbzhLXfXDd11zXvc26
      5Wsnz1xHCHDwtjucjbg5J5VEuy6qqtxTgXiTQm41cMv5HjP5uOF7DncaX731jt98x5Rb0uC6
      zjUb0/dRuKCo16Xr2ncVZboHitvcm9ukaSHbANnxYXrGCmzbsobcVJFoxM94OkdDfd2SDo57
      PSuhXitt3DsL6E0KNQ2t7GzwfqqtjQDMNIAlkqWInAskqWqkACRVjRSApKqRApBUNVIAkqrm
      vk6Gm28X5v0IfyhtVJcN+QSQVDX3dTbofJhO5mKXCEIIaaOKbCwbAUgki4H2pS996UsPOhE3
      U8gkOX95kHgizkT/RY6f7aa2oQknl+TI0ROo4TiZwfMcP90FwTixiH/WNsxChnNnL1Pb3Ehh
      rI93j5/FH61n6OIxTnddZjhdJmaUOXLsNKG6ZkL+2Uejtst5uk51EWxqxJ1K8u6R47j+KNnh
      ixw/3UXvSJqGkM1bbx9jsgQtidisbbiOSfe5LpxQDT67wLEjR8i5fmJ+h6NHjjBZUohHDY4e
      OkRBDROvCTHrAlXY9HdfYsrWqfHDySOHGckKErV+zhw/Qv9EiaY6P++8dYiroxMkGlswZnu7
      hEtyqJehyTLxaIALp47QO5ajIV7L+ZPv0jdepKmhlu5zx7kykqelsX7W+XAdk+6u8969crx7
      tSRXhJmWQBcWtnDpGUrzyJ7NnDzXhWIW2fXIo/hVhdN9DgcPHpyzjXLZIoCgDFzsHuDhRx7i
      5KlLPLx3P2vyI3QNmVy5MszOh7bRdekSDbu3zdqGbVkEBBSEYLy7h6179tF77gyb9+yjtSPD
      mStJ8qkJNux7irbo3JpjwjbRVT9Fq0R5tIfGjXvJ95ykKxugef1Opvq6OH9qjNad+xg+fwa7
      pR5Dm63n2ChGDcVihsJwP2rLDiLJLi4PW2ixNTTkexgcNYis2s72zvic8oFwEL5azPQwdqpA
      NthBpzZJ35WT5ILrWK300dU/hKs10KaP0Z+2WVU3O/cVjomu+CmaRczkVRIb9y7NRnCsoRGf
      Coqi0lYf4tC7Z0inx8lOpTny5uucujSA3y3w6isvc74vOScbNXUNBA0v+2s6Gjl86CgjqTQg
      uNI7wtpVCVR/hEgojKHOrZYYiMSoDXtPp86ONs4cfYehZArLFowODdLY0oaiG5w/+lPePNY1
      JxuaP0J9LAxAQ2snQ13vMjAyhi9cR/eZI4yXNMqqQXMkSDDoQ7hzyIsWoLE+CkCwaQ3lvhP0
      9F/FVGqZ6D/LlQmbUDDIxJUTvPrTt8ib7ntc8DaoBo0JTzx6XRu+TA9nL14hp7fiy5znYk8v
      41MFasO1xBrqKGWLs8+GL0J9nXev6ls7Ge56d2k+ASaTQwyPjqI0NFNbU0eiWMAKrkXPD6GH
      wkwWpohFEnSECmTzs78RALnJJEOjo0RiDbT4IzQnaghaUexCCsuIEfb70awMZ7u6sLXwnGyU
      cmn6h4chGGJNNExLcwI1ZRHUTK5kBTvWBknmAqzq7GBwND0nG045R9/gIFl/gNo1q2huacV0
      fejlNPHmdgqTY8R8Po6cPoeZt1BnW/oD2CX6+vsZTqdprK8j0dxKvqyQUFIUYi3UlpMkczYt
      rZ2kU6OUTIewb5Zlq2MxNDTE6OgoLe3txBtaKJZd2hJRirSQL7psba+n+8JFkk6Rzr1rZ50N
      p5yjb2CArN9P7ZrVNLe0Ls1GcHp8hEy+jBGsocZwSBcFbS0JXLPISDJFPNGMKGVIZU2ampvw
      6bN/kOXT44xn8mi+IHVhg9RUiabmJlRhYQuNgE/HLhcYTaZJtLTgm4PjlPNpRsYzKJpBfV0N
      qVSGhqYWArpLseQSCvmxSnlGxiaIJZqpmcMLu51ynoGRcQDqGxvJjCeJNrQQ8QlGRkYxQjHq
      Y2HGhoYI1iWIhmbfXsIu0T80hisEdYkm8hNjBGIJYmEf42MjOFqIxniEsdFRtECUhnh09q9f
      diyGR0YwbZdovAErO4kSqKWhLsTY0BBauI762jBTqSQlJUBTPDrrbNx4r5rIjI8tTQFIJPeL
      JdkGkEjuF1IAkqpGCkBS1UgBSKoaKQDJssW1Mrzy2mFca4rX3zo+p2tIAUiWLYpegzXWxQ++
      8330xg4GL53ix6+9Tcks8PZPX6EvmeNK9yXOnThG3r79NZbkQJhEci8oisqBJx7mD756mH/+
      AcEf/sHfEQoFIBBicmCANy/maCid5aHnv0jwDnOTpAAky5qamhht7a3oho+GRBOdm7bRqE3Q
      ldcJqA5GbQubOxOodxiZkwNhkuWN65AvWYRCfkq5LNmiSW1tlPzUFL5gGBWXYCh0xzUFUgCS
      qkY2giVVzf8Hgik3iPpnZSgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Global Electric Car Sales' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Global Energy Use' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Greenhouse' width='192'>
      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
      /+LNTq5ub1kpAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='SO2 CO O3' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 13' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 14' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 15' width='192'>
      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
      4yiAwz3N/w+aFsSEgMPeeAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 17' width='192'>
      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
      sAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 18' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29eZAk532e+WTWfXRdfd/XzHRPzwXOACAwAAEeMEGBFimZNr2iaCksLilt
      rP6xJHPD8kZYG7REKiTFemnRpmmbK4bFVQQkMaiTpC3SAAWCBDADYGYwPdPndHcdXV33XVlV
      eewf1dMz3ZlzkGjMNFDfg5gIVPWX+Xvrl/nmd2V+KRmGYSAQdCjy/RYgENxPhAEEHY0wgKCj
      EQYQdDTCAIKORhhA0NEIAwg6GmEAQUcjDCDoaIQBBB2N/eYPhUKBZrN5TwIbhoEkSfcklkBw
      K6T7dS9QKpWir6/vfoQWCHYQTSBBRyMMIOhohAEEHc3+GcAwaDUUakoDwzBQW01qdQXDALXV
      2P5+36IJBPuC/c5F7g5Nq/Lyi+eQ7Qajcw+SuPIqiqoyNnuKxMIbNHWDI6ceZiji26+QAsGb
      Zt8MAAaNeh2HH1avrNE9MMkDgyEWLr+Gb+w4p4NNVkpl+oNudF1H1/V7NuQqENyKfTOAbPPz
      5NMfpLY5z0oliKIoNBtlZHeAerWC4jJw2P3YbDZsNhuyLON0OvcrvEDwE7GvfYCFCy/xekxl
      7vAwEbnKq/MxxmZOEDEyXFzPMtwb2bdwAsF+ICbCBB2NGAYVdDTCAIKORhhA0NEIAwg6GmEA
      QUcjDCDoaIQBBB2NMICgoxEGEHQ0wgCCjkYYQNDRCAMIOhphAEFHIwwg6GiEAQQdjTCAoKMR
      BhB0NMIAgo5GGEDQ0QgDCDoaYQBBR7Ovy6KUskmurSfQDINqMcN6NIlmQCWfYiOeQhNLIwoO
      GPu2MJauNbh8ZYX+HidXlqGSiRLwwoqmko7H6XJLGA4X433B/QopELxp9s0AkuzATp1rG2Wm
      58aQ+4c4PBBm4fIrBIZPMRNssFSso2l+sTSi4MCwjzVAGc3Rz9kH3VxYySPbNSreJpKvn3Iu
      TRFwOnrE0oiCA8W+9QFke4CBoMa5qwWOnTzEeMTO1ViNwzOzTIQ0VvMa4wNiaUTBwUIsjSjo
      aMQwqKCjEQYQdDTCAIKORhhA0NEIAwg6GmEAQUcjDCDoaIQBBB2NMICgoxEGEHQ0wgCCjkYY
      QNDRCAMIOhphAEFHIwwg6GiEAQQdjTCAoKMRBhB0NMIAgo5GGEDQ0QgDCDqafVwXqMLLf3+O
      ulIkePhRXPklNvMNTp19jMSll0jVDB585Cxhr2O/QgoEb5p9XhbFYOHCBQYnR7m2WWJmOMDy
      wgLNrilmwirRuoOZ0T4MwyCdTtPT07N/oQWCn4B9qwEA1GoexRnAK8vIkoQkyWDoyNufDcMw
      /RMI7if7aACDVCrF8MgUNq+Emr3I99dbnHjoEaKXXubv1yROv/ssstzudsiyjN2+r/4TCH5s
      xMpwgo5GjAIJOhphAEFHIwwg6GiEAQQdjTCAoKMRBhB0NMIAgo7mLmaidF78zjdZ3qowduwR
      3nvmyFuvSiC4R9zWAIaho2k54iU/n/jER9q3NggE7yBue0bXign+4tn/TjazwrPPPsuLF1fu
      lS6B4J5wWwP4QiN87BMfYzTsQ20pLL7+MrF8415pEwjecu6iTVOlpPfxzz7+QRxyjXMvL7z1
      qgSCe8QdOsEGmtbFZG+dL/+/f8mJBx8k3Dt0b5QJBPeAO9QATS69fp5YIo/Nbqem+zk2KR5i
      EbxzuG0NUMltcuGV16loGrLNhnh8RfBO47bPAxiGga7rfP/P/5y5j32MXklGlqV9CSyeBxAc
      BG5bA9SKMf72r5/n6uXLLDabzM69mydPH75X2gSCt5zb1gC61qJaqaFvf3a4PHjdzn0JLGoA
      wUHgtjWAbHPQFQzeKy0CwT1H3Nsg6GiEAQQdzb4aoJrf5KUfvUypoZPfXOPViwuoBmTjK7x2
      eRlVjKMKDhj7ZgBDa3Hx8irHTh3DpVVYjBcZDuksLi5xNV6n16mwlsztVziBYF/Yv7VB9TrF
      bJZzL73E6PhhuiIRIj1h0pdfIdB/ir5Ag6ViE03T0HUdXddpNpv7FV4g+LFZWFjYPwNIsofe
      oUEmJ3pYXi9i6C2SRgFbaJxcMkq8Bp7wGDabDZvNhizLOJ37M6QqEPwkVCqV/WsCyTY7M9Mj
      rCdqnHzXMWYneii2/Bw5NMXceIiaPcR4f3i/wgkE+4JYGlHQkWi6xo9e+tH+rg4tELxdOPHf
      nkI1NFEDCDqT11KXeeONS8IAgnc+m9Ut9JtOc6/dQ9gdRNM00QQSvPP56F9+ikKjtPP5nxz+
      h/z2Y59tj0beR10CwX1HGEDQ0QgDCN6R/PCHP7yrd9CJPoDgHUVeKZKp5/ja336dyEwfsiSj
      6dotywsDCN5R/NnS3/B7578M0/C9v/zndywvDCB4x/MrJz6J2+7m29/+Fh/60E9xNHJo52/C
      AIJ3PP/82D8l7A5if0nhM6d+YdffhAEE7yjssh23zUWr1cLhcAAgSe2lfD7zmc+YyouZYME7
      ks9+9rN8/vOfx2az3bacGAYVdDTCAIKORhhA8LYnm80Sj8d3fXf8+PGdtv/tEH0AwduarJLn
      5ZdfJpPO8Mwzz+Cxu/E6PHe9vTCA4G3NzB89iXHTuuX/6/Gf47MP/m93vb1oAgk6GmEAQUcj
      DCA40Jw7d+4t3f/+zQQbGi9+77/TtHmYPfUg8flzZCsNjj30KLFLr1BoGLzrkcfpC7j3LaTg
      nc+f/Mmf8OCDD97y7yP+AeqKgqZp+Hw+gs6uH2v/+2YAQ9dp6AZ9w6OE7E3SfZM8+UCQxfkL
      uEZO8kSoxbV8gR5/387KcKqq7ld4wTuYvefJV7/6VX7pl34JgO/8zNfJ5/M0Gg0GBgYsy9+O
      fRsFMgydUiFPrRQjnnFj9zqYGe5idWUVxTPKTFgj1nQyM9KHYRik02l6e3v3I7TgHYKqqhiG
      gcPh4I+vfoOvXPo6pWKJQDAAwLd+8zw+RaNUKhEIBOCTn4TPf/5Nxdy/GsBQWV2Yp1BtcfTB
      R8mvXuCH52M88O5HSFx+hZe34MzDDyNJ0s4/WRZdEMENfvSjH5HP5/noRz9K0NXFWNcwq5kG
      Y13DANiSf4tcaxICqFSgWIQ3eQ7tmwFk2cm7HnnPzueBdz3C0e3/jzz02H6FEXQIH51+mo9O
      P82v//qv8wf/+x+0v/wVF9TrNwq95z3WG/8YiIkwwX3n5eTr/O2175HYTNBoNJicmORfnP40
      QdeP16H9SRDPAwjuO4v5Vf6/hW/ufP7hwgV++eQn74kBRCNc0NEIAwg6GmEAQUfztjVAoVCg
      WCzebxmCtzlvWwP86Ec/4uWXX77fMgRvc952o0BfvvjHfPG1/7qz3LX8td/hlU/8DT6H9z4r
      E9w1//JfQrPJiy++yNmzZ6EnDaP3R8rbrgbQDR3V0NC3/1MNbedxiC9/+cum8hcuXLi3AgV3
      5j/+R/jiFzl77hx88Yvw3HP3TcrbzgCWlMuQTJK8cAGSyfa/vj7o62P60Ufb//+5z91vlQea
      aDTK/Pz8/ZZxzzmQTaCvfe1r/OIv/uLO58uXL1Or1XjooYf40MSTTIfGiW5sIEkyI6MjuGOb
      sLTCZDwOP/hBe6N0GgA/tKfPq1Wg/QA1QHd39738SQeeWCxGPB5nbm7unsce8PXx6OAZCoUC
      rVaL3t5enDbHPYl9oAyg6hq6ofP6pQv8nNZCMzT+8V//MrVqFU3X6Yp38U9nPsIvHP0YjO/Z
      +OQDzL/8MnzsY2B1d8dXvgLf+AbuWq392euFV16BYPCutG1sbKBpGpOTk2/uRwpMPDX2OE89
      /X/zwgsvkM/n+emnf/qexT5QBricXWAxv0oslOEvVr6DLMn8zc98jeeff55ischHPvKR227/
      u7/7uzc+nD4NQDQWY3RkBLa2YGkJ380b6PqdRX3nO/Dss9gTCSRdh5ER+Hf/Drre+mn6/aJU
      KmEYBsFbmf38eXxXrxJOp+H8+XaTcfQt7JV+6Uugqjz77LN8/OMfh6Pt2yYff/zxty7mLThQ
      BjjVO8ep3jne/QsnGRsb2/m+v7+/ff/33SJJ7QMJGBsbMDYGX/gC/Kt/9eOLunQJvvpVhm7+
      7gtfeFsY4JvL3+GPr35jZ74kGAzyR72fxH9lZXfBT32KkzdfDH7t1+AP/uCtE7bdvH1pfp6P
      f+pTb12cu+C+GaCm1vnCK19ifX0du93O8PAwv37ml3HI9l0nP8Ds7OxPHGfvvnaRy7X/3czU
      FEgSf/VXf8VP//S9q4r3ixdffJFMJsNHPvIRUvUMFzNXbvwxk0B9/k/h9//9/RN4Ewchv/fN
      AA7ZzmNDD+GIGTgdTh4YegBZegsHpT7+cXjXu4hGoxjA2Ogo/Kf/BL/3e7vLqSrYbDz33HP7
      coAuXLiAoii8+93vftP7uiMf+hBH83mazSZ86UtMvHuADzz5OOl0CsMw6Ovrx/Hw/wJPfZiv
      fOUrN1ZLfuaZu2sO7jPvfe9773nMvdxHAzh4z8DD9M0FsdvtTA9Pv7UBp6Zgamr3fMvzz995
      u0cegX/9r4nFYmi6zvjYWLsDfQv+7u/+jqeeegrDMCg2y0QzcWrVKjONo7htLtx215v+KQDF
      RhkDg9///d/nN37jN3DKDrzf+Q7hm8p88IHP8sEP/A7PPfccmqbxgQ98oP2HuZNEX3gBnn66
      /VmW74sBDgL3vQ8wMzNz/4JPTsITT7Cyusr01FT7uy9/GSSJf1Yuw3/4D/DAA/Bv/y0jN2+3
      tgbnzt2YyYT200myzLe+9S2eeuopdAx+kHiFK/UVlJaCL/EKh0OTHAlP7Yv09/3ZP6HSqsEw
      PPsnz/FzMx/l/3riCYrFIq1Wi56envbvw/pK+7mb50Xe8x7QbnqP1vTdX4yWl5dJp9M8+uij
      P+lPua/cdwPcVz79afj0p/Elk7C9osB1Hrjddl4v9PTwg4UFzm6PTH30rz5Fy9DYOrzFM9/8
      BX5m+mk+c+LneW/fI+i6TldXV3t4Vtd3G0eSQJL4wQ9+wGOPvclHR59/nksvvEA6neZnf/Zn
      7367731v9+c/+iM4dmzXV8b3v48RCe/SLiGRzWaJRqPCAG9nBvac/Hdke5Y52d29c6Isn9+g
      pbfADeXCGul6u3Pt89008Pq5z8G/+TecvXlflQr4fHzjG9948wZgn4YSs1nYMyv8xtZl3kjn
      +fPn/oxod3sy8eN/+B0mEkl6yuW2id7//nZf622EMMA+8d8+9P9gGDovvvhDzp59lD5vz11t
      9zfXvofmcRMPZfnLlf/BZHCUEz13HvX6qYn3oWgNXn31NU6ffhcne47ecZu7ZnYWPvEJkltb
      aJrG8NAQJ0Ye4EQggD5R4edmP9ou94lesm+8QXJri+n3va99S8rXv048kaDVbDIxMQH/6B+B
      x8Mf/uEf8qu/+qv7p3Gf2GcDGFQrVTw+H2qjTq2hEwj4UZUq9RZ0dfmQ77xk+9uGZ555Zuf/
      T/cdB+DMz5689QaBgGmC6YnRR8Hj5rztB7xv9FEcks08X/He98LTT7O4uIgkSRw+fJjffuz/
      AOC7re/ygSc+sC+/Z4cPfxg+/GEuf/e7KIrC8Ic/vPOnn//5n79R7uxZjjz8MIcNAxwOaDRA
      Ubj2wguUKxUmPvQheOMNeOUVBr/5zRtLmHz60+3yB4B9XRVCKW7xF3/99/zUP36GK+fOY6DT
      P3mUzeWrGBKMz51mpNsPiFUhbomqmk+O3/xN+O3f5tvf/jayLPPBD37wnkj57rYBPnyTAe6G
      5557jnK5vGsYeX5+/r7cZ3Qn9nFhLI1rG5tMT4+hKXX8A+McHgixMP8q/tETzAQbLJcqDIY8
      O0sjNpvN/Qr/zkHTcO756o+vfIP/8qeLKIoCwO/86X/mmx/+L3jtd/8iiJ9MioamaT/2cTp9
      +jSGYeza7tChQwfyeO+bAbRKioWVGI1yDikQAFVCqUvI7jCVcpGqw8DhCGKz2bDZbMiyjNO5
      91ALsFjXstyqkqhu3fiiWsRmt7/l+Tt58iSapv3Ycd5Ox3XfF8ZKbqwTGhkhtXSZ9WyT0w8+
      QGr5EvEynH7XSbzO9msrRRPoFlg0gTL/4ldI/5+/xsZGFEmSGB0d4Uh4Cpt0+1eACu6MWBnu
      oKHr8KUvsby8TL1e58SJE/Dgg/A2HWc/6AgDHFC+//3v7ywUK3jreGc8EvkOxOl04naLl4m8
      1YgaQNDRiBpA0NEIAwg6GmEAQUcjDCDoaIQBBB3NrlshNE1Dv0ePxum6TqvVuiexBIJbsWsY
      tFwu37OTUtd101siNU3DZrPd8vPdfnevtzsIGu71dndz/PZzu7fqN9+3eQArrKRIkmQqIwF7
      S95czjAMJEky7c9qX1aY9nWHeD+O9r1/v651P+L9JNrvZj8HId6tcvVmtR+oJ8JUpcSFS1dx
      erw0FYWRw8cYCO1egUHCYGPpMpmajl0y0Ox+Ts1Nc/NPliSJRiXHpfllXB4PSl1hYvYEvYHd
      M6tao8yFi1dweLy0FIWh6aMMRvx74kF0+TKpioZDNlBtXk7NHca258GeVr3IxTcWcXo8NOsK
      o0eO0b9Hu96q8vrrb+Dw+GgpCgOTswz37F5gSwLiq/MkS2o7nuTh5PEj2PfEUxtlLm5rbyoK
      w4fmGAz7TPuKLr9BqqrjkAxUm49Txw5x8/VRkiQ2V+eJF5s4bRItw8nJE7M49sTTmlUuXLi8
      k6uBqVmGuy20r8yTLG9rlz2cPLZbuyRJtOrF3cf50BwDe7Trap3XX72Iw+tDbSj0jc8w0rt7
      cTSTdlycOj5jypXWrHDhwvyO9sHpowxtH+cD1QkupTaQQxOcPHGCY+Nhlte3zIV0lWvxPMdP
      nuTkyZOU01Faqtnh+eQ6rt4pTpw4wbFRP4sbGVOZajaK5h9tx5vsZXl90xzP0LgWS3P8VDue
      koujtMz9pFJqA1t4fFt7iKWNlKmMko/S8Ixw8sQJjh8aYGUtbpEFg9X1JMe246nlTaoNzVSq
      mtlA7xpr72uyh+W1pMWuVK7Fsju5qmdjNCy0r6wlOHbyFCdPnESqpSjVzLdk13NRWt5t7dP9
      rKwlrLVvbO3kqlXcpNY0ay+nN5CC27maiFge52YhSt01tJ2rYVbWohbx2tqPb2s3KluU6+Z4
      tWwU1dfWfmyqb5f2A9UE0tUGly9eoCU50HWJw0fnCHr33FtuGOQ2r7EUy+GwS3jDg8xMDJqq
      Pb1V59LFS+iyA82QOTI3R8C9+zZjXWty5eIFGtjRdZienSPs27Nuj2FQ2FpnYSON0y7jDg0w
      MzmEvDeeqnD54sXbaje0FlcuvU7dsGPoMDVzlIh/z/0+hkExHeXqtS2cDhlXoI/Z6RGLeA3m
      L12gSTveodmjhCy055NrLEYzOO0yntAARyy0lzMxLq8kcDltOP29zE6PYtvz7Kqhtbhy8XWU
      7VxNzcwR8ZvjFVMbXF1L4XTIuIP9zEwNW2u/eIHmdq4OHZ0jtDdXusrVi69RM+wYusHkkTm6
      u8z3RpXSUeZXk7gcMs4ua+2m4zwzR3hb+4GqAeqlNOUGuLt6ODM7xJLVFRmdWDyJy+lgavYU
      zWKSpmq+qlXyKeqqhDvQx5nDfSyuma8yjXKGQl3H5evmzNGxW17VorEETqeT8ZmTGNUUisVV
      rVZMU25ua58ZYmndfEVu1nLkKhoub5gzcxOsrsUs8xCLxnG6nIwdPoG9kaNSN1+RG+UsxbqB
      y9/NmaMj1rUXOrHYJk6nk4nZU2iVlGUNENuI4nK7GJk+hlsrUKyZB0Ka1Sy5mobTF+HM3Dir
      69bao9FEW/uRE0j1DFXFrF0pZSg1wO3v5szsMMsWeVdrOTIVFacnxJlj01y7RQ0Qi8ZwuZyM
      HjqOS81Trltor2Qp1HRcvghnjo6zsn6j5j1QBmhUCvj6JuhzNViNJinXGuZCukapbjB3fIaN
      xXmyhZLlaui1coHAwBQRe5W1+BaVuvlxvGa1gLt7nEFfi+WNTco1xbwjQ6dY1Th2fJb40jyZ
      QglNNwdUygX8fZP0uhRWY9ba1WoBZ2SMkYDO4nqCctUiHgaFSoO547MkVq6QKVrHa1QLeHsn
      GPC2WLmd9npbe3SxrV232Fe+pHD02FG2VhfIFkqomtkkrWoBV2ScYb/G0vrmLbUXq8229uUr
      ZO+gvc/TZOUWx1mtF7CHRhkLwcJagnK1bhEPCiWFo8dnSa5eJVMoo2rmeM1qAVf3GIN+leWN
      xK5c2X7rt37rtyz3fB9w+YJIWgNPVwitpRAI9xLq2vPcqywT8Lto6TaCXR5aup2Bvm7kPdWe
      tyuIrjbwBUK0mgqhSB/BPc0NpzeITVdwd4UwVIWuUA/hrj3LHkoSoYCHhioTCnppqjIDfb2m
      atbtC4LWwLutPRjpJeTfrd3hCWI3FNz+EJLWwBvsIRLYGw/CAR+KKhMO+Wg0DQb6e7Hbdl+r
      nN4gst7A47+uvZfw3lxJMkG/h6YmEw56aWoy/f09Ju3hoJ96SyIS8lNv6Az09+HYE89xPVf+
      EJKm4Av2ELbU7m1rD/potKR2rvaMGNx8nI2WQiDcYzrOdk8Qx3Y8WVfwBnqIBHd3lNvafdRb
      MuGQn0ZTt8yVwxva0Y7a2KX9QI0CNSo5lpbWGR7qo5TJ4B/pNRcydGKrKxhdvXhtGoVSrb26
      2h7qpSxLywmGB3oopNKEJ4dMZVr1AotLqwwP91PJZvAMRiziGcSuLaN6e/DZdQqlimU8pZpn
      aXmD4cFeiuk0gTHzrd6qUmRxYYXh0UGq+TTOHosl3w1IrK2geLrxOwzyxQpYLBrcrOVZXFxl
      ZLifUjaDb8jijTeGQfzaMpq/nat8qQqYtW+ur1B1hgk4JXKFEtMWv6+lFFhcXGF4ZIBqLoOz
      z+JdAwbE11Zo7GgvY7UOTrOaZ2lpbfs4p/GNmNdQ0holFhaWGRkbplbIYNszOnedxNoKNVc3
      ASfkCmWmZXOuWvUb2iu5NO7+0M7fDlYTqFrE7osQCofpDfvIFSrmQoZOqd6itztCONKN1qhY
      VrO1ShF3V4RwOExf2EPGYl/NagHZGyYcDtMb8ZMrlC3iGRSrDXp7uglHujGaNVoWTYRGpYDD
      dz2ej6xFvFatCJ7r8QLkiyXLPOQrdXq72/EktU5TNfc5mtUCtu1c9YVvpV2nWGvSs50ro1m1
      zFW+XKO3p4dQJILdaFiOcrWqRaQd7V0UrOJhUKgo9G3nCrVu2T9rVIvYvOG29lvkXa0VMNxh
      wuEQvZEghcItclWu09fTTSgSwaYrNFrmXLWqBWTv9rGJdJG/Kd6BGgUydI3UZpx6SwfZwdDw
      IE6b2aNKJU8y037pgz/UQ3fIb7quGbrK1maifTBtToaHBkzVuqFrpJOJ9lCdbGdwaAiX3SJe
      tUAyXQDAF+ymJ9xlEe/O2g1DJ5OMt4c1JTsDQ4O4HeYH2xu1IpupPADeQITeSMAy3g3tDoaG
      BnFaaa8USGaua++hJ2zOVbNWIpFqL+Xo6QrT1x00xzN00sk4tcbtc9WoFtlMX9feTW/kFrlK
      JqjfRvvuXNkYGBqyzNVu7RH6ui1yZeikN+OWx/lA1QDNWoGN2CaGo4vxXo/1PIChE19fI1eq
      MzgyRn4rSsviKqNUcsTiSSRXkPGIk6WNtKlMSymxHk2g232M9/lZsZwHMNjcWCNbrDEwPEY5
      E7ccBWpW82zEk+DsYrzHWrvWKLO2HkezeRkfCLC6bjHqdFO8vqFR6vlNy5GUVr24rd3PeK/v
      FnMYOonr2kfGKKVjllfIZGyNbKFK7+AIrdIWJYtRIFUpsb4eR7P5GO8LWM9hGAab0Xa8/uFR
      arkEtYZZe7NeZCOawHD4Ge/1srxhHjHTmxXW1uOosofxgdAtR8yS0TWyxbb2ZjFJxWIUSN11
      nLtYuSnvB8oA5XQMV98h7LVNkuksqbxFNau3iGdrnDgyyJX5JbbSGcuRjcJWHP/QESjFSGUz
      pApVU5laNoatewqnkiKRypLKW1SzhkY0Vebk7DBXriySymQsR0lK6TievkPIlU2SmQwpiyaQ
      kothhCbxNDPEtrKkckWLLBhEN/OcODrK4pVF0tmspcGrmTiOnmmc9S0205lb5Eojlt7WPt/W
      rlmMkqzHs5yYG2fp6iKZXNbSJEoujhSewt1ME09lrHOFTjRZ4MTsCAvzi6SzGUvtlXQMZ+80
      9toWm7c4zs18HC0wgU/NEd3K3SJXsJ7IcuLo2E3azfFq2RhyZBKXkm4f59wN7QfKAI6uXrxy
      g+HpWVr1Kt0h83u4dE1joL+bhtTF4bEIhuw2jWpgGHgCPTiMBqOHZqlXa/SGzJ0o2dtLl63B
      0NQsulIhHDR3SnW1xdBgL3XDx8xEDypOHBZVv7OrB7fUYOTQLM1ale6gWbvh6SXkaDA4NYPU
      qBCyeGmdoTYZGh6gpnmYmeqnqdlxOczxbP4efLYGQ9MzaPUqESvtmsrgQC91w8/MeA+a5MRu
      uodDYXhkkIrqYnZ6EKUl43FarDfk6SHgaDA0NQO30T441E9d9zIz2UdLd+CyaLbY/b145SbD
      0zOo9YqldtXdQ8TZYGByBluzTDAYMpWhpTA0PEhV9TA7PYCiyrgttEveXgL2JoNTM9vH+Yb2
      A9UHqJUyxLfytDSdSDhCOBIxJdDQVWLra9SVFg5/gGAwRLjLu3sm2DCoFjMk0gVUzSAcDhPp
      7ja1M+vlHLFk+wobiUQIRSKmdqaha8Q3rlFTWti9XYSCIcIBn2nmuVbMEE/lUTWd8C20K5U8
      0c30jXjhCG7n7oE4w9BJrK9SVVTsXj/BQJBI0G+KVy9liW3ldvZlnasb2h3eAMFg0Kzd0Els
      rFKpq9g8vvbvC/pNs7dKJUd083quwoQi3eZcmbSHiATNubob7Y1qgY1Eql0mHCEYieDZk6ub
      tds9PoLBkGWulHKOaNJa+4EyAIDWVMjm8zSaGkq1hCPQx8TQnmEyQ6dcLFAqVzHQKJabTExP
      4XPtTpDarJPLF2g0NeqVIq7wIOMDu4c6tZZCLl9Aaag0aiVs/l4mh/cMvxoG5c+UnNEAAA1g
      SURBVFK+Hc/QKJYbjE1N0bXn1gqT9mA/E4O7hye1VoN8Pk9dUWnWy+DrZnpkz5CpYVApFyiW
      KhiGTrFUZ3R62nQrRzsVKvlUktVYku6hCSb35mobpVpifX2Npu5i8tAUfot9NesVohtrlBWZ
      ySOHCHrMSxwaukY+neRadJPwwBhTe7Vv06iV2Vhfo67amTx8yJSrG9o3WY2l6B4at9RuGBqF
      9Bar0QTBvlEOjfbfMl50Y51qU2by8GECHqt4Gvn0JqvRJJHBcaaGew/WPEAlvcZLV7Y4emiU
      YnINvfsIh/acQOgqr7zwPF0jh/HbVOZXE7zvibPY9zSDCpvLvLZSYGZ6iHx8BdvQcQ73h3eV
      qeWivHgxxtEjE5RSG7SCk5yyMNv5H/xPvIOHCDh0ri7HeM97HsO555bDcuoar1xNM3tohMLm
      Neid5dAeszWKcb5/fo252Skq2Rh17wjvsjDbay/+T5z9U4RcsLC0waOPP4ZnTzOoWS0Q3cq3
      J31qWQqajzN7c2XobMY2aOptrasbmzzx3vfj3XOh2IqtoWjtMtFYgrkHnzCZTa0XWU/ksNtl
      qOfJtdycttCejK/T2N7XWjTBQ4+9D/+eeM1qnuhWYVt7hoJu1q4pJa7Fs+3mplIkq9g5bWG2
      m7VvxBKcfPhJuty747VqBTY289vac+RVD2e2j/OB6gMYho5Nlmk0GiBJ6Lpuqs4ADFlGV1s0
      W+rOkJf5HnAdmyzRUBogy2iaYS6ja8iyjUZDAW4Vz8CQ2vEarRaS1L7f3SqeLEu31W7o+k48
      HW79+yQJNJVGs4W0bey95bRWnVSuQigUIhTsQpYly32lEnHsvgChUAif2wGYy2U34+DZLuNx
      WcdTGySzpe14AWTZXAYgnYghe6/Hc1ruS23WSeWrN7RLZk263iKZyrfLhILYbvH7spsxpG3t
      fo91PE1tsJUr72i/eV8HqglkGAZKrUqjpSIbKjXdyUC3uYOktZpUazV0JKrVKgMDg+a7Fw2d
      eq1Ks6UhGy1qhoeBPbOJhmGg1Ks0miqyoVHV7Az2mDt37Xh1dANqtRq9/f3mOQVDR6nVbtLu
      YmDP/fKGYdCoV1GaKjI6VVVmsMfcudPUJtVqO169XqO7t99ynFxVdRwOOzSrxPINRvrNM9mq
      2kKW7ciyxNZmgkjvgKkTr6ktkO3YZIlsahNPsNdUSxiGgaqqOBwOaNWI5eqM9Jtnn2/eVyqZ
      INjdb+6bmLQ3GdlTO++KpyrEMhVGBixmjG+Kl0lt4gv1mTrx7X1p7XitGrGcspOrA9UEapTS
      rMZzOB02qGVYU8JmA+gaG9dWaEl2JGD+6iJPP92Pbc+PrhVSrG8WcDhsUNliXRs0GaBZybCy
      kcXltEE9x7Wq32wAQye6tkKTdryFxSWefP8/wOHZfRIppTSr8XxbezXNWrObge7db8BUqzmW
      19PteEqBlZLLbADDILa2QsNox1teXuKR9zyF07+7Pd4sZ1mKbmuvZblWD5gNYOhEry3T2tZ+
      dWGJ9z/1QZMB4uvLKHq7zNrqMqceeZ/JAK1qlsX1zI721bLbbADDIHpteSdXS0tLnH3yKXMH
      t5xhJXb9OGe5pgRNBtBqOa5eS+F22aFRYqUgWxogtra8k6trK0ucPvsBkwFalSyLG9va63lW
      q96DaQAMnboKU5MjULET3zBPoiBJVMsl+g8dx++U2dq0uoUZ0FUUw87kyDCUILFp3dqrNXWm
      p8ah6iK+VrMoIVErl+ieOk7AJZNNbVpWxRg6dU3a1m4jHrVYXECWqSqtdry6h3jdemxbKZcI
      TBwn5JYpZpNWt+8ABvWWwfTUCFSdxNes7s6EeqlE96HjBJwyma1Ny301yiW8Y8fo9tio5lPW
      v0+SqDbUtvaah/iq9a0JSqVEcPI4IZdMIZO8Ra4Maq3rx9lBfMPixRk2G9V6k0PTE6DkiVez
      lvEalRK+8WNE3DYquS3rXElQa2jb2t3EV2/M0RyoJlAxl0a3uQkGzMNw19EaNdLFKqFQxHLM
      F2g/xJJLYzi8hLrMw3DXKeUyqLKLkMWw33X0Zo1UoUooFMbltFufizvaPYQshkh34uUzqJJz
      p91rKb1VZytfIRgM43bdPp5mcxO6Ta7uSntLIZkvEwiG8Lgct4x3V9qbdbYKFYKhMO475OpO
      2sv5LC3Jcdt4tOok7yJXbe3Wx/lAGaBZr5ArFMkXitjsLoZGx0zDdYauU8hnKObyNAwJT1c3
      owMR0zxAo14hXyySy5ewO1yMjI2bq3WlSjZfIF8oYbc5GBgdp2vP8Jlh6BRzGQr5Ag0d3P4I
      o4PdpkTu1T48Nm4alm01amRz+Z14/aNjBPYMNRqGQTGXplgoomgGLl+IsaFeU7xd2u3b2vfm
      ytAp5DIUr2vvijA20G3KVTGfplAooag6Tm+Q8eE+c7y70r6dq0KRhmbg9ocZHewx50qpktvR
      7mTQ4jirjRqZnXh2+kbGLZ8OLNycK2+IseE75GrPcT5QzwNIskS1UqNvaISeLgdX5q+i4Nx1
      j74E2O0OfIEgcqtKTVFIbqbxBoI47ds1giQhIeH2BuhyS2RyRUr5DDXNRuimfck2O3qriQHY
      nS5KmU0KikE44NsVT2s10R0+RocHqOXirMcyeINBXPabaiAJXN4uAm6ZdLZAKZ+hosq7tMuy
      jFKvEYp0UynlKOZzFBWDSPBG30SSwCbLNFUNSbLhlFrEYklcXcFdbWlJkmgoTXr6elBqFXKp
      FOWWZNZuyPQN9KPVqzQaNTY3M3gCN2mXJOyyTLPZQJfseO0G0WgChz+4a6LLZnfg7wrQ09ND
      wGvj0sVLNAyHSbuhqUjuLgIuKJdKbCUzuPdo1xo1apqDsdFhgl0+tqLXyO/Nu80Gmkqz1cLl
      9VHNbZGpqHTfFA9JwtBVcPkJuiXK5RJbyTSurt3a0TUc3iA9QQ+Vao1CNkWxYRAJ+A5WH6AQ
      X2At58CzleHIZDclujhtGpfXePXF5zC6BlFza7TCszx5+ojpgZittcuUPJNkly4xMz3EUqWL
      uT1jzdX0NV5frXJiZpTK1ho5o5uHTJNSGufPv8bE1CgrdZVyKsORkw+brra5jStsyaOU1i5y
      5NAoiwUXc3u01zOrXFlvUt86x7FTR1nL6jw+t2dix4DXXv4hA0dO0uU3uHTpCmcefRy/a3dz
      r5xc5kpcpb61xpFjh8hrXs7uHZfXW5x79XXee3qMC6s5XHqJh88+buokXjj3EpGQh5WyF2ej
      wOlHztK1J16znGJ+NY3b1e4E5zUf7947KWUYnH/lHN2RIJsNB55WieMPPkaXe/e+SpsrXEnb
      SSUg2N3P6KEZbHtriUKU81dLNEqbHBqJkJd6efCQ+YXmr77yEt3d3cSrEl1GhSMPnCXo2X1a
      lxMLrDGBFn2NyFA/2ZaLs9vH+UDNA7i8AZxOF0dnxlmcv4LFfVQg2zhz9gm63dAwbIyPDplO
      foBw/zCp5Qtk8iUW41kGe83DjXaXF7VWIJFIkMwW8Xks3rooyQT9XoKD0/jUDOvJvGUbP9A3
      TH7tIulskcVYmsGesKmMze2nWUrjcDlJZ/K3fAGGz+skmUiQSCRQJadpkg9AtjsJhHs4NDdH
      f8BreX8SkkzAafD6a28QGBjG63ZZ5somQ7HaoG9whL6QG9VilQ3J5kBDZnJyksmJ8e05BTNu
      j5eJ6QkmxidxOexWzw6Bzc7A6CQnjh+jy66SSJkHAySbA6NVxbC5GR+fQFctHo8F3C4vY1Pj
      TE5MbcczB3T6glSSK6wVWvQFfLhveonfgeoDwPYiRpKE1CixmmkyNXyrN64b1Mrte8EnJsZN
      j8FdL9NqtbCpNTYKBhODe4baVIWNtQ08oX56uxykSk2zUQyDfCpBXpGZGBsgm0oS7DaPy2ut
      OhsbMfyRAbq9Mltl1TSkqmtN1lfX6OobIeBQyVQ1hnr3GsWgmEmSqxu4jDqK5GNiZMD0YJWh
      qyTjMaoNFV2HgdFxi+l/g2oxx1Ymj26AN9jDYE/IdFLWSxmW15O4PR78gQgDvWHrE/c6zSpr
      6SoTw7d5wYmhc21lhYGxKVONo7UaaJKjncNGmbVsw3y7CwZNpQ52F06jwdpWmYkR820QxUyC
      TBXGRwdIx2OE+odN8XS1wcb6Bl29w4TdBslCk6G+dt4PVBOomo3yxkoaj9sO9RybDJgNoKu8
      ceE1dFt7xnJhZY2R0THsewaESqk1rm7k2yNF1TRbjnGTASqby6QUP/7YKv6JQRbW8xYG0Lh0
      ZYm5o5NcWdlEyV7jSKDHZIBcbJF8K0xtfRnvWC8LG3WTAWpbyyRqHsLXruKaHGXx2pbZAIbB
      xUvzjA9GuFJyENASdPf0mKr1UnKZtaydk4eHqGXWmF+J88jxiT250nj99UvMPnAGt83g/PnX
      CZ99DM+ecfkLr11k+tRDeO3wxoXXcPvPEvbujqcUEry2sInP44BGkXgzaDaAoTN/4Ryq3K7Z
      Vq+tEx4cN52QSinFpZU03uvH2eg3GaBVSnJuPoHf64BmmVjNa2mAi5fmOXpshivLcaRyHEew
      3xSvklwmWfNRW13AOTHE4np2xwD/Pya9GtAXITDJAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 19' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Types Deforestation' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAc9klEQVR4nO2dWWxc2Znff/fe2jdWkUVWFYuiSEqkJGpfWnLc6sV2w4k942U2GLYbAyRj
      IC+DvEyQAAME05NgkAQZeAaZmQcnCJIxkgGyITNu2B633ba7W91aSLUk7hIpUuK+FGthsfa6
      9+aBIlvqS0plVpFFss7vqe5H1nc/njp/3nNvnf85kq7rOgJBjSJXuwCBoJoIAQhqmj0hAE3T
      0DSt4nmLxeKO5NyJUeNO1Krr+o61QaWpVh8wVfyM22CnbkN2okH3U62wM/UepHbdE1cAgaBa
      CAEIahohAEFNIwQgqGmEAAQ1jRCAoKbZE49BBZXjh/0zvPV238axrutIkkRnk4e/+c7LVaxs
      byIEcMBIZgs8XFo1xO1mpQrV7H3EEEhQ04grwAHjHPP8sf6uIe6nBfji7he0x6mAAHSmBm8Q
      sR0lbFpmYGya9lNXcOfm6Buboe34OVz5OfrHFzh66iJkYhwKNTDyKEJ3V1v5pxc8Q7FRI/3Z
      vCGe9RaqUM3ep2wB5FJRois58kqO2USGV15/jb57fSSRefnqFQaGJoipGV5/5SL3BucwyxmG
      oxGCXacN8z92Yj5IpXPqur5j81YqkbcrOU3r+I8Ncbmpu6J170S77kTeF+UsWwD9vT2YnS4W
      5xdp8ZkxKSYkVCTZimJSkHUNFDOKyYKkq+RXoyTyFtqe3JSpqrrRqSo9yUrTtIrPXFzPKUnS
      juQtFzmfw5lOGuJ6JlWxttipdoXKC+BFtZYtgCPd58jEZllU7bjlFX72zk9obD+DKzfNz999
      j8bD3bjSk7zz0/cIHTmHYoXTrY3cGXzA5fMnMJlMqKoKgKJU9kmFruuYzeaK5gQwmUwVEcA/
      /uvrjMytPDnSgbWcf/jlk3zlTMu2cmqKwmZdSJIkTGW0xfevj5NX1zqpWlRRTGuf1a+dDhOq
      s2877zrV6gNlC8DXGMTXGKT5yfHR0+s/aab91PrrFjo33hEA4Mr5xnJPve9RIlMo84uGuJQ5
      tO2cCdnFjKXdELeZwxzddlb4o7f7SGSM9xEngnUVEUC1EE+Bqsibb8wRX50xxE+3pbadM6Nd
      ZK7wHwxxd9FdlgAOKkIAVeQzPT9An7triJudZyHw0rZy1hd1zqeMY14lrW4r30FHCKCK/Njy
      u0SsxmfzryqnOVaFemoRIYAq8rloB8XFBkPclfFWoZraREyFENQ04gpwwDBl4jjmBg1x2dIE
      vLr7Be1xhAAOGJJWRClkjPFCtgrV7H2EAA4a3jR695QhLAWrUMs+QAigBKZjab5/YxwATdWQ
      ZRkksCgy//yL3dvOa15dQo4vGeJyvown9oeX4HduGMK6Nbb9nAcYIYASmImn+dN3hg1xp0Up
      TwB191H8jw1xxXp6k98W7ARCAFVE//IdyBpvWPVmMW9/txCPQQU1jRCAoKYRQ6ASuMQM0/q/
      N/5AdwC/uev1VIPDepyknjPEbexvp1nZAkjFFhibnCfU1olTXeHB4znqg4cJexVGxmdoO3oM
      q5pkZHyOI11dFLMpPB43y8sxGhrqK/E37DgyOjY2m0xW+WXC9ypfv3KbbD5tiDfWvb77xVSQ
      sgVQ0CRaWkIMDw0Tdus0tHTid9sYHriDNxhicHgUS26ZQDjA4P1JHHKagNvEstRAg3EazJ6k
      KEmsmIxNJZlM7A8Jl88r5iVU3bjcileq8SuA02Xh1rUenOFj5FNTTA/eJXe0C8nioTkcIhp5
      gG730NzSylJkjHR8hp45B298vgtN056xRK67giqFqqrk80aD+K/KpNfN9775JUPcIlv4ozLy
      6/rmFlBVLaJtM69e3LwNdV0vqy3O3v0AKZcwxLXTEfKe8tt43Qq5232g/CFQWuOlV65y/eYd
      Wro6affaudE7RJ0FVuIJMpqMKRtjJRYhJ1lw1oc574CJ2RidLfWYZXnH7HD5fB6LxVJ2nqZU
      nq8uDBniimLDcn77+XOSvKl9UVFMmLZZt2pSNh2VS5JUVlt8tfUvWN2kI/2Zs5uzFWjjavWB
      sgWgpuPcGhym4/hpLHqcnp6HnLpwCZeW5M7gQ7rPXsBWiPHx0GNOnTtLIZ3E5/Oiz86Xe+pd
      w52M89kbf2/8gcUJ/3D366kG//W+Az1r7Eh1r+/vFefKFkBDuIOr4Y4nRx5ebmp98rqeK1ee
      jJBtfj5zxb/22uoDINQcKvfUu8aIpZ1/eejPDXG72cz/rEI9gsohHoOWQHvWzF+MGmeTSRbR
      fPsd8QmWgKKDc7P7VU3sMb7fEd8EC2oacQUoAUlXUXLG1dbQK7/o1l7FFn2MnjZ+EywXzleh
      msohBFACsiWGveVHxh9YbMBv73o91cB07GP0rPGbYMmxv2euCgGUQn0Kfv1jY1zevyui/aro
      X7wH2iZXwYZNYvsIcQ8gqGmEAAQ1jRCAoKYRAhDUNOImuIo8KLaQ2mS9ng7NTVMV6qlFhACq
      yB8k/yl9SeMiVt8NHOJbVainFhFDIEFNU7YAVmPz3L17l8V4mnw6zkD/AOmCRiGToH9gkNWc
      SiEdp69/mHReZWVlBdCJRJYrUL5AUB5lD4GKmkJrazNDQ4PUWTQawiH6+kdwaiv4QmuWSHNu
      mVBL8FOWSD/+SvwFAkEZVMASaV6zRDYfRS+maQ61srjQg2TyEGoOsby0ZokMhQ+xuLQ/LZFs
      tcugTln5t9oRUS1uv+6dskRuRaFYRKpA3v1tibz6Mtdv3cVrU4glImSKNhx6kkQ8TlaTUbIx
      ErGlDUvkBQeMz8ToOrQ/LJFa0cSmTShRVv6tdppUTMq28/5Yvcy/WTbuEdbp9PDXZdS61drS
      ZpMJuaYtkZk4PUNzHDl+Gr+tQN/QBGcuXMCSj3NncJwTZ85jK8a4MzTJybNnKaRX8Pm8aHP7
      xxK5n0jqDsbVZkPcrtnKyvvHq79LpmicDfr7amhfb75XviWyuYOXmzs2ji9febLWibmey5fX
      Fw3xc+XypyyRof1jiRTA/82+wsomw6tvaN59LQDxGFRQ04gvwkogrjn5KHfBEFdkK8bVggT7
      CSGAEhhTw3wn8QeGuEORGa9CPYLKIYZAgppGCEBQ04ghUBVpiSywGo0b4p7WemCfrBy8zxEC
      qCJ/8j/+nPyIcYukhn/1J3CkdZN3CCqNGAIJahohAEFNI4ZAgpL473/2L1BXjUugnPzTvwTv
      uSpUVBmEAAQlEYwtoW8iAEux8jNMdxMhAMGB4623+/jl/QVgbZr1+qzbNz/TzneuPjtzSQhA
      UDV+OjTHuyNrs4LX/QCSJHEq7OXNK+3bzjsZTdE3Y3y8PJ8w+q+FAErgyPwUf/W9f22Im2w2
      ePVvqlDR1lx50Mdffe8/GuJ1h9vgpe/ufkHPofdxlP/0wZgh/pUz4bIE8KtQtgDmJoYYeTSP
      4grQZl9hcD5H29HjOLOzjEwtE+w4hTszzehslJZjF1CyUTpaGuifSHDh1JFK/A07jjOb5tJD
      4/N6ye6oQjXPpyEZ37RWs1xZp9VBoWwBBNtO4Klv4uFsnGQiTzDcTEvQy6ORJT7/hVfpvzdK
      DDNffONV7tx7BIUItyJxzl2+hK7raJqGpq3tPrGVRXC7aJpGcSs746+SZ0ubnl5W/q3+WlXd
      ft3rbWk8WXm1bkU5tbZqy7yqTxjiJ3RTee26RT/SNmmDsgWQic4xsZzneGcHhXQDydVV+voG
      cZtN6JqOLgGahq5r6JKEYrZhVQvkChoOk4wkSRs3KbJc2a8lJEmqSE5J3ty6CJXJb8haRt1b
      2SyRKt++6+fbbt5AZ5JTyrQh3hqo35laMbZB2QIYHxtlMaOTTGVosqSZWkxQf+g4TXKM9375
      Ia3HzuHMTvOzX1yn4+QlpIyF9tMB7g1P4DvdhSxJG4rdswKQts5RTv6tZCXLOyCAHRJrObWe
      yczTvHTHEHfbPeW16xZtsFl/KFsAp6689szxkZPrr5oJdqwfNBDuXI97ATh3uqvcUwv2OZPJ
      M9ye/bYh3u5u59Au1SCeAgmqxomUh7alFkPcEty9mbBCAIKqIReymNIxQ1zJu3ethhIEoDN4
      85fodc2YbF6OtwV2vipBTWA+ex2p4T8b4nLD54HXjG/YAUoQQJwPbtymrVslkZwXAhBUDN1a
      BM8mS27Zdm9+UQm32h66j4YY+LiPjtPHdr4igWAXKUEAOfJFB62tjcRjiZ2vSCDYRUoYAjl4
      42u/gZqa5Afv7/3lDG+MR5iKpYC1RWYV09pak8eDdZwOe6tZmmAP8lwB6JpKLhfnZ3/3E2L5
      Ip0XP7dbdW2bmZ6/Z2TgriHe8OoXICyWsRI8y3MFkE7M8Hf/72cbKwOn08adwvcar/j7udD6
      riFe523b/WIEe57nCsDpa+Vb/+Rb3PzwFm53A67g3l/QdijTxsSK0aJ3JheifpPfF1SP3sIx
      bqR+3RDvtJ7CGC2dz0lj1Mt9hvhF2QWcfiZWwj1AhpHBEcwOM/rDGN/+jatllLbzXIhd5tSc
      8Yt0+8p+XsP4YPJB/hTfTTUa4r/mqCtLAPrLFrRu43LweshsiD1XAMVChoLq4mu/81vMTz3C
      Fep83q8LBHuCr41c4x+N/sgQd1z2QviNZ2LPFUAhE+eHf/tjEpqFcGsbZ8OVLVQg2Alua5eZ
      KFoN8bNqN5c+FXuuAOyeEF//xjcYuNPLzVvXWc5Z+PaXLj/zO4VskpGRUfyHuqi3Fbk/NsmR
      7lNYCkmGx6Zo7zqBTV1h8OEsnceOU8yuUlfnIRKJ4vdXftKTkk9hSkUNcblg9IMKDiaX4t2c
      mfcZ4vZVo83yuQJIRh/xox/d5Mi5C3zr934fp8M4ropHY4QOtzE6ep+IXKTxUJj+vmGcehJ/
      OMzQ8Cjm/DLh1hBD9x/jUDLk4woxpXFHdok0v/5DlDPvGOJK6PeA8ztwRsF+5rkCcNe38Y03
      256bwB9o5vH4KM3hFhLRCKFACwtzc0iyh0AwwNLC2i6RgVAL8wtjpBMz9M45eOPzx57ZJVJ6
      yhhTDrq5AA7jXBJdKWzfZigskVuyE7XqWpntqm1hidzEIlv2dOjZ8REUXyvBOjvx2UdEY4sb
      u0TGojGyuowpHSO2vEhesuKoD3PRKTE+HaWrtWFjl0hd1yviWNKkLTpWGZZAYYncGnkP1mrK
      JmDFOGvBlA9U3hEmKTKT9/tZqAtw+kQn/UMTnDl/Hks+wb3hCbpPncVajHNvZIru06fJb+wS
      ufBsngrZF7cyGpbXqYQlcsvz7UCt5fYFc3cPivMDQ9zUbkGWX3o2tu2zPKG5o5unNonk0vrO
      kGYfly6t34g08NKltRte55NdIoOhYLmnFgg2p20R6h8ZwrrfaL4Rq0MLahphiRQcOP4y9XU+
      ihmf+P2W6xTf/FRMCEBQNd58722+8P3/Yoh7X/kcnPp32847UmzlWsFjiF9UjW5GIQBB1XDk
      sviTxkVsHZnUrtUg7gEENc2BuwLMqH5iBeMGcwHNi5jKJPg0B04A/zb1TX4QMzq//pmniT+s
      Qj2CvY0YAglqGiEAQU0jBCCoaYQABDWNEICgphECENQ0B+4xqEDwnZ/+b750/UND/Nhv/jZ0
      vPlMrGwBRGYe0vdgmpc++xrR0esMre8SmZllZDpCsP0U7uw0o7MxWrouIGeX6WhpYODRyr7Z
      JVKwv2hfnCEwMWyIe6JLhljZAvCHj9CZyaKjk0zmaQoFn9ol8rW1XSIly8YukXo+wq1IgvNX
      nt0lslJmjTffe5urN28Y4qe/8lXo+EZFziE4OFR0CNR+8gyr6RT37g3gsZif7BIpgaahPdkl
      0mSxY9eNu0QWi0XULb23pXNscozDQ72GuOvSefL57a07v7U/Vd92Tth6O89iUd12XlXdvFZd
      L6/WrSgWi2XUuvnnrelaWbVu5TXWNGO7li2A+Ykh+ofHsC1rtLkLTC7EaWg9TqMc5733PuTw
      sXM4szO8+4sbHDl5CTLLtLcG6PvULpEmkwlFUcotB3kL/64sy1gslm3l1ExbNZO07ZywtSXQ
      ZFK2nTevbF6rJJVX61aYTKZt593q85al7X9WsLVNVZaN7Vr+Rtnt3Xy5vXvjuGPjZTPBjXgD
      zRsrE9YBcFbsEinYA4jHoIKaRghAUNMIAQhqGiEAQU0jBCCoaYQABDWNEICgphECENQ0QgCC
      mkYIQFDTCAEIahohAEFNIwQgqGmEAAQ1TdkCyKXi9PcPki3qJJdnuPbBNSKreVLRWa5d+4jF
      RIbVyDTvX7vOcjLL4uIiulbg8eRsJeoXCMqibD9AvlDEatLIFzXGJ2Y5f+ksA4ND2Chw9lw3
      w6PjyPkkL53vZHBsCrspTzY6h9x49MXJBYIdpmwBuL1+4pEFQEe2OnDYXViUAorixOF0YJV0
      dLsTu8ONSV8kHZ1hMufgC52OZ7ZJ1XW9IpZI7TlbZApLpLBEVtwSmYwuMjM7z4pSj7mQZHCw
      n6LJh624zNDgCHnFiS07z+DgIJq1EYc5zNVGF0OjU5w93rqxTSpsbZH7VRCWSGGJ3FVLpCTL
      NLd1IplNhE6dYWEpTlcwhKKGmV+K4Q8EMWkh5pcSNAYCqAU/druNI/bVck8tEJRN2QJwef24
      vJ8ch8OOtReKnXDY/iTq+CRuWou53e5yTy0QlI14DCqoaYQABDWNEICgphECENQ0QgCCmkYI
      QFDTCAEIahohAEFNIwQgqGmEAAQ1jRCAoKYRAhDUNEIAgpqmogKITo/y81/8kuFHC6SWn7ZE
      TvH+tetEklkWFhbQtTyPJ2cqeWqBYFtUcJM8nXh8lYtXX6fOrHGv9/aWlshcbF5YIgV7goru
      Eqko8PG1n+MJtGK1PLFEoqPbHcISudm7hSVy0/i+skRuoOvIVictYTtLKxmcSprBgWHyZhe2
      zDwDAwNo1qY1S2STi8HRSc4dPywskZsgLJH7yBK5gSTRFAiyFEtyvj2IRc+zEInT0BRYs0RG
      VmhsakIrNmKzWem0pyp2aoFgu1RwCCRhdXpocXqeHNtpbn7KEtm8bom0AeByuSp3aoFgm4jH
      oIKaRghAUNMIAQhqGiEAQU0jBCCoaYQABDWNEICgphECENQ0QgCCmkYIQFDT7IoApkbu8M47
      7zA6E2VsbAw1G+fu4PhunFogeC67IACdSAa++MZVVpcWSCWWuX33AUc6W3f+1ALBC6ioH+CF
      6KBrKsWizhZTtgWCXWUXrgAS9VaNd969hsPfhNPbyJWXTjN2f4zN7SACwe6xK1eAw90XOdy9
      ftQAwMWzni1/XyDYLXZ3CPQpnrZEVsINBiBZ7UhOo9dAslq3n1NRNs0p2x3bzgkgORyb5sVk
      3n5Ok2nzWh3l1So7XWibWTjL+Nwki2Xzz8pm23bO9fdvmncTl5mkb2VM3UUqaYl8mkKhgNm8
      /c60GcViEUVRtrQzbpedqHXdZ23a0tK5PXai1mr1AfE9gKCm2RNXgPUSKv1fVdf1HckJotaD
      UuueEIBAUC2Ut956661qFwGgF3MMfNzDo4VVAo11PLjXy3S8SMBnZ/BuL/NJnUavjb7eWyxn
      ZRp9HtaFXcytcu/jXmaiOZp8Vu729rCi2vA5dG7fvElGcuK2aAyP3MdZ58diKmHkp2vMPhrh
      7sAoLn+AxPR9+kdn8AeaWHg4wODEIo2NDUzev0f/g2kaQyHMyov/e+VWo3zc20ssZ8Jn17h1
      oxfN5sFOilu3biM56snHpum9M4BmrcPnLu2GMBWb5VbPHQpmF9Ziglu9fdjrm1BX5un5uB+X
      vxm7RWJipI+CyYvTVsJ9gVpg8G4PD2cTBBrrGLnXy9yKSpPXxsDHPSylZRpdOh9+cJPpyAqB
      QAClhKaNzo7Te2cAs9tPITZN770H1AdCJOcfcmdoAl9jgGx0ip7bQzgbmnBYXlzrWh/oYSZW
      oMlr5W5PDyuaDZ9d586dftx1bvp6exgdHSUju2n0OoE9dAUopldIqGaWH43g9tpYzDZgT4xD
      kx/0OqToGHlrHfaGZrJzo4SPX6TOttba+VScFHbmBu8h19tx1LWRmBgEm5Wmw13MjQ5xuOMI
      S5E5/MEu6j0l3MBpRZaiK7jMeR48WiCjWukKWljM5IlHobNRZckcwG9VsGammFK66G5+cWdd
      TSwjWd2M9fWhmXXau7p5OHQfk1zk8ImTjAzc5+zJYyiKxq07D7j6Dy6W1H7RyBIuj5P+/odI
      WppjJ48zOPQIMwW6ujsZHJ7izJF6btwbJNx+mc7WuhcnzSVZzJpYfTSC5LOSKjZiXn4Ifh8m
      s5/i4gPq/A0sm8KcbHaWVCfA8tIiHreFe4OToKuc6AozMj5PMQ/dHT4mogVSi4tc+swlJEnG
      VIKq8qk4aezMPtUH4hODSDYLnjofsazMuWOHWZp8QNbezKHGtadEe+Ym2GR3k4tMInmCuCUV
      Z30DwXory0kVj9tDg8/FUkqj0eXA5XZQzH+yAprZ4SY5O4Yt3IFTB5fTiddjJVEw4XPYcTks
      mJxe3KX811tHVnAoBUan4nS1+nF463G7PBTTcRzeRuq9brJ5CZOa5PGqk85gaY9ZnW4Pcw+H
      aWjvwmyy4rY7cNhkcpKNOocDq1lCJkfPzV7cDY0ll+v1uhkdfsDho0cxWe04HB7Mcg7F5sRh
      d2OWM9wfX+Do4RBFVS3tS0irCy0+Rd7ThA8Vp7eBpnor0ZSOx+Wi3uckWbSxeP8WP//gJtli
      aV/vu5wWRh5M0dV5GIvTjcPpQykmsLu9uJxuNDVBIhLjw/d/wYOp5ZJymh1uVj7VB3weK4mC
      mZDfB2oRXS0wF8sSbPhErHtGALnlhwzPZjBpBVSnj/n7d7n3eJWOJgePHw5xfypBV9DO4P0R
      ZhZWsNk/+S+emBnlcVRFLmZQrFbGHwwxGclz2CvTPzLM4koRPRtnZnaeqZk5SlmAUS9mudM3
      jMNhJY2V1NxDhkYf4mg4THJuhLsj03idRe70j+O0yWSyWy2f+CyTI30kNCtaPo1dURkYHiKe
      lWmw5OkbGiKjmlmOxAgdaiUeWSy5/QZ6byK7POSyaUzFNENDfRRNPpRcguHhAYo4QM8zMvKA
      6dl5Sumq6soU9yZWsFJEs3uZe3CXwakU7X474w9HGJtJ4nKaaWk5hE1RKRRLG0z09d7G6nSR
      yauoK4sMDfUhe1rJxaYZvD+G1REi2OyjpSVANp0pKWd85gGPYypyMYtieaoP1En09o1gcThZ
      XZrE7j+M+anVA/fOECi7yuzCMjoKgXCITGwJ1ezCX+dgeWkebF4a3DYiC3Moznp8bvvGe/Op
      BHOROJJsItgcJL44j9Xjp85hYmFuDru3EbOaZjG6ArKFlkMhXvS0WddUFudnyRY03L5G7FKO
      WEolGPCTWVlmJSfR5HcxPzVHEfA1NeOxv3holUosE4mvophtBAP1LM4tUOcPYDfpzM8v4m0K
      omdWWE6s4vMHcTtKWyIwEZknnsphtrtp8tqZX4zRGAwiqxkWlhIEmkOYZYliIUtRN2OzvPh5
      u5ZLMTUfAWSampvJxBbRrR4aPHaWF+eR7F68ThMLcwuYXT4avC5KeYYTmZ8mlVOxu314bRKL
      sRSh5iDFdIJIIkcg2IiWW2VhOUlTMIi1hHu2XCrB/EYfCBBfXNjoA0tLUXx+P2o2jWJ3Ynqq
      yD0jAIGgGuyZIZBAUA2EAAQ1jRCAoKYRAhDUNEIAggOBmlvlvfc+Ip9Pc/2jW5T4RLa6fgCB
      oFIoFgdqdJxr7y+Tc58kPj3C7dEIn/3sS9zv+Yi6jrPY0xGixTztbcdwP3lkLa4AgoOBJPPq
      F17hFx+O8/lLfr7/3/4X4/0f8f7tYaYfDvN//vYn3Hr3baKSB6f1k//7QgCCA4PJ46etJYBV
      NuP3N9B19jIn6gssxYs4LAqK2cvx463P7CMnvggTHCA0UqksTqeDXDpJYjWL2+sln0oimW2Y
      JR2L0/nMLAAhAEFNI4ZAgprm/wORvzspIVOb3wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Types Of Power Plants' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
