<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.20.0125.0835                               -->
<workbook original-version='18.1' source-build='2019.4.3 (20194.20.0125.0835)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='annual-change-fossil-fuels (annual-change-fossil-fuels)' inline='true' name='federated.0bsie6912m5rxo1c7ylww1jn03at' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='annual-change-fossil-fuels' name='excel-direct.0nrrigp1h4m6eo18zfd2r03kmn4n'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Senior Done/annual-change-fossil-fuels.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0nrrigp1h4m6eo18zfd2r03kmn4n' name='annual-change-fossil-fuels' table='[&apos;annual-change-fossil-fuels$&apos;]' type='table'>
          <columns gridOrigin='A1:C4202:no:A1:C4202:0' header='yes' outcome='6'>
            <column datatype='string' name='Entity' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Fossil fuels (TWh growth â€“ sub method)' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Entity]</local-name>
            <parent-name>[annual-change-fossil-fuels]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[annual-change-fossil-fuels]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fossil fuels (TWh growth â€“ sub method)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fossil fuels (TWh growth â€“ sub method)]</local-name>
            <parent-name>[annual-change-fossil-fuels]</parent-name>
            <remote-alias>Fossil fuels (TWh growth â€“ sub method)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[annual-change-fossil-fuels]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C4202:no:A1:C4202:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.5' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='methane-emissions+ (Multiple Connections)' inline='true' name='federated.1pkulbz17ch3r811ctj0w0jrznmb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='methane-emissions' name='excel-direct.0ttx1fv19s3z2h1gnh9qi148z5ox'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Senior Done/methane-emissions.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='nitrous-oxide-emissions' name='excel-direct.0kx1k040k72x4p1bekkgx0hxgbmt'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Senior Done/nitrous-oxide-emissions.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[methane-emissions].[Year]' />
              <expression op='[nitrous-oxide-emissions].[Year]' />
            </expression>
          </clause>
          <relation connection='excel-direct.0ttx1fv19s3z2h1gnh9qi148z5ox' name='methane-emissions' table='[&apos;methane-emissions$&apos;]' type='table'>
            <columns gridOrigin='A1:C5212:no:A1:C5212:0' header='yes' outcome='6'>
              <column datatype='string' name='country' ordinal='0' />
              <column datatype='integer' name='Year' ordinal='1' />
              <column datatype='real' name='Total including LUCF (CH4 emissions, CAIT)' ordinal='2' />
            </columns>
          </relation>
          <relation connection='excel-direct.0kx1k040k72x4p1bekkgx0hxgbmt' name='nitrous-oxide-emissions' table='[&apos;nitrous-oxide-emissions$&apos;]' type='table'>
            <columns gridOrigin='A1:C5212:no:A1:C5212:0' header='yes' outcome='6'>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='integer' name='Year' ordinal='1' />
              <column datatype='real' name='Total including LUCF (N2O emissions, CAIT)' ordinal='2' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Country]' value='[nitrous-oxide-emissions].[Country]' />
          <map key='[Total including LUCF (CH4 emissions, CAIT)]' value='[methane-emissions].[Total including LUCF (CH4 emissions, CAIT)]' />
          <map key='[Total including LUCF (N2O emissions, CAIT)]' value='[nitrous-oxide-emissions].[Total including LUCF (N2O emissions, CAIT)]' />
          <map key='[Year (nitrous-oxide-emissions)]' value='[nitrous-oxide-emissions].[Year]' />
          <map key='[Year]' value='[methane-emissions].[Year]' />
          <map key='[country]' value='[methane-emissions].[country]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[methane-emissions]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[methane-emissions]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total including LUCF (CH4 emissions, CAIT)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total including LUCF (CH4 emissions, CAIT)]</local-name>
            <parent-name>[methane-emissions]</parent-name>
            <remote-alias>Total including LUCF (CH4 emissions, CAIT)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[methane-emissions]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C5212:no:A1:C5212:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[nitrous-oxide-emissions]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (nitrous-oxide-emissions)]</local-name>
            <parent-name>[nitrous-oxide-emissions]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total including LUCF (N2O emissions, CAIT)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total including LUCF (N2O emissions, CAIT)]</local-name>
            <parent-name>[nitrous-oxide-emissions]</parent-name>
            <remote-alias>Total including LUCF (N2O emissions, CAIT)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[nitrous-oxide-emissions]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C5212:no:A1:C5212:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Total including LUCF (CH4 emissions, CAIT)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Total including LUCF (N2O emissions, CAIT)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year (nitrous-oxide-emissions)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column aggregation='None' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column-instance column='[Total including LUCF (CH4 emissions, CAIT)]' derivation='Sum' name='[sum:Total including LUCF (CH4 emissions, CAIT):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total including LUCF (N2O emissions, CAIT)]' derivation='Sum' name='[sum:Total including LUCF (N2O emissions, CAIT):qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.539326' measure-ordering='alphabetic' measure-percentage='0.460674' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;[federated.1pkulbz17ch3r811ctj0w0jrznmb].[sum:Total including LUCF (N2O emissions, CAIT):qk]&quot;</bucket>
            </map>
            <map to='#f9d23c'>
              <bucket>&quot;[federated.1pkulbz17ch3r811ctj0w0jrznmb].[sum:Total including LUCF (CH4 emissions, CAIT):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='emissions-of-air-pollutants (emissions-of-air-pollutants)' inline='true' name='federated.0knmmcm1r0b4oy1g1ezen16lw9ik' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='emissions-of-air-pollutants' name='excel-direct.0085mhc1esot7p15jdn550hrx708'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Senior Done/emissions-of-air-pollutants.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0085mhc1esot7p15jdn550hrx708' name='emissions-of-air-pollutants' table='[&apos;emissions-of-air-pollutants$&apos;]' type='table'>
          <columns gridOrigin='A1:I79:no:A1:I79:0' header='yes' outcome='6'>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='string' name='Code' ordinal='1' />
            <column datatype='integer' name='Year' ordinal='2' />
            <column datatype='real' name='PM10' ordinal='3' />
            <column datatype='real' name='PM2.5' ordinal='4' />
            <column datatype='real' name='Non-methane volatile organic compounds (Index)' ordinal='5' />
            <column datatype='real' name='Nitrogen oxides (Index)' ordinal='6' />
            <column datatype='real' name='Ammonia (Index)' ordinal='7' />
            <column datatype='real' name='Sulphur dioxide (Index)' ordinal='8' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PM10</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PM10]</local-name>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias>PM10</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PM2.5</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PM2.5]</local-name>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias>PM2.5</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Non-methane volatile organic compounds (Index)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Non-methane volatile organic compounds (Index)]</local-name>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias>Non-methane volatile organic compounds (Index)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nitrogen oxides (Index)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Nitrogen oxides (Index)]</local-name>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias>Nitrogen oxides (Index)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ammonia (Index)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Ammonia (Index)]</local-name>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias>Ammonia (Index)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sulphur dioxide (Index)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sulphur dioxide (Index)]</local-name>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias>Sulphur dioxide (Index)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I79:no:A1:I79:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column aggregation='None' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.401914' measure-ordering='alphabetic' measure-percentage='0.598086' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='wind-electricity-per-capita+ (Multiple Connections)' inline='true' name='federated.1g8fant0p8wll511t7tvy0qferey' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='wind-electricity-per-capita' name='excel-direct.1dtqp3q019s13b1ezff1l1bmi0a2'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Senior Done/wind-electricity-per-capita.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='hydro-electricity-per-capita' name='excel-direct.1lj5r980iivj321ena2ur0fmbrbl'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Senior Done/hydro-electricity-per-capita.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='solar-electricity-per-capita' name='excel-direct.1qlcdgy01jht3417wxban1o4nwfu'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Senior Done/solar-electricity-per-capita.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='full' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[wind-electricity-per-capita].[Year]' />
              <expression op='[solar-electricity-per-capita].[Year]' />
            </expression>
          </clause>
          <relation join='full' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[wind-electricity-per-capita].[Year]' />
                <expression op='[hydro-electricity-per-capita].[Year]' />
              </expression>
            </clause>
            <relation connection='excel-direct.1dtqp3q019s13b1ezff1l1bmi0a2' name='wind-electricity-per-capita' table='[&apos;wind-electricity-per-capita$&apos;]' type='table'>
              <columns gridOrigin='A1:C5520:no:A1:C5520:0' header='yes' outcome='6'>
                <column datatype='string' name='country' ordinal='0' />
                <column datatype='integer' name='Year' ordinal='1' />
                <column datatype='real' name='Wind electricity per capita (kWh)' ordinal='2' />
              </columns>
            </relation>
            <relation connection='excel-direct.1lj5r980iivj321ena2ur0fmbrbl' name='hydro-electricity-per-capita' table='[&apos;hydro-electricity-per-capita$&apos;]' type='table'>
              <columns gridOrigin='A1:C5520:no:A1:C5520:0' header='yes' outcome='6'>
                <column datatype='string' name='country' ordinal='0' />
                <column datatype='integer' name='Year' ordinal='1' />
                <column datatype='real' name='Hydro electricity per capita (kWh)' ordinal='2' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.1qlcdgy01jht3417wxban1o4nwfu' name='solar-electricity-per-capita' table='[&apos;solar-electricity-per-capita$&apos;]' type='table'>
            <columns gridOrigin='A1:C5520:no:A1:C5520:0' header='yes' outcome='6'>
              <column datatype='string' name='country' ordinal='0' />
              <column datatype='integer' name='Year' ordinal='1' />
              <column datatype='real' name='Solar electricity per capita (kWh)' ordinal='2' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Hydro electricity per capita (kWh)]' value='[hydro-electricity-per-capita].[Hydro electricity per capita (kWh)]' />
          <map key='[Solar electricity per capita (kWh)]' value='[solar-electricity-per-capita].[Solar electricity per capita (kWh)]' />
          <map key='[Wind electricity per capita (kWh)]' value='[wind-electricity-per-capita].[Wind electricity per capita (kWh)]' />
          <map key='[Year (hydro-electricity-per-capita)]' value='[hydro-electricity-per-capita].[Year]' />
          <map key='[Year (solar-electricity-per-capita)]' value='[solar-electricity-per-capita].[Year]' />
          <map key='[Year]' value='[wind-electricity-per-capita].[Year]' />
          <map key='[country (hydro-electricity-per-capita)]' value='[hydro-electricity-per-capita].[country]' />
          <map key='[country (solar-electricity-per-capita)]' value='[solar-electricity-per-capita].[country]' />
          <map key='[country]' value='[wind-electricity-per-capita].[country]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[wind-electricity-per-capita]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[wind-electricity-per-capita]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wind electricity per capita (kWh)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Wind electricity per capita (kWh)]</local-name>
            <parent-name>[wind-electricity-per-capita]</parent-name>
            <remote-alias>Wind electricity per capita (kWh)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[wind-electricity-per-capita]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C5520:no:A1:C5520:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country (hydro-electricity-per-capita)]</local-name>
            <parent-name>[hydro-electricity-per-capita]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (hydro-electricity-per-capita)]</local-name>
            <parent-name>[hydro-electricity-per-capita]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hydro electricity per capita (kWh)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Hydro electricity per capita (kWh)]</local-name>
            <parent-name>[hydro-electricity-per-capita]</parent-name>
            <remote-alias>Hydro electricity per capita (kWh)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[hydro-electricity-per-capita]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C5520:no:A1:C5520:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country (solar-electricity-per-capita)]</local-name>
            <parent-name>[solar-electricity-per-capita]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (solar-electricity-per-capita)]</local-name>
            <parent-name>[solar-electricity-per-capita]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Solar electricity per capita (kWh)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Solar electricity per capita (kWh)]</local-name>
            <parent-name>[solar-electricity-per-capita]</parent-name>
            <remote-alias>Solar electricity per capita (kWh)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[solar-electricity-per-capita]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C5520:no:A1:C5520:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column aggregation='None' datatype='integer' name='[Hydro electricity per capita (kWh) (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='2' formula='[Hydro electricity per capita (kWh)]' peg='0' size='893' />
      </column>
      <column datatype='real' name='[Hydro electricity per capita (kWh)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Solar electricity per capita (kWh)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Wind electricity per capita (kWh)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year (hydro-electricity-per-capita)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year (solar-electricity-per-capita)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column aggregation='None' datatype='string' name='[country (hydro-electricity-per-capita)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='None' datatype='string' name='[country (solar-electricity-per-capita)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='None' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column-instance column='[Hydro electricity per capita (kWh)]' derivation='Sum' name='[sum:Hydro electricity per capita (kWh):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Solar electricity per capita (kWh)]' derivation='Sum' name='[sum:Solar electricity per capita (kWh):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Wind electricity per capita (kWh)]' derivation='Sum' name='[sum:Wind electricity per capita (kWh):qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.493464' measure-ordering='alphabetic' measure-percentage='0.506536' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1g8fant0p8wll511t7tvy0qferey].[sum:Solar electricity per capita (kWh):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1g8fant0p8wll511t7tvy0qferey].[sum:Hydro electricity per capita (kWh):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1g8fant0p8wll511t7tvy0qferey].[sum:Wind electricity per capita (kWh):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='global_power_plant_database (global_power_plant_database)' inline='true' name='federated.16rnq7y079v2cy13achj50ego07y' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='global_power_plant_database' name='excel-direct.1u121nx1t1qqrj19sg27j12x4kr7'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Data Analytics/Senior Project/Data/global_power_plant_database.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1u121nx1t1qqrj19sg27j12x4kr7' name='global_power_plant_database' table='[global_power_plant_database$]' type='table'>
          <columns gridOrigin='A1:R10001:no:A1:R10001:0' header='yes' outcome='6'>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='string' name='name' ordinal='1' />
            <column datatype='real' name='capacity_mw' ordinal='2' />
            <column datatype='real' name='latitude' ordinal='3' />
            <column datatype='real' name='longitude' ordinal='4' />
            <column datatype='string' name='primary_fuel' ordinal='5' />
            <column datatype='string' name='other_fuel1' ordinal='6' />
            <column datatype='string' name='other_fuel2' ordinal='7' />
            <column datatype='string' name='other_fuel3' ordinal='8' />
            <column datatype='real' name='commissioning_year' ordinal='9' />
            <column datatype='string' name='source' ordinal='10' />
            <column datatype='integer' name='year_of_capacity_data' ordinal='11' />
            <column datatype='real' name='generation_gwh_2013' ordinal='12' />
            <column datatype='real' name='generation_gwh_2014' ordinal='13' />
            <column datatype='real' name='generation_gwh_2015' ordinal='14' />
            <column datatype='real' name='generation_gwh_2016' ordinal='15' />
            <column datatype='real' name='generation_gwh_2017' ordinal='16' />
            <column datatype='real' name='estimated_generation_gwh' ordinal='17' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[global_power_plant_database]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[global_power_plant_database]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>capacity_mw</remote-name>
            <remote-type>5</remote-type>
            <local-name>[capacity_mw]</local-name>
            <parent-name>[global_power_plant_database]</parent-name>
            <remote-alias>capacity_mw</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[global_power_plant_database]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[global_power_plant_database]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>primary_fuel</remote-name>
            <remote-type>130</remote-type>
            <local-name>[primary_fuel]</local-name>
            <parent-name>[global_power_plant_database]</parent-name>
            <remote-alias>primary_fuel</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_fuel1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[other_fuel1]</local-name>
            <parent-name>[global_power_plant_database]</parent-name>
            <remote-alias>other_fuel1</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_fuel2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[other_fuel2]</local-name>
            <parent-name>[global_power_plant_database]</parent-name>
            <remote-alias>other_fuel2</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_fuel3</remote-name>
            <remote-type>130</remote-type>
            <local-name>[other_fuel3]</local-name>
            <parent-name>[global_power_plant_database]</parent-name>
            <remote-alias>other_fuel3</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>commissioning_year</remote-name>
            <remote-type>5</remote-type>
            <local-name>[commissioning_year]</local-name>
            <parent-name>[global_power_plant_database]</parent-name>
            <remote-alias>commissioning_year</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source</remote-name>
            <remote-type>130</remote-type>
            <local-name>[source]</local-name>
            <parent-name>[global_power_plant_database]</parent-name>
            <remote-alias>source</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year_of_capacity_data</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year_of_capacity_data]</local-name>
            <parent-name>[global_power_plant_database]</parent-name>
            <remote-alias>year_of_capacity_data</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>generation_gwh_2013</remote-name>
            <remote-type>5</remote-type>
            <local-name>[generation_gwh_2013]</local-name>
            <parent-name>[global_power_plant_database]</parent-name>
            <remote-alias>generation_gwh_2013</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>generation_gwh_2014</remote-name>
            <remote-type>5</remote-type>
            <local-name>[generation_gwh_2014]</local-name>
            <parent-name>[global_power_plant_database]</parent-name>
            <remote-alias>generation_gwh_2014</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>generation_gwh_2015</remote-name>
            <remote-type>5</remote-type>
            <local-name>[generation_gwh_2015]</local-name>
            <parent-name>[global_power_plant_database]</parent-name>
            <remote-alias>generation_gwh_2015</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>generation_gwh_2016</remote-name>
            <remote-type>5</remote-type>
            <local-name>[generation_gwh_2016]</local-name>
            <parent-name>[global_power_plant_database]</parent-name>
            <remote-alias>generation_gwh_2016</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>generation_gwh_2017</remote-name>
            <remote-type>5</remote-type>
            <local-name>[generation_gwh_2017]</local-name>
            <parent-name>[global_power_plant_database]</parent-name>
            <remote-alias>generation_gwh_2017</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>estimated_generation_gwh</remote-name>
            <remote-type>5</remote-type>
            <local-name>[estimated_generation_gwh]</local-name>
            <parent-name>[global_power_plant_database]</parent-name>
            <remote-alias>estimated_generation_gwh</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[global_power_plant_database]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:R10001:no:A1:R10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[commissioning_year]' role='dimension' type='quantitative' />
      <column aggregation='None' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='CountD' datatype='string' name='[primary_fuel]' role='dimension' type='nominal' />
      <column datatype='integer' name='[year_of_capacity_data]' role='dimension' type='quantitative' />
      <column-instance column='[primary_fuel]' derivation='Attribute' name='[attr:primary_fuel:nk]' pivot='key' type='nominal' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[primary_fuel]' derivation='None' name='[none:primary_fuel:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.409938' measure-ordering='alphabetic' measure-percentage='0.590062' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' palette='tableau-10' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Antarctica&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Cote DIvoire&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:primary_fuel:nk]' palette='cyclic_10_0' type='palette'>
            <map to='#1ba3c6'>
              <bucket>&quot;Coal&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Biomass&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Geothermal&quot;</bucket>
            </map>
            <map to='#2ea865'>
              <bucket>&quot;Gas&quot;</bucket>
            </map>
            <map to='#4f7cba'>
              <bucket>&quot;Petcoke&quot;</bucket>
            </map>
            <map to='#4f7cba'>
              <bucket>&quot;Wind&quot;</bucket>
            </map>
            <map to='#57a337'>
              <bucket>&quot;Cogeneration&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Solar&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Hydro&quot;</bucket>
            </map>
            <map to='#b36cc1'>
              <bucket>&quot;Wave and Tidal&quot;</bucket>
            </map>
            <map to='#e33233'>
              <bucket>&quot;Oil&quot;</bucket>
            </map>
            <map to='#e670b6'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#e93645'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#ecb921'>
              <bucket>&quot;Nuclear&quot;</bucket>
            </map>
            <map to='#fe7caa'>
              <bucket>&quot;Waste&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:primary_fuel:nk]' palette='cyclic_10_0' type='palette'>
            <map to='#1ba3c6'>
              <bucket>&quot;Coal&quot;</bucket>
            </map>
            <map to='#25b392'>
              <bucket>&quot;Cogeneration&quot;</bucket>
            </map>
            <map to='#2ea865'>
              <bucket>&quot;Gas&quot;</bucket>
            </map>
            <map to='#3ca8bc'>
              <bucket>&quot;Wind&quot;</bucket>
            </map>
            <map to='#4f7cba'>
              <bucket>&quot;Petcoke&quot;</bucket>
            </map>
            <map to='#78ab30'>
              <bucket>&quot;Geothermal&quot;</bucket>
            </map>
            <map to='#8670c2'>
              <bucket>&quot;Wave and Tidal&quot;</bucket>
            </map>
            <map to='#c26abf'>
              <bucket>&quot;Waste&quot;</bucket>
            </map>
            <map to='#e23b25'>
              <bucket>&quot;Solar&quot;</bucket>
            </map>
            <map to='#e33233'>
              <bucket>&quot;Oil&quot;</bucket>
            </map>
            <map to='#e670b6'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#eb364a'>
              <bucket>&quot;Biomass&quot;</bucket>
            </map>
            <map to='#ecb921'>
              <bucket>&quot;Nuclear&quot;</bucket>
            </map>
            <map to='#f9608b'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;Hydro&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='global-electric-car-sales-by-ke (global-electric-car-sales-by-key-markets-2010-2020)' inline='true' name='federated.0wsc9uc02jgx4d13u6t3e0ts0yt8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='global-electric-car-sales-by-key-markets-2010-2020' name='excel-direct.0z9qvk60f4jwai14s0qvf0d0x6wi'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Data Analytics/Senior Project/Data/global-electric-car-sales-by-key-markets-2010-2020.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0z9qvk60f4jwai14s0qvf0d0x6wi' name='global-electric-car-sales-by-ke' table='[&apos;global-electric-car-sales-by-ke$&apos;]' type='table'>
          <columns gridOrigin='A1:H12:no:A1:H12:0' header='yes' outcome='6'>
            <column datatype='integer' name='Years' ordinal='0' />
            <column datatype='real' name='China' ordinal='1' />
            <column datatype='real' name='USA' ordinal='2' />
            <column datatype='real' name='Europe' ordinal='3' />
            <column datatype='real' name='Japan' ordinal='4' />
            <column datatype='real' name='Rest of the Earth' ordinal='5' />
            <column datatype='real' name='World' ordinal='6' />
            <column datatype='real' name='Market Share' ordinal='7' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Years</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Years]</local-name>
            <parent-name>[global-electric-car-sales-by-ke]</parent-name>
            <remote-alias>Years</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>China</remote-name>
            <remote-type>5</remote-type>
            <local-name>[China]</local-name>
            <parent-name>[global-electric-car-sales-by-ke]</parent-name>
            <remote-alias>China</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>USA</remote-name>
            <remote-type>5</remote-type>
            <local-name>[USA]</local-name>
            <parent-name>[global-electric-car-sales-by-ke]</parent-name>
            <remote-alias>USA</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Europe</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Europe]</local-name>
            <parent-name>[global-electric-car-sales-by-ke]</parent-name>
            <remote-alias>Europe</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Japan</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Japan]</local-name>
            <parent-name>[global-electric-car-sales-by-ke]</parent-name>
            <remote-alias>Japan</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rest of the Earth</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Rest of the Earth]</local-name>
            <parent-name>[global-electric-car-sales-by-ke]</parent-name>
            <remote-alias>Rest of the Earth</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>World</remote-name>
            <remote-type>5</remote-type>
            <local-name>[World]</local-name>
            <parent-name>[global-electric-car-sales-by-ke]</parent-name>
            <remote-alias>World</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market Share</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Market Share]</local-name>
            <parent-name>[global-electric-car-sales-by-ke]</parent-name>
            <remote-alias>Market Share</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[global-electric-car-sales-by-ke]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H12:no:A1:H12:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[China]' role='measure' type='quantitative' />
      <column datatype='real' name='[Europe]' role='measure' type='quantitative' />
      <column datatype='real' name='[Japan]' role='measure' type='quantitative' />
      <column caption='Market Share' datatype='real' name='[Market Share (copy)_686798982843633664]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Market Share]' />
      </column>
      <column aggregation='Sum' caption='Market Share1' datatype='real' name='[Market Share]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Rest of the Earth]' role='measure' type='quantitative' />
      <column datatype='real' name='[USA]' role='measure' type='quantitative' />
      <column datatype='real' name='[World]' role='measure' type='quantitative' />
      <column-instance column='[China]' derivation='Attribute' name='[attr:China:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Europe]' derivation='Attribute' name='[attr:Europe:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Japan]' derivation='Attribute' name='[attr:Japan:qk]' pivot='key' type='quantitative' />
      <column-instance column='[USA]' derivation='Attribute' name='[attr:USA:qk]' pivot='key' type='quantitative' />
      <column-instance column='[World]' derivation='Attribute' name='[attr:World:qk]' pivot='key' type='quantitative' />
      <column-instance column='[World]' derivation='CountD' name='[ctd:World:qk]' pivot='key' type='quantitative' />
      <column-instance column='[China]' derivation='Sum' name='[sum:China:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Europe]' derivation='Sum' name='[sum:Europe:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Japan]' derivation='Sum' name='[sum:Japan:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Market Share (copy)_686798982843633664]' derivation='Sum' name='[sum:Market Share (copy)_686798982843633664:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Rest of the Earth]' derivation='Sum' name='[sum:Rest of the Earth:qk]' pivot='key' type='quantitative' />
      <column-instance column='[USA]' derivation='Sum' name='[sum:USA:qk]' pivot='key' type='quantitative' />
      <column-instance column='[World]' derivation='Sum' name='[sum:World:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.223404' measure-ordering='alphabetic' measure-percentage='0.776596' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='red_10_0' type='palette'>
            <map to='#2cb5c0'>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[attr:China:qk]&quot;</bucket>
            </map>
            <map to='#2cb5c0'>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:China:qk]&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[attr:Rest of the world:qk]&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Rest of the Earth:qk]&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Rest of the world:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[attr:Japan:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Japan:qk]&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[attr:Europe:qk]&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Europe:qk]&quot;</bucket>
            </map>
            <map to='#f64971'>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[attr:World:qk]&quot;</bucket>
            </map>
            <map to='#f77b66'>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[ctd:World:qk]&quot;</bucket>
            </map>
            <map to='#f77b66'>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:World:qk]&quot;</bucket>
            </map>
            <map to='#f8b620'>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[attr:USA:qk]&quot;</bucket>
            </map>
            <map to='#f8b620'>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:USA:qk]&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Market Share (copy)_686798982843633664:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='global-energy-use-and-energy-re (global-energy-use-and-energy-related-co2-emissions-by-sector-2020)' inline='true' name='federated.0b3hmbr0eai96h15v83u00vr57p1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='global-energy-use-and-energy-related-co2-emissions-by-sector-2020' name='excel-direct.0qqqwnn0d5umwo1e21agd0f6raxn'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Data Analytics/Senior Project/Data/global-energy-use-and-energy-related-co2-emissions-by-sector-2020.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0qqqwnn0d5umwo1e21agd0f6raxn' name='global-energy-use-and-energy-re' table='[&apos;global-energy-use-and-energy-re$&apos;]' type='table'>
          <columns gridOrigin='A1:C12:no:A1:C12:0' header='yes' outcome='6'>
            <column datatype='string' name='Types' ordinal='0' />
            <column datatype='integer' name='Energy use' ordinal='1' />
            <column datatype='integer' name='Emissions' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Types</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Types]</local-name>
            <parent-name>[global-energy-use-and-energy-re]</parent-name>
            <remote-alias>Types</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy use</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Energy use]</local-name>
            <parent-name>[global-energy-use-and-energy-re]</parent-name>
            <remote-alias>Energy use</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Emissions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Emissions]</local-name>
            <parent-name>[global-energy-use-and-energy-re]</parent-name>
            <remote-alias>Emissions</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[global-energy-use-and-energy-re]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C12:no:A1:C12:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Emissions]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Energy use]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Types]' role='dimension' type='nominal' />
      <column-instance column='[Types]' derivation='None' name='[none:Types:nk]' pivot='key' type='nominal' />
      <column-instance column='[Emissions]' derivation='Sum' name='[sum:Emissions:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Energy use]' derivation='Sum' name='[sum:Energy use:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.236025' measure-ordering='alphabetic' measure-percentage='0.763975' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0b3hmbr0eai96h15v83u00vr57p1].[sum:Emissions:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0b3hmbr0eai96h15v83u00vr57p1].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0b3hmbr0eai96h15v83u00vr57p1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0b3hmbr0eai96h15v83u00vr57p1].[sum:Energy use:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Types:nk]' palette='cyclic_10_0' type='palette'>
            <map to='#1ba3c6'>
              <bucket>&quot;Building construction industry&quot;</bucket>
            </map>
            <map to='#2ea865'>
              <bucket>&quot;Non-residential (direct)&quot;</bucket>
            </map>
            <map to='#32bdb1'>
              <bucket>&quot;Non-residential&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Emissions&quot;</bucket>
            </map>
            <map to='#4f7cba'>
              <bucket>&quot;Transport&quot;</bucket>
            </map>
            <map to='#8cb12c'>
              <bucket>&quot;Non-residential (indirect)&quot;</bucket>
            </map>
            <map to='#9e6dc2'>
              <bucket>&quot;Residential (indirect)&quot;</bucket>
            </map>
            <map to='#e33233'>
              <bucket>&quot;Other industry&quot;</bucket>
            </map>
            <map to='#e670b6'>
              <bucket>&quot;Residential (direct)&quot;</bucket>
            </map>
            <map to='#ecb921'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Energy use&quot;</bucket>
            </map>
            <map to='#f8557f'>
              <bucket>&quot;Residential&quot;</bucket>
            </map>
            <map to='#f88113'>
              <bucket>&quot;Other construction industry&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='fossil-electricity-per-capita (fossil-electricity-per-capita)' inline='true' name='federated.1gk4jrf1xn51cn1acxvni1y0y642' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='fossil-electricity-per-capita' name='excel-direct.1p2g7wg0fo3lid12cnbma13kf5o4'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Data Analytics/Senior Project/Data/fossil-electricity-per-capita.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1p2g7wg0fo3lid12cnbma13kf5o4' name='fossil-electricity-per-capita' table='[&apos;fossil-electricity-per-capita$&apos;]' type='table'>
          <columns gridOrigin='A1:C4780:no:A1:C4780:0' header='yes' outcome='6'>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='real' name='Fossil fuel electricity per capita (kWh)' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[fossil-electricity-per-capita]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[fossil-electricity-per-capita]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fossil fuel electricity per capita (kWh)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fossil fuel electricity per capita (kWh)]</local-name>
            <parent-name>[fossil-electricity-per-capita]</parent-name>
            <remote-alias>Fossil fuel electricity per capita (kWh)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[fossil-electricity-per-capita]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C4780:no:A1:C4780:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.391304' measure-ordering='alphabetic' measure-percentage='0.608696' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='%null%' />
        <semantic-value key='[County].[Name]' value='%null%' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='primary-energy-consumption-by-s (primary-energy-consumption-by-source)' inline='true' name='federated.01aa8lq04kpily16skfsu0yx1tje' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='primary-energy-consumption-by-source' name='excel-direct.10z69yj0ptiae012toyyl0sfhcow'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Data Analytics/Senior Project/Data/primary-energy-consumption-by-source.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.10z69yj0ptiae012toyyl0sfhcow' name='primary-energy-consumption-by-s' table='[&apos;primary-energy-consumption-by-s$&apos;]' type='table'>
          <columns gridOrigin='A1:J5004:no:A1:J5004:0' header='yes' outcome='6'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Oil Consumption - TWh' ordinal='2' />
            <column datatype='real' name='Gas Consumption - TWh' ordinal='3' />
            <column datatype='real' name='Coal Consumption - TWh' ordinal='4' />
            <column datatype='real' name='Hydro Generation - TWh' ordinal='5' />
            <column datatype='real' name='Solar Generation - TWh' ordinal='6' />
            <column datatype='real' name='Wind Generation - TWh' ordinal='7' />
            <column datatype='real' name='Nuclear Generation - TWh' ordinal='8' />
            <column datatype='real' name='Geo Biomass Other - TWh' ordinal='9' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[primary-energy-consumption-by-s]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[primary-energy-consumption-by-s]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Oil Consumption - TWh</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Oil Consumption - TWh]</local-name>
            <parent-name>[primary-energy-consumption-by-s]</parent-name>
            <remote-alias>Oil Consumption - TWh</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gas Consumption - TWh</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Gas Consumption - TWh]</local-name>
            <parent-name>[primary-energy-consumption-by-s]</parent-name>
            <remote-alias>Gas Consumption - TWh</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Coal Consumption - TWh</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Coal Consumption - TWh]</local-name>
            <parent-name>[primary-energy-consumption-by-s]</parent-name>
            <remote-alias>Coal Consumption - TWh</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hydro Generation - TWh</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Hydro Generation - TWh]</local-name>
            <parent-name>[primary-energy-consumption-by-s]</parent-name>
            <remote-alias>Hydro Generation - TWh</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Solar Generation - TWh</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Solar Generation - TWh]</local-name>
            <parent-name>[primary-energy-consumption-by-s]</parent-name>
            <remote-alias>Solar Generation - TWh</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wind Generation - TWh</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Wind Generation - TWh]</local-name>
            <parent-name>[primary-energy-consumption-by-s]</parent-name>
            <remote-alias>Wind Generation - TWh</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nuclear Generation - TWh</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Nuclear Generation - TWh]</local-name>
            <parent-name>[primary-energy-consumption-by-s]</parent-name>
            <remote-alias>Nuclear Generation - TWh</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Geo Biomass Other - TWh</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Geo Biomass Other - TWh]</local-name>
            <parent-name>[primary-energy-consumption-by-s]</parent-name>
            <remote-alias>Geo Biomass Other - TWh</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[primary-energy-consumption-by-s]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:J5004:no:A1:J5004:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='real' name='[Coal Consumption - TWh]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Gas Consumption - TWh]' role='measure' type='quantitative' />
      <column datatype='real' name='[Geo Biomass Other - TWh]' role='measure' type='quantitative' />
      <column datatype='real' name='[Hydro Generation - TWh]' role='measure' type='quantitative' />
      <column datatype='real' name='[Nuclear Generation - TWh]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Oil Consumption - TWh]' role='measure' type='quantitative' />
      <column datatype='real' name='[Solar Generation - TWh]' role='measure' type='quantitative' />
      <column datatype='real' name='[Wind Generation - TWh]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Coal Consumption - TWh]' derivation='Attribute' name='[attr:Coal Consumption - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Gas Consumption - TWh]' derivation='Attribute' name='[attr:Gas Consumption - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Geo Biomass Other - TWh]' derivation='Attribute' name='[attr:Geo Biomass Other - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Hydro Generation - TWh]' derivation='Attribute' name='[attr:Hydro Generation - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Nuclear Generation - TWh]' derivation='Attribute' name='[attr:Nuclear Generation - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Oil Consumption - TWh]' derivation='Attribute' name='[attr:Oil Consumption - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Solar Generation - TWh]' derivation='Attribute' name='[attr:Solar Generation - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Wind Generation - TWh]' derivation='Attribute' name='[attr:Wind Generation - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Coal Consumption - TWh]' derivation='Count' name='[cnt:Coal Consumption - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Gas Consumption - TWh]' derivation='Count' name='[cnt:Gas Consumption - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Geo Biomass Other - TWh]' derivation='Count' name='[cnt:Geo Biomass Other - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Hydro Generation - TWh]' derivation='Count' name='[cnt:Hydro Generation - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Nuclear Generation - TWh]' derivation='Count' name='[cnt:Nuclear Generation - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Oil Consumption - TWh]' derivation='Count' name='[cnt:Oil Consumption - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Solar Generation - TWh]' derivation='Count' name='[cnt:Solar Generation - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Wind Generation - TWh]' derivation='Count' name='[cnt:Wind Generation - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Coal Consumption - TWh]' derivation='CountD' name='[ctd:Coal Consumption - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Gas Consumption - TWh]' derivation='CountD' name='[ctd:Gas Consumption - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Geo Biomass Other - TWh]' derivation='CountD' name='[ctd:Geo Biomass Other - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Hydro Generation - TWh]' derivation='CountD' name='[ctd:Hydro Generation - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Nuclear Generation - TWh]' derivation='CountD' name='[ctd:Nuclear Generation - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Oil Consumption - TWh]' derivation='CountD' name='[ctd:Oil Consumption - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Solar Generation - TWh]' derivation='CountD' name='[ctd:Solar Generation - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Wind Generation - TWh]' derivation='CountD' name='[ctd:Wind Generation - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Coal Consumption - TWh]' derivation='Sum' name='[sum:Coal Consumption - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Gas Consumption - TWh]' derivation='Sum' name='[sum:Gas Consumption - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Geo Biomass Other - TWh]' derivation='Sum' name='[sum:Geo Biomass Other - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Hydro Generation - TWh]' derivation='Sum' name='[sum:Hydro Generation - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Nuclear Generation - TWh]' derivation='Sum' name='[sum:Nuclear Generation - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Oil Consumption - TWh]' derivation='Sum' name='[sum:Oil Consumption - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Solar Generation - TWh]' derivation='Sum' name='[sum:Solar Generation - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Wind Generation - TWh]' derivation='Sum' name='[sum:Wind Generation - TWh:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.391304' measure-ordering='alphabetic' measure-percentage='0.608696' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[attr:Oil Consumption - TWh:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[cnt:Oil Consumption - TWh:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[ctd:Oil Consumption - TWh:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[sum:Oil Consumption - TWh:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[attr:Hydro Generation - TWh:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[cnt:Hydro Generation - TWh:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[ctd:Hydro Generation - TWh:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[sum:Hydro Generation - TWh:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[attr:Nuclear Generation - TWh:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[cnt:Nuclear Generation - TWh:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[ctd:Nuclear Generation - TWh:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[sum:Nuclear Generation - TWh:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[attr:Gas Consumption - TWh:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[cnt:Gas Consumption - TWh:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[ctd:Gas Consumption - TWh:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[sum:Gas Consumption - TWh:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[attr:Wind Generation - TWh:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[cnt:Wind Generation - TWh:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[ctd:Wind Generation - TWh:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[sum:Wind Generation - TWh:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[attr:Geo Biomass Other - TWh:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[cnt:Geo Biomass Other - TWh:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[ctd:Geo Biomass Other - TWh:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[sum:Geo Biomass Other - TWh:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[attr:Solar Generation - TWh:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[cnt:Solar Generation - TWh:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[ctd:Solar Generation - TWh:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[sum:Solar Generation - TWh:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[attr:Coal Consumption - TWh:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[cnt:Coal Consumption - TWh:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[ctd:Coal Consumption - TWh:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[sum:Coal Consumption - TWh:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='drivers-forest-loss-brazil-amaz (drivers-forest-loss-brazil-amazon)' inline='true' name='federated.0nwptkc1p8324u1eimeud1o88ar9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='drivers-forest-loss-brazil-amazon' name='excel-direct.0menrs114vjwz61ckja1f0mcgfx3'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Data Analytics/Senior Project/Data/drivers-forest-loss-brazil-amazon.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0menrs114vjwz61ckja1f0mcgfx3' name='drivers-forest-loss-brazil-amaz' table='[&apos;drivers-forest-loss-brazil-amaz$&apos;]' type='table'>
          <columns gridOrigin='A1:M14:no:A1:M14:0' header='yes' outcome='6'>
            <column datatype='string' name='Entity' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='integer' name='commercial_crops' ordinal='2' />
            <column datatype='integer' name='flooding_due_to_dams' ordinal='3' />
            <column datatype='integer' name='natural_disturbances' ordinal='4' />
            <column datatype='integer' name='pasture' ordinal='5' />
            <column datatype='integer' name='selective_logging' ordinal='6' />
            <column datatype='integer' name='fire' ordinal='7' />
            <column datatype='integer' name='mining' ordinal='8' />
            <column datatype='integer' name='other_infrastructure' ordinal='9' />
            <column datatype='integer' name='roads' ordinal='10' />
            <column datatype='integer' name='tree_plantations_including_palm' ordinal='11' />
            <column datatype='integer' name='small-scale_clearing' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Entity]</local-name>
            <parent-name>[drivers-forest-loss-brazil-amaz]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[drivers-forest-loss-brazil-amaz]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>commercial_crops</remote-name>
            <remote-type>20</remote-type>
            <local-name>[commercial_crops]</local-name>
            <parent-name>[drivers-forest-loss-brazil-amaz]</parent-name>
            <remote-alias>commercial_crops</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flooding_due_to_dams</remote-name>
            <remote-type>20</remote-type>
            <local-name>[flooding_due_to_dams]</local-name>
            <parent-name>[drivers-forest-loss-brazil-amaz]</parent-name>
            <remote-alias>flooding_due_to_dams</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>natural_disturbances</remote-name>
            <remote-type>20</remote-type>
            <local-name>[natural_disturbances]</local-name>
            <parent-name>[drivers-forest-loss-brazil-amaz]</parent-name>
            <remote-alias>natural_disturbances</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pasture</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pasture]</local-name>
            <parent-name>[drivers-forest-loss-brazil-amaz]</parent-name>
            <remote-alias>pasture</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>selective_logging</remote-name>
            <remote-type>20</remote-type>
            <local-name>[selective_logging]</local-name>
            <parent-name>[drivers-forest-loss-brazil-amaz]</parent-name>
            <remote-alias>selective_logging</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fire</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fire]</local-name>
            <parent-name>[drivers-forest-loss-brazil-amaz]</parent-name>
            <remote-alias>fire</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mining</remote-name>
            <remote-type>20</remote-type>
            <local-name>[mining]</local-name>
            <parent-name>[drivers-forest-loss-brazil-amaz]</parent-name>
            <remote-alias>mining</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_infrastructure</remote-name>
            <remote-type>20</remote-type>
            <local-name>[other_infrastructure]</local-name>
            <parent-name>[drivers-forest-loss-brazil-amaz]</parent-name>
            <remote-alias>other_infrastructure</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>roads</remote-name>
            <remote-type>20</remote-type>
            <local-name>[roads]</local-name>
            <parent-name>[drivers-forest-loss-brazil-amaz]</parent-name>
            <remote-alias>roads</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tree_plantations_including_palm</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tree_plantations_including_palm]</local-name>
            <parent-name>[drivers-forest-loss-brazil-amaz]</parent-name>
            <remote-alias>tree_plantations_including_palm</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>small-scale_clearing</remote-name>
            <remote-type>20</remote-type>
            <local-name>[small-scale_clearing]</local-name>
            <parent-name>[drivers-forest-loss-brazil-amaz]</parent-name>
            <remote-alias>small-scale_clearing</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[drivers-forest-loss-brazil-amaz]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:M14:no:A1:M14:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[commercial_crops]' role='measure' type='quantitative' />
      <column datatype='integer' name='[fire]' role='measure' type='quantitative' />
      <column datatype='integer' name='[flooding_due_to_dams]' role='measure' type='quantitative' />
      <column datatype='integer' name='[mining]' role='measure' type='quantitative' />
      <column datatype='integer' name='[natural_disturbances]' role='measure' type='quantitative' />
      <column datatype='integer' name='[other_infrastructure]' role='measure' type='quantitative' />
      <column datatype='integer' name='[pasture]' role='measure' type='quantitative' />
      <column datatype='integer' name='[roads]' role='measure' type='quantitative' />
      <column datatype='integer' name='[selective_logging]' role='measure' type='quantitative' />
      <column datatype='integer' name='[small-scale_clearing]' role='measure' type='quantitative' />
      <column datatype='integer' name='[tree_plantations_including_palm]' role='measure' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[commercial_crops]' derivation='Sum' name='[sum:commercial_crops:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fire]' derivation='Sum' name='[sum:fire:qk]' pivot='key' type='quantitative' />
      <column-instance column='[flooding_due_to_dams]' derivation='Sum' name='[sum:flooding_due_to_dams:qk]' pivot='key' type='quantitative' />
      <column-instance column='[mining]' derivation='Sum' name='[sum:mining:qk]' pivot='key' type='quantitative' />
      <column-instance column='[natural_disturbances]' derivation='Sum' name='[sum:natural_disturbances:qk]' pivot='key' type='quantitative' />
      <column-instance column='[other_infrastructure]' derivation='Sum' name='[sum:other_infrastructure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pasture]' derivation='Sum' name='[sum:pasture:qk]' pivot='key' type='quantitative' />
      <column-instance column='[roads]' derivation='Sum' name='[sum:roads:qk]' pivot='key' type='quantitative' />
      <column-instance column='[selective_logging]' derivation='Sum' name='[sum:selective_logging:qk]' pivot='key' type='quantitative' />
      <column-instance column='[small-scale_clearing]' derivation='Sum' name='[sum:small-scale_clearing:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tree_plantations_including_palm]' derivation='Sum' name='[sum:tree_plantations_including_palm:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.391304' measure-ordering='alphabetic' measure-percentage='0.608696' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='cyclic_10_0' type='palette'>
            <map to='#1170aa'>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:fire:qk]&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:small-scale_clearing:qk]&quot;</bucket>
            </map>
            <map to='#1ba3c6'>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:other_infrastructure:qk]&quot;</bucket>
            </map>
            <map to='#2ea865'>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:mining:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:natural_disturbances:qk]&quot;</bucket>
            </map>
            <map to='#e03426'>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:pasture:qk]&quot;</bucket>
            </map>
            <map to='#eb73b3'>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:selective_logging:qk]&quot;</bucket>
            </map>
            <map to='#f7d42a'>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:commercial_crops:qk]&quot;</bucket>
            </map>
            <map to='#f8557f'>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:roads:qk]&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:tree_plantations_including_palm:qk]&quot;</bucket>
            </map>
            <map to='#fd6f30'>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:flooding_due_to_dams:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='annual-deforestation (annual-deforestation)' inline='true' name='federated.08ko4rp1bkc3tn1ebdp4l1nhumnl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='annual-deforestation' name='excel-direct.1i6b4vc01b9gyn1byil0q1kwbm6k'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Data Analytics/Senior Project/Data/annual-deforestation.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1i6b4vc01b9gyn1byil0q1kwbm6k' name='annual-deforestation' table='[&apos;annual-deforestation$&apos;]' type='table'>
          <columns gridOrigin='A1:C400:no:A1:C400:0' header='yes' outcome='6'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Deforestation' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[annual-deforestation]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[annual-deforestation]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deforestation</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deforestation]</local-name>
            <parent-name>[annual-deforestation]</parent-name>
            <remote-alias>Deforestation</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[annual-deforestation]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C400:no:A1:C400:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Deforestation]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Deforestation]' derivation='Sum' name='[sum:Deforestation:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.391304' measure-ordering='alphabetic' measure-percentage='0.608696' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[none:Country:nk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[sum:Deforestation:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[sum:Number of Records:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Central African Republic&quot;' />
        <semantic-value key='[County].[Name]' value='%null%' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='Sheet1 (Earth&apos;s Temperature)' inline='true' name='federated.0r9d3c01gc3fvo19whl3r0pk963r' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Earth&apos;s Temperature' name='excel-direct.0k8g7jl0vfp9lw10e8wk50nhez3l'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Data Analytics/Senior Project/Data/Earth&apos;s Temperature.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0k8g7jl0vfp9lw10e8wk50nhez3l' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D142:no:A1:D142:0' header='yes' outcome='2'>
            <column datatype='string' name='Land-Ocean Temperature Index ©' ordinal='0' />
            <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='1' />
            <column datatype='real' name='No_Smooting' ordinal='2' />
            <column datatype='real' name='Lowess' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Land-Ocean Temperature Index ©</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Land-Ocean Temperature Index ©]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Land-Ocean Temperature Index ©</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>No_Smooting</remote-name>
            <remote-type>5</remote-type>
            <local-name>[No_Smooting]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>No_Smooting</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lowess</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lowess]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Lowess</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D142:no:A1:D142:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='CountD' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.434783' measure-ordering='alphabetic' measure-percentage='0.565217' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='global-monthly-temperature-anom (global-monthly-temperature-anomaly)' inline='true' name='federated.1juel6n1dq3l2b1c2oool1rpny2q' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='global-monthly-temperature-anomaly' name='excel-direct.1fgu13r07cv8u61esv8020h1liwp'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Data Analytics/Senior Project/Data/global-monthly-temperature-anomaly.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1fgu13r07cv8u61esv8020h1liwp' name='global-monthly-temperature-anom' table='[&apos;global-monthly-temperature-anom$&apos;]' type='table'>
          <columns gridOrigin='A1:C5107:no:A1:C5107:0' header='yes' outcome='2'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='date' date-parse-format='dd/MM/yyyy|#|#|yyyy-MM-dd' name='Day' ordinal='1' />
            <column datatype='real' name='temperature_anomaly' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[global-monthly-temperature-anom]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C5107:no:A1:C5107:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[global-monthly-temperature-anom]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Day</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Day]</local-name>
            <parent-name>[global-monthly-temperature-anom]</parent-name>
            <remote-alias>Day</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temperature_anomaly</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temperature_anomaly]</local-name>
            <parent-name>[global-monthly-temperature-anom]</parent-name>
            <remote-alias>temperature_anomaly</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.391304' measure-ordering='alphabetic' measure-percentage='0.608696' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='greenhouse_gas_inventory_data_d (greenhouse_gas_inventory_data_data)' inline='true' name='federated.0h8b2o61vxszg414kx4r40ud4c6i' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='greenhouse_gas_inventory_data_data' name='excel-direct.11glz9j04yr6161biqi9h0okclsp'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Data Analytics/Senior Project/Data/greenhouse_gas_inventory_data_data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.11glz9j04yr6161biqi9h0okclsp' name='greenhouse_gas_inventory_data_d' table='[greenhouse_gas_inventory_data_d$]' type='table'>
          <columns gridOrigin='A1:D8407:no:A1:D8407:0' header='yes' outcome='6'>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='integer' date-parse-format='yyyy' name='year' ordinal='1' />
            <column datatype='real' name='value' ordinal='2' />
            <column datatype='string' name='category' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[greenhouse_gas_inventory_data_d]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[greenhouse_gas_inventory_data_d]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[greenhouse_gas_inventory_data_d]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[greenhouse_gas_inventory_data_d]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[greenhouse_gas_inventory_data_d]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D8407:no:A1:D8407:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.447205' measure-ordering='alphabetic' measure-percentage='0.552795' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='co2-transport-mode (co2-transport-mode)' inline='true' name='federated.0n8g3ka0foyhu215s8ly51pxgj27' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='co2-transport-mode' name='excel-direct.0vggka90np9l7t1gsrt441v0n1k6'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Data Analytics/Senior Project/Data/co2-transport-mode.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0vggka90np9l7t1gsrt441v0n1k6' name='co2-transport-mode' table='[&apos;co2-transport-mode$&apos;]' type='table'>
          <columns gridOrigin='A1:C40:no:A1:C40:0' header='yes' outcome='6'>
            <column datatype='string' name='Entity' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='CO2 emissions (gCO2/km)' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Entity]</local-name>
            <parent-name>[co2-transport-mode]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[co2-transport-mode]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2 emissions (gCO2/km)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO2 emissions (gCO2/km)]</local-name>
            <parent-name>[co2-transport-mode]</parent-name>
            <remote-alias>CO2 emissions (gCO2/km)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[co2-transport-mode]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C40:no:A1:C40:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.503106' measure-ordering='alphabetic' measure-percentage='0.496894' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='emissions-of-air-pollutants (emissions-of-air-pollutants) (2)' inline='true' name='federated.1negdth1velvj20zroh431nqvxc7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='emissions-of-air-pollutants' name='excel-direct.06jzhjv1l1o3j51ct2rum1ntd740'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Data Analytics/Senior Project/Data/emissions-of-air-pollutants.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.06jzhjv1l1o3j51ct2rum1ntd740' name='emissions-of-air-pollutants' table='[&apos;emissions-of-air-pollutants$&apos;]' type='table'>
          <columns gridOrigin='A1:I79:no:A1:I79:0' header='yes' outcome='6'>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='string' name='Code' ordinal='1' />
            <column datatype='integer' name='Year' ordinal='2' />
            <column datatype='real' name='PM10' ordinal='3' />
            <column datatype='real' name='PM2.5' ordinal='4' />
            <column datatype='real' name='Non-methane volatile organic compounds (Index)' ordinal='5' />
            <column datatype='real' name='Nitrogen oxides (Index)' ordinal='6' />
            <column datatype='real' name='Ammonia (Index)' ordinal='7' />
            <column datatype='real' name='Sulphur dioxide (Index)' ordinal='8' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PM10</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PM10]</local-name>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias>PM10</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PM2.5</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PM2.5]</local-name>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias>PM2.5</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Non-methane volatile organic compounds (Index)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Non-methane volatile organic compounds (Index)]</local-name>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias>Non-methane volatile organic compounds (Index)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nitrogen oxides (Index)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Nitrogen oxides (Index)]</local-name>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias>Nitrogen oxides (Index)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ammonia (Index)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Ammonia (Index)]</local-name>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias>Ammonia (Index)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sulphur dioxide (Index)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sulphur dioxide (Index)]</local-name>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias>Sulphur dioxide (Index)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[emissions-of-air-pollutants]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I79:no:A1:I79:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='real' name='[Ammonia (Index)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Nitrogen oxides (Index)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Non-methane volatile organic compounds (Index)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[PM10]' role='measure' type='quantitative' />
      <column datatype='real' name='[PM2.5]' role='measure' type='quantitative' />
      <column datatype='real' name='[Sulphur dioxide (Index)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column aggregation='None' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column-instance column='[Ammonia (Index)]' derivation='Sum' name='[sum:Ammonia (Index):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Nitrogen oxides (Index)]' derivation='Sum' name='[sum:Nitrogen oxides (Index):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Non-methane volatile organic compounds (Index)]' derivation='Sum' name='[sum:Non-methane volatile organic compounds (Index):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[PM10]' derivation='Sum' name='[sum:PM10:qk]' pivot='key' type='quantitative' />
      <column-instance column='[PM2.5]' derivation='Sum' name='[sum:PM2.5:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sulphur dioxide (Index)]' derivation='Sum' name='[sum:Sulphur dioxide (Index):qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.391304' measure-ordering='alphabetic' measure-percentage='0.608696' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1negdth1velvj20zroh431nqvxc7].[sum:Ammonia (Index):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1negdth1velvj20zroh431nqvxc7].[sum:PM10:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1negdth1velvj20zroh431nqvxc7].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1negdth1velvj20zroh431nqvxc7].[sum:Sulphur dioxide (Index):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1negdth1velvj20zroh431nqvxc7].[sum:Non-methane volatile organic compounds (Index):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1negdth1velvj20zroh431nqvxc7].[sum:PM2.5:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1negdth1velvj20zroh431nqvxc7].[sum:Nitrogen oxides (Index):qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1negdth1velvj20zroh431nqvxc7]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='pollution_us_2000_2016 (pollution_us_2000_2016)' inline='true' name='federated.1u5oo631ax02om12hazm119x8psu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='pollution_us_2000_2016' name='excel-direct.00a2v3515bpfw51c4wptu0io8jtz'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Data Analytics/Senior Project/Data/pollution_us_2000_2016.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.00a2v3515bpfw51c4wptu0io8jtz' name='pollution_us_2000_2016' table='[pollution_us_2000_2016$]' type='table'>
          <columns gridOrigin='A1:G10001:no:A1:G2147483647:0' header='yes' outcome='6'>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='string' name='County' ordinal='1' />
            <column datatype='string' name='City' ordinal='2' />
            <column datatype='real' name='NO2 Mean parts per billion' ordinal='3' />
            <column datatype='real' name='O3 Mean parts per million' ordinal='4' />
            <column datatype='real' name='SO2 Mean parts per billion' ordinal='5' />
            <column datatype='real' name='CO Mean parts per million' ordinal='6' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[pollution_us_2000_2016]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>130</remote-type>
            <local-name>[County]</local-name>
            <parent-name>[pollution_us_2000_2016]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[pollution_us_2000_2016]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NO2 Mean parts per billion</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NO2 Mean parts per billion]</local-name>
            <parent-name>[pollution_us_2000_2016]</parent-name>
            <remote-alias>NO2 Mean parts per billion</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>O3 Mean parts per million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[O3 Mean parts per million]</local-name>
            <parent-name>[pollution_us_2000_2016]</parent-name>
            <remote-alias>O3 Mean parts per million</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SO2 Mean parts per billion</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SO2 Mean parts per billion]</local-name>
            <parent-name>[pollution_us_2000_2016]</parent-name>
            <remote-alias>SO2 Mean parts per billion</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO Mean parts per million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO Mean parts per million]</local-name>
            <parent-name>[pollution_us_2000_2016]</parent-name>
            <remote-alias>CO Mean parts per million</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[pollution_us_2000_2016]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G10001:no:A1:G2147483647:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column aggregation='None' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <semantic-values semantic-role='[City].[Name]'>
          <semantic-value key='&quot;Altoona&quot;' value='&quot;Altoona&quot;' />
          <semantic-value key='&quot;Arden-Arcade&quot;' value='&quot;Sacramento&quot;' />
          <semantic-value key='&quot;Capitan&quot;' value='&quot;Yosemite National Park&quot;' />
          <semantic-value key='&quot;Ladue&quot;' value='&quot;Santa Clara&quot;' />
        </semantic-values>
      </column>
      <column aggregation='None' datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot;Country Of Mexico&quot;' value='&quot;New Mexico&quot;' />
        </semantic-values>
      </column>
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.521739' measure-ordering='alphabetic' measure-percentage='0.478261' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Country Of Mexico&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;District Of Columbia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:O3 Mean:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:CO Mean:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]&#10;[:Measure Names]' palette='cyclic_10_0' type='palette'>
            <map to='#1ba3c6'>
              <multibucket>
                <bucket>&quot;Alexandria&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#1ca4c5'>
              <multibucket>
                <bucket>&quot;Alexandria&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#1da6c5'>
              <multibucket>
                <bucket>&quot;Altoona&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#1fa7c4'>
              <multibucket>
                <bucket>&quot;Altoona&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#1fad80'>
              <multibucket>
                <bucket>&quot;Camden&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#20a9c4'>
              <multibucket>
                <bucket>&quot;Annandale&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#20ae83'>
              <multibucket>
                <bucket>&quot;Calumet City (PU RR name Calumet Park (sta.))&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#21ad7c'>
              <multibucket>
                <bucket>&quot;Camden&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#21af86'>
              <multibucket>
                <bucket>&quot;Calumet City (PU RR name Calumet Park (sta.))&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#22aac3'>
              <multibucket>
                <bucket>&quot;Annandale&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#22b089'>
              <multibucket>
                <bucket>&quot;Calexico&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#23ac79'>
              <multibucket>
                <bucket>&quot;Capitan&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#23acc3'>
              <multibucket>
                <bucket>&quot;Arden-Arcade&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#23b18c'>
              <multibucket>
                <bucket>&quot;Calexico&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#24adc2'>
              <multibucket>
                <bucket>&quot;Arden-Arcade&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#24b28f'>
              <multibucket>
                <bucket>&quot;Burbank&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#25ab75'>
              <multibucket>
                <bucket>&quot;Capitan&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#26aa72'>
              <multibucket>
                <bucket>&quot;Charleroi&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#26afc2'>
              <multibucket>
                <bucket>&quot;Ashland&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#26b392'>
              <multibucket>
                <bucket>&quot;Burbank&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#27b0c1'>
              <multibucket>
                <bucket>&quot;Ashland&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#27b495'>
              <multibucket>
                <bucket>&quot;Bristol&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#28aa6e'>
              <multibucket>
                <bucket>&quot;Charleroi&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#28b598'>
              <multibucket>
                <bucket>&quot;Bristol&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#29b2c1'>
              <multibucket>
                <bucket>&quot;Athens&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#29b69b'>
              <multibucket>
                <bucket>&quot;Breckenridge Hills&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#2aa96b'>
              <multibucket>
                <bucket>&quot;Charlotte&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#2ab3c1'>
              <multibucket>
                <bucket>&quot;Athens&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#2ab79e'>
              <multibucket>
                <bucket>&quot;Breckenridge Hills&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#2bb5c0'>
              <multibucket>
                <bucket>&quot;Bakersfield&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#2ca867'>
              <multibucket>
                <bucket>&quot;Charlotte&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#2cb8a1'>
              <multibucket>
                <bucket>&quot;Boulder City&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#2db6c0'>
              <multibucket>
                <bucket>&quot;Bakersfield&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#2db9a4'>
              <multibucket>
                <bucket>&quot;Boulder City&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#2ea764'>
              <multibucket>
                <bucket>&quot;Cherry Tree&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#2eb8bf'>
              <multibucket>
                <bucket>&quot;Baton Rouge&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#2ebaa7'>
              <multibucket>
                <bucket>&quot;Boston&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#2fbbaa'>
              <multibucket>
                <bucket>&quot;Boston&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#30a760'>
              <multibucket>
                <bucket>&quot;Cherry Tree&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#30b9bf'>
              <multibucket>
                <bucket>&quot;Baton Rouge&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#30bcad'>
              <multibucket>
                <bucket>&quot;Bethel Island&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#31bbbe'>
              <multibucket>
                <bucket>&quot;Beaver Falls&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#32a65d'>
              <multibucket>
                <bucket>&quot;Chicago&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#32bcbe'>
              <multibucket>
                <bucket>&quot;Beaver Falls&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#32bdb0'>
              <multibucket>
                <bucket>&quot;Bethel Island&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#33beb3'>
              <multibucket>
                <bucket>&quot;Berkeley&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#34a559'>
              <multibucket>
                <bucket>&quot;Chicago&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#34bebd'>
              <multibucket>
                <bucket>&quot;Beltsville&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#34bfb6'>
              <multibucket>
                <bucket>&quot;Berkeley&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#35bfb9'>
              <multibucket>
                <bucket>&quot;Benicia&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#35bfbd'>
              <multibucket>
                <bucket>&quot;Beltsville&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#36a456'>
              <multibucket>
                <bucket>&quot;Chula Vista&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#36c0bc'>
              <multibucket>
                <bucket>&quot;Benicia&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#38a452'>
              <multibucket>
                <bucket>&quot;Chula Vista&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#3aa34f'>
              <multibucket>
                <bucket>&quot;Cicero&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#3ba24b'>
              <multibucket>
                <bucket>&quot;Cicero&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#3da148'>
              <multibucket>
                <bucket>&quot;Concord&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#3fa144'>
              <multibucket>
                <bucket>&quot;Concord&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#41a041'>
              <multibucket>
                <bucket>&quot;Cornwall&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#439f3d'>
              <multibucket>
                <bucket>&quot;Cornwall&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#469f3a'>
              <multibucket>
                <bucket>&quot;Costa Mesa&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4ca039'>
              <multibucket>
                <bucket>&quot;Costa Mesa&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4f7cba'>
              <multibucket>
                <bucket>&quot;York&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#527bba'>
              <multibucket>
                <bucket>&quot;York&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#52a238'>
              <multibucket>
                <bucket>&quot;Crockett&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#557abb'>
              <multibucket>
                <bucket>&quot;Winter Park&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#587abb'>
              <multibucket>
                <bucket>&quot;Winter Park&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#58a336'>
              <multibucket>
                <bucket>&quot;Crockett&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#5c79bc'>
              <multibucket>
                <bucket>&quot;Winston-Salem&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#5ea535'>
              <multibucket>
                <bucket>&quot;Cupertino&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#5f78bc'>
              <multibucket>
                <bucket>&quot;Winston-Salem&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#6278bd'>
              <multibucket>
                <bucket>&quot;Wilkes-Barre&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#64a634'>
              <multibucket>
                <bucket>&quot;Cupertino&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#6577bd'>
              <multibucket>
                <bucket>&quot;Wilkes-Barre&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#6976be'>
              <multibucket>
                <bucket>&quot;Westport&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#6aa833'>
              <multibucket>
                <bucket>&quot;Dallas&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#6c76be'>
              <multibucket>
                <bucket>&quot;Westport&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#6f75bf'>
              <multibucket>
                <bucket>&quot;West Los Angeles&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#70a931'>
              <multibucket>
                <bucket>&quot;Dallas&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#7274bf'>
              <multibucket>
                <bucket>&quot;West Los Angeles&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#7674c0'>
              <multibucket>
                <bucket>&quot;Welby&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#76ab30'>
              <multibucket>
                <bucket>&quot;Davenport&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#7973c0'>
              <multibucket>
                <bucket>&quot;Welby&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#7c72c1'>
              <multibucket>
                <bucket>&quot;Washington&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#7cac2f'>
              <multibucket>
                <bucket>&quot;Davenport&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#7f72c1'>
              <multibucket>
                <bucket>&quot;Washington&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#82ae2e'>
              <multibucket>
                <bucket>&quot;Denver&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8371c2'>
              <multibucket>
                <bucket>&quot;Waco&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8670c2'>
              <multibucket>
                <bucket>&quot;Waco&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#88af2c'>
              <multibucket>
                <bucket>&quot;Denver&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8970c3'>
              <multibucket>
                <bucket>&quot;Victorville&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8d6fc3'>
              <multibucket>
                <bucket>&quot;Victorville&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8eb12b'>
              <multibucket>
                <bucket>&quot;Des Moines&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#906ec3'>
              <multibucket>
                <bucket>&quot;Vandenberg Air Force Base&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#936ec3'>
              <multibucket>
                <bucket>&quot;Vandenberg Air Force Base&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#94b22a'>
              <multibucket>
                <bucket>&quot;Des Moines&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#976ec3'>
              <multibucket>
                <bucket>&quot;Valrico&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9a6ec3'>
              <multibucket>
                <bucket>&quot;Valrico&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9ab429'>
              <multibucket>
                <bucket>&quot;Detroit&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9e6dc2'>
              <multibucket>
                <bucket>&quot;Vallejo&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0b527'>
              <multibucket>
                <bucket>&quot;Detroit&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a16dc2'>
              <multibucket>
                <bucket>&quot;Vallejo&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a56dc2'>
              <multibucket>
                <bucket>&quot;Tulsa&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a6b726'>
              <multibucket>
                <bucket>&quot;East Hartford&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a86cc1'>
              <multibucket>
                <bucket>&quot;Tulsa&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ac6cc1'>
              <multibucket>
                <bucket>&quot;Tucson&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb825'>
              <multibucket>
                <bucket>&quot;East Hartford&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#af6cc1'>
              <multibucket>
                <bucket>&quot;Tucson&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b2ba24'>
              <multibucket>
                <bucket>&quot;East Saint Louis&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b36bc0'>
              <multibucket>
                <bucket>&quot;Tijuana&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b66bc0'>
              <multibucket>
                <bucket>&quot;Tijuana&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b8bb22'>
              <multibucket>
                <bucket>&quot;East Saint Louis&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ba6bc0'>
              <multibucket>
                <bucket>&quot;Sunset Hills&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bd6bc0'>
              <multibucket>
                <bucket>&quot;Sunset Hills&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bdbc21'>
              <multibucket>
                <bucket>&quot;El Paso&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c0bc21'>
              <multibucket>
                <bucket>&quot;El Paso&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c16abf'>
              <multibucket>
                <bucket>&quot;St. Louis&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c3bc21'>
              <multibucket>
                <bucket>&quot;Erie&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c56abf'>
              <multibucket>
                <bucket>&quot;St. Louis&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c6bc21'>
              <multibucket>
                <bucket>&quot;Erie&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c86abf'>
              <multibucket>
                <bucket>&quot;St. Ann&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c9bc21'>
              <multibucket>
                <bucket>&quot;Essex&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#cc69be'>
              <multibucket>
                <bucket>&quot;St. Ann&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ccbb21'>
              <multibucket>
                <bucket>&quot;Essex&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#cf69be'>
              <multibucket>
                <bucket>&quot;Seven Corners&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#cfbb21'>
              <multibucket>
                <bucket>&quot;Eureka&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d2bb21'>
              <multibucket>
                <bucket>&quot;Eureka&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d369be'>
              <multibucket>
                <bucket>&quot;Seven Corners&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d5bb21'>
              <multibucket>
                <bucket>&quot;Ferguson&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d669bd'>
              <multibucket>
                <bucket>&quot;Scranton&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d86abc'>
              <multibucket>
                <bucket>&quot;Scranton&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d8bb21'>
              <multibucket>
                <bucket>&quot;Ferguson&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#da6bbb'>
              <multibucket>
                <bucket>&quot;Scottsdale&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#dbba21'>
              <multibucket>
                <bucket>&quot;Fontana&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#dc6cba'>
              <multibucket>
                <bucket>&quot;Scottsdale&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#de6cb9'>
              <multibucket>
                <bucket>&quot;San Pablo&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#deba21'>
              <multibucket>
                <bucket>&quot;Fontana&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#df3029'>
              <multibucket>
                <bucket>&quot;Milwaukee&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#df3127'>
              <multibucket>
                <bucket>&quot;Miami&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e0302c'>
              <multibucket>
                <bucket>&quot;Milwaukee&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e03526'>
              <multibucket>
                <bucket>&quot;Miami&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e06db8'>
              <multibucket>
                <bucket>&quot;San Pablo&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e1312f'>
              <multibucket>
                <bucket>&quot;New Castle&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e1ba21'>
              <multibucket>
                <bucket>&quot;Freemansburg&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e23232'>
              <multibucket>
                <bucket>&quot;New Castle&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e23925'>
              <multibucket>
                <bucket>&quot;Mexicali&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e26eb7'>
              <multibucket>
                <bucket>&quot;San Jose&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e33235'>
              <multibucket>
                <bucket>&quot;New Haven&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e33d24'>
              <multibucket>
                <bucket>&quot;Mexicali&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e43338'>
              <multibucket>
                <bucket>&quot;New Haven&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e44123'>
              <multibucket>
                <bucket>&quot;McLean&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e46fb6'>
              <multibucket>
                <bucket>&quot;San Jose&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e4ba21'>
              <multibucket>
                <bucket>&quot;Freemansburg&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e5333b'>
              <multibucket>
                <bucket>&quot;New York&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e54622'>
              <multibucket>
                <bucket>&quot;McLean&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e6343e'>
              <multibucket>
                <bucket>&quot;New York&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e670b5'>
              <multibucket>
                <bucket>&quot;San Francisco&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e74a21'>
              <multibucket>
                <bucket>&quot;Manchester&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e7ba21'>
              <multibucket>
                <bucket>&quot;Fresno&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e83541'>
              <multibucket>
                <bucket>&quot;Newark&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e84e20'>
              <multibucket>
                <bucket>&quot;Manchester&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e871b4'>
              <multibucket>
                <bucket>&quot;San Francisco&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e93544'>
              <multibucket>
                <bucket>&quot;Newark&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e9521f'>
              <multibucket>
                <bucket>&quot;Louisville&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ea3647'>
              <multibucket>
                <bucket>&quot;Norristown&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ea561e'>
              <multibucket>
                <bucket>&quot;Louisville&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ea72b3'>
              <multibucket>
                <bucket>&quot;San Diego&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#eab921'>
              <multibucket>
                <bucket>&quot;Fresno&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#eb364a'>
              <multibucket>
                <bucket>&quot;Norristown&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ec374d'>
              <multibucket>
                <bucket>&quot;North Little Rock&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ec5a1d'>
              <multibucket>
                <bucket>&quot;Los Angeles&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ec73b2'>
              <multibucket>
                <bucket>&quot;San Diego&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ed3850'>
              <multibucket>
                <bucket>&quot;North Little Rock&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ed5e1b'>
              <multibucket>
                <bucket>&quot;Los Angeles&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#edb921'>
              <multibucket>
                <bucket>&quot;Goleta&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ee3853'>
              <multibucket>
                <bucket>&quot;Northbrook&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ee621a'>
              <multibucket>
                <bucket>&quot;Long Beach&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ee74b1'>
              <multibucket>
                <bucket>&quot;San Antonio&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ef3956'>
              <multibucket>
                <bucket>&quot;Northbrook&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ef6619'>
              <multibucket>
                <bucket>&quot;Long Beach&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f03959'>
              <multibucket>
                <bucket>&quot;Not in a city&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f075b0'>
              <multibucket>
                <bucket>&quot;San Antonio&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f0b921'>
              <multibucket>
                <bucket>&quot;Goleta&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f13a5c'>
              <multibucket>
                <bucket>&quot;Not in a city&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f16a18'>
              <multibucket>
                <bucket>&quot;Lompoc&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f23b5f'>
              <multibucket>
                <bucket>&quot;Oakland&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f26e17'>
              <multibucket>
                <bucket>&quot;Lompoc&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f276af'>
              <multibucket>
                <bucket>&quot;Rubidoux&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f33b62'>
              <multibucket>
                <bucket>&quot;Oakland&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f37216'>
              <multibucket>
                <bucket>&quot;Lexington-Fayette (corporate name for Lexington)&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f3b921'>
              <multibucket>
                <bucket>&quot;Grand Rapids&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f43e65'>
              <multibucket>
                <bucket>&quot;Paducah&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f44168'>
              <multibucket>
                <bucket>&quot;Paducah&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f47615'>
              <multibucket>
                <bucket>&quot;Lexington-Fayette (corporate name for Lexington)&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f477ae'>
              <multibucket>
                <bucket>&quot;Rubidoux&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f5446c'>
              <multibucket>
                <bucket>&quot;Park Hill&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f54770'>
              <multibucket>
                <bucket>&quot;Park Hill&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f64a73'>
              <multibucket>
                <bucket>&quot;Philadelphia&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f64e77'>
              <multibucket>
                <bucket>&quot;Philadelphia&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f678ad'>
              <multibucket>
                <bucket>&quot;Rosarito&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f67a14'>
              <multibucket>
                <bucket>&quot;Lancaster&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f6b921'>
              <multibucket>
                <bucket>&quot;Grand Rapids&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f7517a'>
              <multibucket>
                <bucket>&quot;Phoenix&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f7547e'>
              <multibucket>
                <bucket>&quot;Phoenix&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f77e13'>
              <multibucket>
                <bucket>&quot;Lancaster&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f85781'>
              <multibucket>
                <bucket>&quot;Pittsburg&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f85b85'>
              <multibucket>
                <bucket>&quot;Pittsburg&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f879ac'>
              <multibucket>
                <bucket>&quot;Rosarito&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f88213'>
              <multibucket>
                <bucket>&quot;Ladue&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f88514'>
              <multibucket>
                <bucket>&quot;Ladue&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f88814'>
              <multibucket>
                <bucket>&quot;Kenner&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f88a15'>
              <multibucket>
                <bucket>&quot;Kenner&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f88d16'>
              <multibucket>
                <bucket>&quot;Kansas City&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f89016'>
              <multibucket>
                <bucket>&quot;Kansas City&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f89317'>
              <multibucket>
                <bucket>&quot;Johnstown&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f89618'>
              <multibucket>
                <bucket>&quot;Johnstown&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f89818'>
              <multibucket>
                <bucket>&quot;Indianapolis (Remainder)&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f89b19'>
              <multibucket>
                <bucket>&quot;Indianapolis (Remainder)&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f89e1a'>
              <multibucket>
                <bucket>&quot;Houston&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f8a11b'>
              <multibucket>
                <bucket>&quot;Houston&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f8a41b'>
              <multibucket>
                <bucket>&quot;Holtsville&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f8a61c'>
              <multibucket>
                <bucket>&quot;Holtsville&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f8a91d'>
              <multibucket>
                <bucket>&quot;Henderson&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f8ac1d'>
              <multibucket>
                <bucket>&quot;Henderson&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f8af1e'>
              <multibucket>
                <bucket>&quot;Hawthorne&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f8b21f'>
              <multibucket>
                <bucket>&quot;Hawthorne&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f8b520'>
              <multibucket>
                <bucket>&quot;Greensburg&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f8b720'>
              <multibucket>
                <bucket>&quot;Greensburg&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f95e89'>
              <multibucket>
                <bucket>&quot;Pittsburgh&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f9618c'>
              <multibucket>
                <bucket>&quot;Pittsburgh&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fa6490'>
              <multibucket>
                <bucket>&quot;Ponca City&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fa6793'>
              <multibucket>
                <bucket>&quot;Ponca City&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fa7aab'>
              <multibucket>
                <bucket>&quot;Reno&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fb6b97'>
              <multibucket>
                <bucket>&quot;Portland&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fb6e9a'>
              <multibucket>
                <bucket>&quot;Portland&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fc719e'>
              <multibucket>
                <bucket>&quot;Presque Isle&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fc74a1'>
              <multibucket>
                <bucket>&quot;Presque Isle&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fc7baa'>
              <multibucket>
                <bucket>&quot;Reno&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fd77a5'>
              <multibucket>
                <bucket>&quot;Reading&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:NO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fd7ba9'>
              <multibucket>
                <bucket>&quot;Reading&quot;</bucket>
                <bucket>&quot;[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean:qk]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' palette='cyclic_10_0' type='palette'>
            <map to='#1ba3c6'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#1da6c5'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#1fad7f'>
              <bucket>&quot;Camden&quot;</bucket>
            </map>
            <map to='#20a9c4'>
              <bucket>&quot;Annandale&quot;</bucket>
            </map>
            <map to='#21af86'>
              <bucket>&quot;Calumet City (PU RR name Calumet Park (sta.))&quot;</bucket>
            </map>
            <map to='#23ac78'>
              <bucket>&quot;Capitan&quot;</bucket>
            </map>
            <map to='#23acc3'>
              <bucket>&quot;Arden-Arcade&quot;</bucket>
            </map>
            <map to='#23b18c'>
              <bucket>&quot;Calexico&quot;</bucket>
            </map>
            <map to='#25b392'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#26afc2'>
              <bucket>&quot;Ashland&quot;</bucket>
            </map>
            <map to='#27aa71'>
              <bucket>&quot;Charleroi&quot;</bucket>
            </map>
            <map to='#28b598'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#29b2c1'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#2ab79e'>
              <bucket>&quot;Breckenridge Hills&quot;</bucket>
            </map>
            <map to='#2ba96a'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#2bb5c0'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#2db9a4'>
              <bucket>&quot;Boulder City&quot;</bucket>
            </map>
            <map to='#2ea763'>
              <bucket>&quot;Cherry Tree&quot;</bucket>
            </map>
            <map to='#2eb8bf'>
              <bucket>&quot;Baton Rouge&quot;</bucket>
            </map>
            <map to='#2fbbaa'>
              <bucket>&quot;Boston&quot;</bucket>
            </map>
            <map to='#31bbbe'>
              <bucket>&quot;Beaver Falls&quot;</bucket>
            </map>
            <map to='#31bdb0'>
              <bucket>&quot;Bethel Island&quot;</bucket>
            </map>
            <map to='#32a65c'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#34beb6'>
              <bucket>&quot;Berkeley&quot;</bucket>
            </map>
            <map to='#34bebd'>
              <bucket>&quot;Beltsville&quot;</bucket>
            </map>
            <map to='#36a455'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#36c0bc'>
              <bucket>&quot;Benicia&quot;</bucket>
            </map>
            <map to='#3aa34e'>
              <bucket>&quot;Cicero&quot;</bucket>
            </map>
            <map to='#3ea147'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#42a040'>
              <bucket>&quot;Cornwall&quot;</bucket>
            </map>
            <map to='#489f3a'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#4f7cba'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#54a237'>
              <bucket>&quot;Crockett&quot;</bucket>
            </map>
            <map to='#557abb'>
              <bucket>&quot;Winter Park&quot;</bucket>
            </map>
            <map to='#5c79bc'>
              <bucket>&quot;Winston-Salem&quot;</bucket>
            </map>
            <map to='#60a535'>
              <bucket>&quot;Cupertino&quot;</bucket>
            </map>
            <map to='#6278bd'>
              <bucket>&quot;Wilkes-Barre&quot;</bucket>
            </map>
            <map to='#6976be'>
              <bucket>&quot;Westport&quot;</bucket>
            </map>
            <map to='#6ca832'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#6f75bf'>
              <bucket>&quot;West Los Angeles&quot;</bucket>
            </map>
            <map to='#7674c0'>
              <bucket>&quot;Welby&quot;</bucket>
            </map>
            <map to='#78ab30'>
              <bucket>&quot;Davenport&quot;</bucket>
            </map>
            <map to='#7c72c1'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#8371c2'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#84ae2d'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#8970c3'>
              <bucket>&quot;Victorville&quot;</bucket>
            </map>
            <map to='#906ec3'>
              <bucket>&quot;Vandenberg Air Force Base&quot;</bucket>
            </map>
            <map to='#90b12b'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#976ec3'>
              <bucket>&quot;Valrico&quot;</bucket>
            </map>
            <map to='#9cb428'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#9e6dc2'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#a56dc2'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#a8b726'>
              <bucket>&quot;East Hartford&quot;</bucket>
            </map>
            <map to='#ac6cc1'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#b36bc0'>
              <bucket>&quot;Tijuana&quot;</bucket>
            </map>
            <map to='#b4ba23'>
              <bucket>&quot;East Saint Louis&quot;</bucket>
            </map>
            <map to='#ba6bc0'>
              <bucket>&quot;Sunset Hills&quot;</bucket>
            </map>
            <map to='#bebc21'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#c26abf'>
              <bucket>&quot;St. Louis&quot;</bucket>
            </map>
            <map to='#c4bc21'>
              <bucket>&quot;Erie&quot;</bucket>
            </map>
            <map to='#c96abf'>
              <bucket>&quot;St. Ann&quot;</bucket>
            </map>
            <map to='#cabc21'>
              <bucket>&quot;Essex&quot;</bucket>
            </map>
            <map to='#d069be'>
              <bucket>&quot;Seven Corners&quot;</bucket>
            </map>
            <map to='#d0bb21'>
              <bucket>&quot;Eureka&quot;</bucket>
            </map>
            <map to='#d669bd'>
              <bucket>&quot;Scranton&quot;</bucket>
            </map>
            <map to='#d6bb21'>
              <bucket>&quot;Ferguson&quot;</bucket>
            </map>
            <map to='#da6bbb'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#dcba21'>
              <bucket>&quot;Fontana&quot;</bucket>
            </map>
            <map to='#de6db9'>
              <bucket>&quot;San Pablo&quot;</bucket>
            </map>
            <map to='#e0302b'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#e03327'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#e23131'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#e23b25'>
              <bucket>&quot;Mexicali&quot;</bucket>
            </map>
            <map to='#e26fb7'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#e2ba21'>
              <bucket>&quot;Freemansburg&quot;</bucket>
            </map>
            <map to='#e43337'>
              <bucket>&quot;New Haven&quot;</bucket>
            </map>
            <map to='#e54322'>
              <bucket>&quot;McLean&quot;</bucket>
            </map>
            <map to='#e6343d'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#e670b5'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#e74b20'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#e83543'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#e8ba21'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#ea3649'>
              <bucket>&quot;Norristown&quot;</bucket>
            </map>
            <map to='#ea541e'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#ea72b3'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#ec374f'>
              <bucket>&quot;North Little Rock&quot;</bucket>
            </map>
            <map to='#ec5c1c'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#ee74b1'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#eeb921'>
              <bucket>&quot;Goleta&quot;</bucket>
            </map>
            <map to='#ef3955'>
              <bucket>&quot;Northbrook&quot;</bucket>
            </map>
            <map to='#ef641a'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#f13a5b'>
              <bucket>&quot;Not in a city&quot;</bucket>
            </map>
            <map to='#f16c18'>
              <bucket>&quot;Lompoc&quot;</bucket>
            </map>
            <map to='#f276af'>
              <bucket>&quot;Rubidoux&quot;</bucket>
            </map>
            <map to='#f33b61'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#f44067'>
              <bucket>&quot;Paducah&quot;</bucket>
            </map>
            <map to='#f47416'>
              <bucket>&quot;Lexington-Fayette (corporate name for Lexington)&quot;</bucket>
            </map>
            <map to='#f4b921'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#f5466e'>
              <bucket>&quot;Park Hill&quot;</bucket>
            </map>
            <map to='#f64d76'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#f678ad'>
              <bucket>&quot;Rosarito&quot;</bucket>
            </map>
            <map to='#f67c14'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#f7537d'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#f85a84'>
              <bucket>&quot;Pittsburg&quot;</bucket>
            </map>
            <map to='#f88313'>
              <bucket>&quot;Ladue&quot;</bucket>
            </map>
            <map to='#f88915'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#f88f16'>
              <bucket>&quot;Kansas City&quot;</bucket>
            </map>
            <map to='#f89417'>
              <bucket>&quot;Johnstown&quot;</bucket>
            </map>
            <map to='#f89a19'>
              <bucket>&quot;Indianapolis (Remainder)&quot;</bucket>
            </map>
            <map to='#f8a01a'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#f8a51c'>
              <bucket>&quot;Holtsville&quot;</bucket>
            </map>
            <map to='#f8ab1d'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#f8b11f'>
              <bucket>&quot;Hawthorne&quot;</bucket>
            </map>
            <map to='#f8b620'>
              <bucket>&quot;Greensburg&quot;</bucket>
            </map>
            <map to='#f9608b'>
              <bucket>&quot;Pittsburgh&quot;</bucket>
            </map>
            <map to='#fa6792'>
              <bucket>&quot;Ponca City&quot;</bucket>
            </map>
            <map to='#fa7aab'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#fb6d99'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#fc73a1'>
              <bucket>&quot;Presque Isle&quot;</bucket>
            </map>
            <map to='#fd7aa8'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;USA&quot;' />
        <semantic-value key='[County].[Name]' value='%null%' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='Food_Production (Food_Production)' inline='true' name='federated.0ecjhcs1g5jesl140kxcq15s5kub' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Food_Production' name='excel-direct.1qzop680iqllm615la3j90bb3js5'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Data Analytics/Senior Project/Data/Food_Production.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1qzop680iqllm615la3j90bb3js5' name='Food_Production' table='[Food_Production$]' type='table'>
          <columns gridOrigin='A1:I44:no:A1:I44:0' header='yes' outcome='6'>
            <column datatype='string' name='Food product' ordinal='0' />
            <column datatype='real' name='Land use change' ordinal='1' />
            <column datatype='real' name='Animal Feed' ordinal='2' />
            <column datatype='real' name='Farm' ordinal='3' />
            <column datatype='real' name='Processing' ordinal='4' />
            <column datatype='real' name='Transport' ordinal='5' />
            <column datatype='real' name='Packging' ordinal='6' />
            <column datatype='real' name='Retail' ordinal='7' />
            <column datatype='real' name='Total_emissions' ordinal='8' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Food product</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Food product]</local-name>
            <parent-name>[Food_Production]</parent-name>
            <remote-alias>Food product</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Land use change</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Land use change]</local-name>
            <parent-name>[Food_Production]</parent-name>
            <remote-alias>Land use change</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Animal Feed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Animal Feed]</local-name>
            <parent-name>[Food_Production]</parent-name>
            <remote-alias>Animal Feed</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Farm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Farm]</local-name>
            <parent-name>[Food_Production]</parent-name>
            <remote-alias>Farm</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Processing</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Processing]</local-name>
            <parent-name>[Food_Production]</parent-name>
            <remote-alias>Processing</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transport</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Transport]</local-name>
            <parent-name>[Food_Production]</parent-name>
            <remote-alias>Transport</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Packging</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Packging]</local-name>
            <parent-name>[Food_Production]</parent-name>
            <remote-alias>Packging</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Retail</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Retail]</local-name>
            <parent-name>[Food_Production]</parent-name>
            <remote-alias>Retail</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_emissions</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_emissions]</local-name>
            <parent-name>[Food_Production]</parent-name>
            <remote-alias>Total_emissions</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Food_Production]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I44:no:A1:I44:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.223602' measure-ordering='alphabetic' measure-percentage='0.776398' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='Sheet1 (Tesla EV)' inline='true' name='federated.103js1e0c5wwq418qbx181lswi0o' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tesla EV' name='excel-direct.0xfr8ky1aiwzxs108ctni0cdgztr'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Data Analytics/Senior Project/Data/Tesla EV.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0xfr8ky1aiwzxs108ctni0cdgztr' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E1260:no:A1:E1260:0' header='yes' outcome='6'>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='real' name='Open' ordinal='1' />
            <column datatype='real' name='High' ordinal='2' />
            <column datatype='real' name='Low' ordinal='3' />
            <column datatype='real' name='Close' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Open</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Open]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Open</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>High</remote-name>
            <remote-type>5</remote-type>
            <local-name>[High]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>High</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Low</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Low]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Low</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Close</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Close]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Close</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E1260:no:A1:E1260:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='High Low' datatype='real' name='[Calculation_854276600713629699]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Low])-SUM([High])' />
      </column>
      <column caption='Open Close ' datatype='real' name='[Calculation_854276600714723332]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Close])-SUM([Open])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.236025' measure-ordering='alphabetic' measure-percentage='0.763975' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='renewable-energy-investment (renewable-energy-investment)' inline='true' name='federated.19478at1fsti8e17c9mhx1gz4oog' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='renewable-energy-investment' name='excel-direct.0mg54qz0ilx2kj1e86heo0r8mjgt'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Desktop/Data Analytics/Senior Project/Data/renewable-energy-investment.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0mg54qz0ilx2kj1e86heo0r8mjgt' name='renewable-energy-investment' table='[&apos;renewable-energy-investment$&apos;]' type='table'>
          <columns gridOrigin='A1:C97:no:A1:C97:0' header='yes' outcome='6'>
            <column datatype='string' name='Entity' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Investment in Renewables by Region (IRENA (2016))' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Entity]</local-name>
            <parent-name>[renewable-energy-investment]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[renewable-energy-investment]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Investment in Renewables by Region (IRENA (2016))</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Investment in Renewables by Region (IRENA (2016))]</local-name>
            <parent-name>[renewable-energy-investment]</parent-name>
            <remote-alias>Investment in Renewables by Region (IRENA (2016))</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[renewable-energy-investment]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C97:no:A1:C97:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='real' name='[Investment in Renewables by Region (IRENA (2016))]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Investment in Renewables by Region (IRENA (2016))]' derivation='Sum' name='[sum:Investment in Renewables by Region (IRENA (2016)):qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.409938' measure-ordering='alphabetic' measure-percentage='0.590062' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.19478at1fsti8e17c9mhx1gz4oog].[sum:Investment in Renewables by Region (IRENA (2016)):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.19478at1fsti8e17c9mhx1gz4oog]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Electricity From Fossil Fuel' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Annual Deforestation '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt; Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='annual-deforestation (annual-deforestation)' name='federated.08ko4rp1bkc3tn1ebdp4l1nhumnl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.08ko4rp1bkc3tn1ebdp4l1nhumnl'>
            <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Deforestation]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deforestation]' derivation='Sum' name='[sum:Deforestation:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[Longitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[none:Year:qk]' included-values='in-range'>
            <min>1990</min>
            <max>2015</max>
          </filter>
          <slices>
            <column>[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[Latitude (generated)]</column>
            <column>[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[Longitude (generated)]</column>
            <column>[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[Longitude (generated)]' field-type='quantitative' max='25037578.217433158' min='-20929067.681764383' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[Latitude (generated)]' field-type='quantitative' max='17733675.745338343' min='-8792082.7956124172' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[sum:Deforestation:qk]' max='1500000.0' min='1000.0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[none:Country:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[sum:Deforestation:qk]' />
              <lod column='[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[none:Country:nk]' />
              <geometry column='[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='4.4617786407470703' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[Latitude (generated)]</rows>
        <cols>[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A41F2AEE-C16E-4B44-98AA-52F53C209714}' />
    </worksheet>
    <worksheet name='CO2 Transport Emission'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt; In gCO2 Per Km</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='co2-transport-mode (co2-transport-mode)' name='federated.0n8g3ka0foyhu215s8ly51pxgj27' />
          </datasources>
          <datasource-dependencies datasource='federated.0n8g3ka0foyhu215s8ly51pxgj27'>
            <column datatype='real' name='[CO2 emissions (gCO2/km)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[CO2 emissions (gCO2/km)]' derivation='Sum' name='[sum:CO2 emissions (gCO2/km):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]' />
              <color column='[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]' />
              <text column='[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]' />
              <text column='[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Taxi&quot;</value>
                <value>148.85999999999899</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Small electric vehicle (UK electricity)&quot;</value>
                <value>45.310000000000002</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Small car (plug-in hybrid electric)&quot;</value>
                <value>29.18</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Small car (petrol)&quot;</value>
                <value>153.00999999999999</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Small car (hybrid)&quot;</value>
                <value>104.09</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='5' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Small car (diesel)&quot;</value>
                <value>140.24000000000001</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='6' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Short-haul flight (economy)&quot;</value>
                <value>81.549999999999997</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='7' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Short-haul flight (business class)&quot;</value>
                <value>122.33</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='8' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Petrol car, 4 passengers&quot;</value>
                <value>47.895000000000003</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='9' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Petrol car, 2 passengers&quot;</value>
                <value>95.790000000000006</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='10' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;National rail&quot;</value>
                <value>40.770000000000003</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='11' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Motorcycle (small)&quot;</value>
                <value>82.409999999999997</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='12' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Motorcycle (medium)&quot;</value>
                <value>100.04000000000001</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='13' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Motorcycle (large)&quot;</value>
                <value>133.08000000000001</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='14' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Medium electric vehicle (UK electricity)&quot;</value>
                <value>52.75</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='15' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Medium car (plug-in hybrid electric)&quot;</value>
                <value>70.400000000000006</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='16' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Medium car (petrol)&quot;</value>
                <value>191.58000000000001</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='17' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Medium car (hybrid)&quot;</value>
                <value>107.64</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='18' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Medium car (diesel)&quot;</value>
                <value>168.77000000000001</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='19' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Long-haul flight (first class)&quot;</value>
                <value>313.81999999999999</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='20' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Long-haul flight (economy+)&quot;</value>
                <value>125.53</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='21' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Long-haul flight (economy)&quot;</value>
                <value>78.450000000000003</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='22' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Long-haul flight (business class)&quot;</value>
                <value>227.52000000000001</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='23' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;London Underground&quot;</value>
                <value>30.59</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='24' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Light rail and tram&quot;</value>
                <value>34.799999999999997</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='25' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Large electric vehicle (UK electricity)&quot;</value>
                <value>66.349999999999994</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='26' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Large car (plug-in hybrid electric)&quot;</value>
                <value>76.849999999999994</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='27' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Large car (petrol)&quot;</value>
                <value>282.25</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='28' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Large car (hybrid)&quot;</value>
                <value>130.22</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='29' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Large car (diesel)&quot;</value>
                <value>207.63</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='30' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Ferry (foot passenger)&quot;</value>
                <value>18.48</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='31' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Ferry (car passenger)&quot;</value>
                <value>127.738999999999</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='32' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Eurostar (international rail)&quot;</value>
                <value>5.9199999999999999</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='33' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Domestic flight&quot;</value>
                <value>133.44999999999999</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='34' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Diesel car, 4 passengers&quot;</value>
                <value>42.192500000000003</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='35' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Diesel car, 2 passengers&quot;</value>
                <value>84.385000000000005</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='36' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Coach&quot;</value>
                <value>27.279999999999902</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='37' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Bus&quot;</value>
                <value>103.91</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='38' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[none:Entity:nk]</field>
                  <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Black cab (taxi)&quot;</value>
                <value>210.53</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{6E5E286E-BC6D-408B-A649-A7E1F82E2269}' />
    </worksheet>
    <worksheet name='Earth Temperature'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Earth&apos;s Daily Temperature From 1880 to 2021</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='global-monthly-temperature-anom (global-monthly-temperature-anomaly)' name='federated.1juel6n1dq3l2b1c2oool1rpny2q' />
          </datasources>
          <datasource-dependencies datasource='federated.1juel6n1dq3l2b1c2oool1rpny2q'>
            <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Day]' role='dimension' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[temperature_anomaly]' derivation='Sum' name='[sum:temperature_anomaly:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Day]' derivation='Day-Trunc' name='[tdy:Day:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[temperature_anomaly]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1juel6n1dq3l2b1c2oool1rpny2q].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;World&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1juel6n1dq3l2b1c2oool1rpny2q].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1juel6n1dq3l2b1c2oool1rpny2q].[tdy:Day:qk]' value='#ffffff' />
            <format attr='background-color' field='[federated.1juel6n1dq3l2b1c2oool1rpny2q].[sum:temperature_anomaly:qk]' value='#ffffff' />
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='background-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1juel6n1dq3l2b1c2oool1rpny2q].[tdy:Day:qk]' value='bold' />
            <format attr='font-weight' field='[federated.1juel6n1dq3l2b1c2oool1rpny2q].[sum:temperature_anomaly:qk]' value='bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1juel6n1dq3l2b1c2oool1rpny2q].[sum:temperature_anomaly:qk]' max='1.8999999999999999' min='-0.5' num-steps='4' palette='orange_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='total' scope='cols' value='#00000000' />
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-style' scope='cols' value='none' />
            <format attr='band-color' scope='rows' value='#000000' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#000000' />
            <format attr='band-color' scope='cols' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1juel6n1dq3l2b1c2oool1rpny2q].[sum:temperature_anomaly:qk]' />
              <size column='[federated.1juel6n1dq3l2b1c2oool1rpny2q].[sum:temperature_anomaly:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.16392265260219574' />
                <format attr='mark-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1juel6n1dq3l2b1c2oool1rpny2q].[sum:temperature_anomaly:qk]</rows>
        <cols>[federated.1juel6n1dq3l2b1c2oool1rpny2q].[tdy:Day:qk]</cols>
      </table>
      <simple-id uuid='{8C702B3F-023F-4D81-AC1B-B94E49704886}' />
    </worksheet>
    <worksheet name='Electricity From Fossil Fuel'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Electricity Generation From Fossil Fuels Per Capita</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run fontname='Lato,Helvetica Neue,Arial,sans-serif'>This Graph represents the average amount of electricity produced from fossil fuels between the year 2000 and 2019. (Electricity from fossil fuels is the sum of electricity generation from coal, oil and gas.) We can see that the top 3 countries that generated the most electricity from fossil fuels are: The United States Of America, Australia and Saudi Arabia</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='fossil-electricity-per-capita (fossil-electricity-per-capita)' name='federated.1gk4jrf1xn51cn1acxvni1y0y642' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1gk4jrf1xn51cn1acxvni1y0y642'>
            <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Fossil fuel electricity per capita (kWh)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Fossil fuel electricity per capita (kWh)]' derivation='Avg' name='[avg:Fossil fuel electricity per capita (kWh):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[Longitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Year:qk]' included-values='in-range'>
            <min>1985</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.1gk4jrf1xn51cn1acxvni1y0y642].[Latitude (generated)]</column>
            <column>[federated.1gk4jrf1xn51cn1acxvni1y0y642].[Longitude (generated)]</column>
            <column>[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[Longitude (generated)]' field-type='quantitative' max='36568368.465981379' min='-40549542.038381137' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[Latitude (generated)]' field-type='quantitative' max='18283963.821257763' min='-17089479.425594259' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[avg:Fossil fuel electricity per capita (kWh):qk]' max='10000.0' num-steps='6' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Country:nk]' value='false' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Country:nk]' />
              <color column='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[avg:Fossil fuel electricity per capita (kWh):qk]' />
              <geometry column='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gk4jrf1xn51cn1acxvni1y0y642].[Latitude (generated)]</rows>
        <cols>[federated.1gk4jrf1xn51cn1acxvni1y0y642].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1B7EBF9B-2DC0-40C7-A6F3-7D75CFE8BDA5}' />
    </worksheet>
    <worksheet name='Electricity generation from Power Plants'>
      <table>
        <view>
          <datasources>
            <datasource caption='primary-energy-consumption-by-s (primary-energy-consumption-by-source)' name='federated.01aa8lq04kpily16skfsu0yx1tje' />
          </datasources>
          <datasource-dependencies datasource='federated.01aa8lq04kpily16skfsu0yx1tje'>
            <column datatype='real' name='[Coal Consumption - TWh]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Gas Consumption - TWh]' role='measure' type='quantitative' />
            <column datatype='real' name='[Geo Biomass Other - TWh]' role='measure' type='quantitative' />
            <column datatype='real' name='[Hydro Generation - TWh]' role='measure' type='quantitative' />
            <column datatype='real' name='[Nuclear Generation - TWh]' role='measure' type='quantitative' />
            <column datatype='real' name='[Oil Consumption - TWh]' role='measure' type='quantitative' />
            <column datatype='real' name='[Solar Generation - TWh]' role='measure' type='quantitative' />
            <column datatype='real' name='[Wind Generation - TWh]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Coal Consumption - TWh]' derivation='Sum' name='[sum:Coal Consumption - TWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gas Consumption - TWh]' derivation='Sum' name='[sum:Gas Consumption - TWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Geo Biomass Other - TWh]' derivation='Sum' name='[sum:Geo Biomass Other - TWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Hydro Generation - TWh]' derivation='Sum' name='[sum:Hydro Generation - TWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Nuclear Generation - TWh]' derivation='Sum' name='[sum:Nuclear Generation - TWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Oil Consumption - TWh]' derivation='Sum' name='[sum:Oil Consumption - TWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Solar Generation - TWh]' derivation='Sum' name='[sum:Solar Generation - TWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Wind Generation - TWh]' derivation='Sum' name='[sum:Wind Generation - TWh:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01aa8lq04kpily16skfsu0yx1tje].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[sum:Coal Consumption - TWh:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[sum:Gas Consumption - TWh:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[sum:Geo Biomass Other - TWh:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[sum:Hydro Generation - TWh:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[sum:Nuclear Generation - TWh:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[sum:Oil Consumption - TWh:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[sum:Solar Generation - TWh:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01aa8lq04kpily16skfsu0yx1tje].[sum:Wind Generation - TWh:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01aa8lq04kpily16skfsu0yx1tje].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;World&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.01aa8lq04kpily16skfsu0yx1tje].[none:Year:qk]' included-values='in-range'>
            <min>1965</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.01aa8lq04kpily16skfsu0yx1tje].[none:Country:nk]</column>
            <column>[federated.01aa8lq04kpily16skfsu0yx1tje].[:Measure Names]</column>
            <column>[federated.01aa8lq04kpily16skfsu0yx1tje].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01aa8lq04kpily16skfsu0yx1tje].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.01aa8lq04kpily16skfsu0yx1tje].[Multiple Values]</rows>
        <cols>[federated.01aa8lq04kpily16skfsu0yx1tje].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{C0C614F8-63E5-48F4-A1B3-BB44B1F67010}' />
    </worksheet>
    <worksheet name='Global Electric Car Sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Global Electric Car Sales By Key Markets 2010-2020</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='global-electric-car-sales-by-ke (global-electric-car-sales-by-key-markets-2010-2020)' name='federated.0wsc9uc02jgx4d13u6t3e0ts0yt8' />
          </datasources>
          <datasource-dependencies datasource='federated.0wsc9uc02jgx4d13u6t3e0ts0yt8'>
            <column datatype='real' name='[China]' role='measure' type='quantitative' />
            <column datatype='real' name='[Europe]' role='measure' type='quantitative' />
            <column datatype='real' name='[Japan]' role='measure' type='quantitative' />
            <column caption='Market Share' datatype='real' name='[Market Share (copy)_686798982843633664]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Market Share]' />
            </column>
            <column aggregation='Sum' caption='Market Share1' datatype='real' name='[Market Share]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Rest of the Earth]' role='measure' type='quantitative' />
            <column datatype='real' name='[USA]' role='measure' type='quantitative' />
            <column datatype='real' name='[World]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Years]' role='measure' type='quantitative' />
            <column-instance column='[Years]' derivation='None' name='[none:Years:qk]' pivot='key' type='quantitative' />
            <column-instance column='[China]' derivation='Sum' name='[sum:China:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Europe]' derivation='Sum' name='[sum:Europe:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Japan]' derivation='Sum' name='[sum:Japan:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Market Share (copy)_686798982843633664]' derivation='Sum' name='[sum:Market Share (copy)_686798982843633664:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rest of the Earth]' derivation='Sum' name='[sum:Rest of the Earth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[USA]' derivation='Sum' name='[sum:USA:qk]' pivot='key' type='quantitative' />
            <column-instance column='[World]' derivation='Sum' name='[sum:World:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Rest of the Earth:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Japan:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Europe:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:USA:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:China:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:World:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Rest of the Earth:qk]&quot;</bucket>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Japan:qk]&quot;</bucket>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Europe:qk]&quot;</bucket>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:USA:qk]&quot;</bucket>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:China:qk]&quot;</bucket>
              <bucket>&quot;[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:World:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:China:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Europe:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Japan:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[:Measure Names]</column>
            <column>[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:China:qk]</column>
            <column>[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Europe:qk]</column>
            <column>[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Japan:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Market Share (copy)_686798982843633664:qk]' field-type='quantitative' fold='true' max='3.5' min='0.0' minor-show='false' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[Multiple Values]' field-type='quantitative' max='2.7999999999999998' min='0.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[none:Years:qk]' field-type='quantitative' minor-origin='0' minor-show='false' minor-spacing='1' scope='cols' type='space' />
            <format attr='auto-subtitle' class='0' field='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Market Share (copy)_686798982843633664:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[Multiple Values]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Market Share (copy)_686798982843633664:qk]' value='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' />
            <format attr='text-orientation' field='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Market Share (copy)_686798982843633664:qk]' value='0' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-weight' field='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Market Share (copy)_686798982843633664:qk]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[:Measure Names]' />
              <lod column='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='0.5' mark-alignment='mark-alignment-center' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='true' />
            <encodings>
              <color column='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[:Measure Names]' />
              <lod column='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='size' value='1.9890055656433105' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Market Share (copy)_686798982843633664:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[:Measure Names]' />
              <lod column='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='on' />
                <format attr='vertical-align' value='bottom' />
                <format attr='text-align' value='right' />
                <format attr='text-orientation' value='0' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='shape' value=':filled/circle' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[Multiple Values] + [federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[sum:Market Share (copy)_686798982843633664:qk])</rows>
        <cols>[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[none:Years:qk]</cols>
      </table>
      <simple-id uuid='{4F3F293F-45D3-46BD-8D10-0524E7A2A580}' />
    </worksheet>
    <worksheet name='Global Energy Use'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Global Energy Use And Energy Related CO2 Emissions By Sector 2020</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='global-energy-use-and-energy-re (global-energy-use-and-energy-related-co2-emissions-by-sector-2020)' name='federated.0b3hmbr0eai96h15v83u00vr57p1' />
          </datasources>
          <datasource-dependencies datasource='federated.0b3hmbr0eai96h15v83u00vr57p1'>
            <column datatype='integer' name='[Emissions]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Energy use]' role='measure' type='quantitative' />
            <column datatype='string' name='[Types]' role='dimension' type='nominal' />
            <column-instance column='[Types]' derivation='None' name='[none:Types:nk]' pivot='key' type='nominal' />
            <column-instance column='[Emissions]' derivation='Sum' name='[sum:Emissions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Energy use]' derivation='Sum' name='[sum:Energy use:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0b3hmbr0eai96h15v83u00vr57p1].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0b3hmbr0eai96h15v83u00vr57p1].[sum:Emissions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0b3hmbr0eai96h15v83u00vr57p1].[sum:Energy use:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0b3hmbr0eai96h15v83u00vr57p1].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0b3hmbr0eai96h15v83u00vr57p1].[Multiple Values]' field-type='quantitative' major-origin='0.0' major-spacing='5.0' max='100.0' min='0.0' minor-origin='0.0' minor-show='false' minor-spacing='1.0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.0b3hmbr0eai96h15v83u00vr57p1].[Multiple Values]' scope='cols' value='Percentage ' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0b3hmbr0eai96h15v83u00vr57p1].[:Measure Names]' value='193' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0b3hmbr0eai96h15v83u00vr57p1].[:Measure Names]' value='10' />
            <format attr='font-weight' field='[federated.0b3hmbr0eai96h15v83u00vr57p1].[:Measure Names]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0b3hmbr0eai96h15v83u00vr57p1].[none:Types:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5712155103683472' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='386' />
                <format attr='maxheight' value='386' />
                <format attr='minwidth' value='865' />
                <format attr='maxwidth' value='865' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0b3hmbr0eai96h15v83u00vr57p1].[:Measure Names]</rows>
        <cols>[federated.0b3hmbr0eai96h15v83u00vr57p1].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{1FB09AD6-C0FB-43F1-931F-F17D92C285F2}' />
    </worksheet>
    <worksheet name='Greenhouse'>
      <table>
        <view>
          <datasources>
            <datasource caption='greenhouse_gas_inventory_data_d (greenhouse_gas_inventory_data_data)' name='federated.0h8b2o61vxszg414kx4r40ud4c6i' />
          </datasources>
          <datasource-dependencies datasource='federated.0h8b2o61vxszg414kx4r40ud4c6i'>
            <column datatype='string' name='[category]' role='dimension' type='nominal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0h8b2o61vxszg414kx4r40ud4c6i].[none:category:nk]' value='112' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='background-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0h8b2o61vxszg414kx4r40ud4c6i].[sum:value:qk]' max='5000000.0' min='0.0' num-steps='6' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0h8b2o61vxszg414kx4r40ud4c6i].[sum:value:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0h8b2o61vxszg414kx4r40ud4c6i].[none:category:nk]</rows>
        <cols>[federated.0h8b2o61vxszg414kx4r40ud4c6i].[none:year:ok]</cols>
      </table>
      <simple-id uuid='{376CCAAB-E4A2-4189-B6AC-AFE3BCE2E56D}' />
    </worksheet>
    <worksheet name='SO2 CO O3'>
      <table>
        <view>
          <datasources>
            <datasource caption='pollution_us_2000_2016 (pollution_us_2000_2016)' name='federated.1u5oo631ax02om12hazm119x8psu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1u5oo631ax02om12hazm119x8psu'>
            <column datatype='real' name='[CO Mean parts per million]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Altoona&quot;' value='&quot;Altoona&quot;' />
                <semantic-value key='&quot;Arden-Arcade&quot;' value='&quot;Sacramento&quot;' />
                <semantic-value key='&quot;Capitan&quot;' value='&quot;Yosemite National Park&quot;' />
                <semantic-value key='&quot;Ladue&quot;' value='&quot;Santa Clara&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[O3 Mean parts per million]' role='measure' type='quantitative' />
            <column datatype='real' name='[SO2 Mean parts per billion]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[CO Mean parts per million]' derivation='Sum' name='[sum:CO Mean parts per million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[O3 Mean parts per million]' derivation='Sum' name='[sum:O3 Mean parts per million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SO2 Mean parts per billion]' derivation='Sum' name='[sum:SO2 Mean parts per billion:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1u5oo631ax02om12hazm119x8psu].[sum:CO Mean parts per million:qk]' included-values='in-range'>
            <min>11.586936000000009</min>
            <max>20405.980862</max>
          </filter>
          <filter class='quantitative' column='[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean parts per billion:qk]' included-values='in-range'>
            <min>17.217420000000011</min>
            <max>150525.244026</max>
          </filter>
          <slices>
            <column>[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean parts per billion:qk]</column>
            <column>[federated.1u5oo631ax02om12hazm119x8psu].[sum:CO Mean parts per million:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1u5oo631ax02om12hazm119x8psu].[none:City:nk]' />
              <lod column='[federated.1u5oo631ax02om12hazm119x8psu].[sum:O3 Mean parts per million:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4832596778869629' />
                <format attr='has-stroke' value='false' />
                <format attr='shape' value='circle' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='595' />
                <format attr='maxwidth' value='595' />
                <format attr='minheight' value='406' />
                <format attr='maxheight' value='406' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='595' />
                <format attr='maxwidth' value='595' />
                <format attr='minheight' value='406' />
                <format attr='maxheight' value='406' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1u5oo631ax02om12hazm119x8psu].[sum:SO2 Mean parts per billion:qk]</rows>
        <cols>[federated.1u5oo631ax02om12hazm119x8psu].[sum:CO Mean parts per million:qk]</cols>
      </table>
      <simple-id uuid='{4FCAF07D-1006-406E-BB6D-BFE55E22A03E}' />
    </worksheet>
    <worksheet name='Sheet 13'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='12'>Emissions of air pollutants, United States, 1970 to 2016</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='emissions-of-air-pollutants (emissions-of-air-pollutants) (2)' name='federated.1negdth1velvj20zroh431nqvxc7' />
          </datasources>
          <datasource-dependencies datasource='federated.1negdth1velvj20zroh431nqvxc7'>
            <column datatype='real' name='[Ammonia (Index)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Nitrogen oxides (Index)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Non-methane volatile organic compounds (Index)]' role='measure' type='quantitative' />
            <column datatype='real' name='[PM10]' role='measure' type='quantitative' />
            <column datatype='real' name='[PM2.5]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sulphur dioxide (Index)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column aggregation='None' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ammonia (Index)]' derivation='Sum' name='[sum:Ammonia (Index):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Nitrogen oxides (Index)]' derivation='Sum' name='[sum:Nitrogen oxides (Index):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Non-methane volatile organic compounds (Index)]' derivation='Sum' name='[sum:Non-methane volatile organic compounds (Index):qk]' pivot='key' type='quantitative' />
            <column-instance column='[PM10]' derivation='Sum' name='[sum:PM10:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PM2.5]' derivation='Sum' name='[sum:PM2.5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sulphur dioxide (Index)]' derivation='Sum' name='[sum:Sulphur dioxide (Index):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1negdth1velvj20zroh431nqvxc7].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1negdth1velvj20zroh431nqvxc7].[sum:Ammonia (Index):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1negdth1velvj20zroh431nqvxc7].[sum:Nitrogen oxides (Index):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1negdth1velvj20zroh431nqvxc7].[sum:Non-methane volatile organic compounds (Index):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1negdth1velvj20zroh431nqvxc7].[sum:PM10:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1negdth1velvj20zroh431nqvxc7].[sum:PM2.5:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1negdth1velvj20zroh431nqvxc7].[sum:Sulphur dioxide (Index):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1negdth1velvj20zroh431nqvxc7].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1negdth1velvj20zroh431nqvxc7].[none:country:nk]</column>
            <column>[federated.1negdth1velvj20zroh431nqvxc7].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1negdth1velvj20zroh431nqvxc7].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1negdth1velvj20zroh431nqvxc7].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;[federated.1negdth1velvj20zroh431nqvxc7].[none:Year:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>&lt;[federated.1negdth1velvj20zroh431nqvxc7].[:Measure Names]&gt;:&#9;</run>
                <run bold='true'>&lt;[federated.1negdth1velvj20zroh431nqvxc7].[Multiple Values]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1negdth1velvj20zroh431nqvxc7].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1negdth1velvj20zroh431nqvxc7].[:Measure Names]' />
              <text column='[federated.1negdth1velvj20zroh431nqvxc7].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;[federated.1negdth1velvj20zroh431nqvxc7].[none:Year:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>&lt;[federated.1negdth1velvj20zroh431nqvxc7].[:Measure Names]&gt;:&#9;</run>
                <run bold='true'>&lt;[federated.1negdth1velvj20zroh431nqvxc7].[Multiple Values]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1negdth1velvj20zroh431nqvxc7].[Multiple Values]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1negdth1velvj20zroh431nqvxc7].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;[federated.1negdth1velvj20zroh431nqvxc7].[none:Year:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>&lt;[federated.1negdth1velvj20zroh431nqvxc7].[:Measure Names]&gt;:&#9;</run>
                <run bold='true'>&lt;[federated.1negdth1velvj20zroh431nqvxc7].[Multiple Values]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.69165748357772827' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1negdth1velvj20zroh431nqvxc7].[Multiple Values] + [federated.1negdth1velvj20zroh431nqvxc7].[Multiple Values])</rows>
        <cols>[federated.1negdth1velvj20zroh431nqvxc7].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{C52F7586-3344-436E-9CD0-6E36FDF53556}' />
    </worksheet>
    <worksheet name='Sheet 14'>
      <table>
        <view>
          <datasources>
            <datasource caption='fossil-electricity-per-capita (fossil-electricity-per-capita)' name='federated.1gk4jrf1xn51cn1acxvni1y0y642' />
          </datasources>
          <datasource-dependencies datasource='federated.1gk4jrf1xn51cn1acxvni1y0y642'>
            <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Fossil fuel electricity per capita (kWh)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fossil fuel electricity per capita (kWh)]' derivation='Sum' name='[sum:Fossil fuel electricity per capita (kWh):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Year:qk]' included-values='in-range'>
            <min>2000</min>
            <max>2019</max>
          </filter>
          <slices>
            <column>[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Year:qk]</column>
            <column>[federated.1gk4jrf1xn51cn1acxvni1y0y642].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Year:ok]' value='-90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[sum:Fossil fuel electricity per capita (kWh):qk]' max='10000.0' min='0.0' num-steps='8' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[sum:Fossil fuel electricity per capita (kWh):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Country:nk]</rows>
        <cols>[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Year:ok]</cols>
      </table>
      <simple-id uuid='{C7669FAC-C58A-4115-81B1-67029F9378D3}' />
    </worksheet>
    <worksheet name='Sheet 15'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Types Of Global Power Plants</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='global_power_plant_database (global_power_plant_database)' name='federated.16rnq7y079v2cy13achj50ego07y' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.16rnq7y079v2cy13achj50ego07y'>
            <column datatype='real' name='[capacity_mw]' role='measure' type='quantitative' />
            <column datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[capacity_mw]' derivation='None' name='[none:capacity_mw:qk]' pivot='key' type='quantitative' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[primary_fuel]' derivation='None' name='[none:primary_fuel:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' datatype='string' name='[primary_fuel]' role='dimension' type='nominal' />
            <column-instance column='[capacity_mw]' derivation='Sum' name='[sum:capacity_mw:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.16rnq7y079v2cy13achj50ego07y].[none:capacity_mw:qk]' included-values='in-range'>
            <min>1.0</min>
            <max>10012.0</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.16rnq7y079v2cy13achj50ego07y].[none:primary_fuel:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.16rnq7y079v2cy13achj50ego07y].[sum:capacity_mw:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.16rnq7y079v2cy13achj50ego07y].[none:capacity_mw:qk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.16rnq7y079v2cy13achj50ego07y].[sum:capacity_mw:qk]' field-type='quantitative' max='10000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.16rnq7y079v2cy13achj50ego07y].[sum:capacity_mw:qk]' max='8000.0' symmetric='false' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff007f</color>
                <color>#f82990</color>
                <color>#f250a1</color>
                <color>#ec76b0</color>
                <color>#e599bf</color>
                <color>#dfbacc</color>
                <color>#d9d9d9</color>
                <color>#bad2df</color>
                <color>#99cce5</color>
                <color>#76c4ec</color>
                <color>#50bcf2</color>
                <color>#29b3f8</color>
                <color>#00aaff</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='refboxplot'>
            <format attr='palette' id='refline0' value='bp_gray40' />
            <format attr='opacity' id='refline0' value='70' />
            <format attr='whisker-stroke-size' id='refline0' value='1' />
            <format attr='whisker-stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.16rnq7y079v2cy13achj50ego07y].[sum:capacity_mw:qk]' />
              <size column='[federated.16rnq7y079v2cy13achj50ego07y].[sum:capacity_mw:qk]' />
              <lod column='[federated.16rnq7y079v2cy13achj50ego07y].[none:name:nk]' />
            </encodings>
            <reference-line axis-column='[federated.16rnq7y079v2cy13achj50ego07y].[sum:capacity_mw:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.16rnq7y079v2cy13achj50ego07y].[sum:capacity_mw:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.71364641189575195' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#555555' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16rnq7y079v2cy13achj50ego07y].[sum:capacity_mw:qk]</rows>
        <cols>[federated.16rnq7y079v2cy13achj50ego07y].[none:primary_fuel:nk]</cols>
      </table>
      <simple-id uuid='{EC0D4E69-DC7B-4092-B06C-6A92770EC1EF}' />
    </worksheet>
    <worksheet name='Sheet 17'>
      <table>
        <view>
          <datasources>
            <datasource caption='Food_Production (Food_Production)' name='federated.0ecjhcs1g5jesl140kxcq15s5kub' />
          </datasources>
          <datasource-dependencies datasource='federated.0ecjhcs1g5jesl140kxcq15s5kub'>
            <column datatype='string' name='[Food product]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='real' name='[Total_emissions]' role='measure' type='quantitative' />
            <column-instance column='[Food product]' derivation='None' name='[none:Food product:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total_emissions]' derivation='Sum' name='[sum:Total_emissions:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0ecjhcs1g5jesl140kxcq15s5kub].[sum:Number of Records:qk]' field-type='quantitative' scope='rows' type='space' />
            <encoding attr='space' class='1' domain-expand='false' field='[federated.0ecjhcs1g5jesl140kxcq15s5kub].[sum:Number of Records:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <text column='[federated.0ecjhcs1g5jesl140kxcq15s5kub].[sum:Total_emissions:qk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ecjhcs1g5jesl140kxcq15s5kub].[sum:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0ecjhcs1g5jesl140kxcq15s5kub].[none:Food product:nk]' />
              <wedge-size column='[federated.0ecjhcs1g5jesl140kxcq15s5kub].[sum:Total_emissions:qk]' />
              <text column='[federated.0ecjhcs1g5jesl140kxcq15s5kub].[none:Food product:nk]' />
              <text column='[federated.0ecjhcs1g5jesl140kxcq15s5kub].[sum:Total_emissions:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='4.798032283782959' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ecjhcs1g5jesl140kxcq15s5kub].[sum:Number of Records:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0ecjhcs1g5jesl140kxcq15s5kub].[sum:Total_emissions:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='3.3038673400878906' />
                <format attr='mark-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ecjhcs1g5jesl140kxcq15s5kub].[sum:Number of Records:qk] + [federated.0ecjhcs1g5jesl140kxcq15s5kub].[sum:Number of Records:qk])</rows>
        <cols />
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields>
                    <field>[federated.0ecjhcs1g5jesl140kxcq15s5kub].[sum:Number of Records:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0ecjhcs1g5jesl140kxcq15s5kub].[none:Food product:nk]</field>
                  <field>[federated.0ecjhcs1g5jesl140kxcq15s5kub].[sum:Number of Records:qk]</field>
                  <field>[federated.0ecjhcs1g5jesl140kxcq15s5kub].[sum:Total_emissions:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Cassava&quot;</value>
                <value>1</value>
                <value>0.90000000000000002</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{0CA8B455-E872-4169-8FBD-93C323561954}' />
    </worksheet>
    <worksheet name='Sheet 18'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Tesla Growth 2020-2021</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tesla EV)' name='federated.103js1e0c5wwq418qbx181lswi0o' />
          </datasources>
          <datasource-dependencies datasource='federated.103js1e0c5wwq418qbx181lswi0o'>
            <column caption='High Low' datatype='real' name='[Calculation_854276600713629699]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Low])-SUM([High])' />
            </column>
            <column caption='Open Close ' datatype='real' name='[Calculation_854276600714723332]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Close])-SUM([Open])' />
            </column>
            <column datatype='real' name='[Close]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[High]' role='measure' type='quantitative' />
            <column datatype='real' name='[Low]' role='measure' type='quantitative' />
            <column datatype='real' name='[Open]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[High]' derivation='Sum' name='[sum:High:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Open]' derivation='Sum' name='[sum:Open:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_854276600713629699]' derivation='User' name='[usr:Calculation_854276600713629699:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_854276600714723332]' derivation='User' name='[usr:Calculation_854276600714723332:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.103js1e0c5wwq418qbx181lswi0o].[none:Date:qk]' included-values='in-range'>
            <min>#2020-10-09#</min>
            <max>#2021-02-02#</max>
          </filter>
          <slices>
            <column>[federated.103js1e0c5wwq418qbx181lswi0o].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.103js1e0c5wwq418qbx181lswi0o].[sum:Open:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.103js1e0c5wwq418qbx181lswi0o].[sum:High:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.103js1e0c5wwq418qbx181lswi0o].[sum:Open:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.103js1e0c5wwq418qbx181lswi0o].[usr:Calculation_854276600714723332:qk]' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff0000</color>
                <color>#fb1616</color>
                <color>#f82d2d</color>
                <color>#f44242</color>
                <color>#f15757</color>
                <color>#ed6c6c</color>
                <color>#ea7f7f</color>
                <color>#e69292</color>
                <color>#e3a5a5</color>
                <color>#dfb7b7</color>
                <color>#dcc8c8</color>
                <color>#d9d9d9</color>
                <color>#c4d3c7</color>
                <color>#b1ceb7</color>
                <color>#9fc9a7</color>
                <color>#8dc398</color>
                <color>#7cbe89</color>
                <color>#6bb97b</color>
                <color>#5cb46d</color>
                <color>#4dae60</color>
                <color>#3fa954</color>
                <color>#31a448</color>
                <color>#259f3d</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#555555' />
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.103js1e0c5wwq418qbx181lswi0o].[sum:High:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.103js1e0c5wwq418qbx181lswi0o].[usr:Calculation_854276600713629699:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#555555' />
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.103js1e0c5wwq418qbx181lswi0o].[sum:Open:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.103js1e0c5wwq418qbx181lswi0o].[usr:Calculation_854276600714723332:qk]' />
              <size column='[federated.103js1e0c5wwq418qbx181lswi0o].[usr:Calculation_854276600714723332:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#555555' />
                <format attr='size' value='1.9890055656433105' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.103js1e0c5wwq418qbx181lswi0o].[sum:High:qk] + [federated.103js1e0c5wwq418qbx181lswi0o].[sum:Open:qk])</rows>
        <cols>[federated.103js1e0c5wwq418qbx181lswi0o].[none:Date:ok]</cols>
      </table>
      <simple-id uuid='{3B59696F-2528-4A60-B3CC-720DCAE29641}' />
    </worksheet>
    <worksheet name='Sheet 19'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Renewable Energy Investments Per Year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='renewable-energy-investment (renewable-energy-investment)' name='federated.19478at1fsti8e17c9mhx1gz4oog' />
          </datasources>
          <datasource-dependencies datasource='federated.19478at1fsti8e17c9mhx1gz4oog'>
            <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
            <column datatype='real' name='[Investment in Renewables by Region (IRENA (2016))]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Investment in Renewables by Region (IRENA (2016))]' derivation='Sum' name='[sum:Investment in Renewables by Region (IRENA (2016)):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.19478at1fsti8e17c9mhx1gz4oog].[none:Entity:nk]' />
              <text column='[federated.19478at1fsti8e17c9mhx1gz4oog].[none:Entity:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19478at1fsti8e17c9mhx1gz4oog].[sum:Investment in Renewables by Region (IRENA (2016)):qk]</rows>
        <cols>[federated.19478at1fsti8e17c9mhx1gz4oog].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{7C8026F2-D151-458E-A109-96FCFDCDC20D}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Earth&apos;s Temperature (No Smoothing)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Earth&apos;s Temperature)' name='federated.0r9d3c01gc3fvo19whl3r0pk963r' />
          </datasources>
          <datasource-dependencies datasource='federated.0r9d3c01gc3fvo19whl3r0pk963r'>
            <column datatype='real' name='[Lowess]' role='measure' type='quantitative' />
            <column datatype='real' name='[No_Smooting]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Lowess]' derivation='Sum' name='[sum:Lowess:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No_Smooting]' derivation='Sum' name='[sum:No_Smooting:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0r9d3c01gc3fvo19whl3r0pk963r].[sum:No_Smooting:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0r9d3c01gc3fvo19whl3r0pk963r].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0r9d3c01gc3fvo19whl3r0pk963r].[sum:No_Smooting:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0r9d3c01gc3fvo19whl3r0pk963r].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0r9d3c01gc3fvo19whl3r0pk963r].[sum:Lowess:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0r9d3c01gc3fvo19whl3r0pk963r].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0r9d3c01gc3fvo19whl3r0pk963r].[sum:Lowess:qk] + [federated.0r9d3c01gc3fvo19whl3r0pk963r].[sum:No_Smooting:qk])</rows>
        <cols>[federated.0r9d3c01gc3fvo19whl3r0pk963r].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{F7A13BA2-4FC7-40ED-895B-2F1DCA9D6652}' />
    </worksheet>
    <worksheet name='Types Deforestation'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Types Of Deforestation</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='drivers-forest-loss-brazil-amaz (drivers-forest-loss-brazil-amazon)' name='federated.0nwptkc1p8324u1eimeud1o88ar9' />
          </datasources>
          <datasource-dependencies datasource='federated.0nwptkc1p8324u1eimeud1o88ar9'>
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column datatype='integer' name='[commercial_crops]' role='measure' type='quantitative' />
            <column datatype='integer' name='[fire]' role='measure' type='quantitative' />
            <column datatype='integer' name='[flooding_due_to_dams]' role='measure' type='quantitative' />
            <column datatype='integer' name='[mining]' role='measure' type='quantitative' />
            <column datatype='integer' name='[natural_disturbances]' role='measure' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[other_infrastructure]' role='measure' type='quantitative' />
            <column datatype='integer' name='[pasture]' role='measure' type='quantitative' />
            <column datatype='integer' name='[roads]' role='measure' type='quantitative' />
            <column datatype='integer' name='[selective_logging]' role='measure' type='quantitative' />
            <column datatype='integer' name='[small-scale_clearing]' role='measure' type='quantitative' />
            <column-instance column='[commercial_crops]' derivation='Sum' name='[sum:commercial_crops:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fire]' derivation='Sum' name='[sum:fire:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flooding_due_to_dams]' derivation='Sum' name='[sum:flooding_due_to_dams:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mining]' derivation='Sum' name='[sum:mining:qk]' pivot='key' type='quantitative' />
            <column-instance column='[natural_disturbances]' derivation='Sum' name='[sum:natural_disturbances:qk]' pivot='key' type='quantitative' />
            <column-instance column='[other_infrastructure]' derivation='Sum' name='[sum:other_infrastructure:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pasture]' derivation='Sum' name='[sum:pasture:qk]' pivot='key' type='quantitative' />
            <column-instance column='[roads]' derivation='Sum' name='[sum:roads:qk]' pivot='key' type='quantitative' />
            <column-instance column='[selective_logging]' derivation='Sum' name='[sum:selective_logging:qk]' pivot='key' type='quantitative' />
            <column-instance column='[small-scale_clearing]' derivation='Sum' name='[sum:small-scale_clearing:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tree_plantations_including_palm]' derivation='Sum' name='[sum:tree_plantations_including_palm:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[tree_plantations_including_palm]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0nwptkc1p8324u1eimeud1o88ar9].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:fire:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:flooding_due_to_dams:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:mining:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:natural_disturbances:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:tree_plantations_including_palm:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:other_infrastructure:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:selective_logging:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:roads:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:commercial_crops:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:small-scale_clearing:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:pasture:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0nwptkc1p8324u1eimeud1o88ar9].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:fire:qk]&quot;</bucket>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:flooding_due_to_dams:qk]&quot;</bucket>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:mining:qk]&quot;</bucket>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:natural_disturbances:qk]&quot;</bucket>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:tree_plantations_including_palm:qk]&quot;</bucket>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:other_infrastructure:qk]&quot;</bucket>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:selective_logging:qk]&quot;</bucket>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:roads:qk]&quot;</bucket>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:commercial_crops:qk]&quot;</bucket>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:small-scale_clearing:qk]&quot;</bucket>
              <bucket>&quot;[federated.0nwptkc1p8324u1eimeud1o88ar9].[sum:pasture:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0nwptkc1p8324u1eimeud1o88ar9].[none:Year:qk]' included-values='in-range-or-null'>
            <min>2001</min>
            <max>2013</max>
          </filter>
          <slices>
            <column>[federated.0nwptkc1p8324u1eimeud1o88ar9].[none:Year:qk]</column>
            <column>[federated.0nwptkc1p8324u1eimeud1o88ar9].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0nwptkc1p8324u1eimeud1o88ar9].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0nwptkc1p8324u1eimeud1o88ar9].[Multiple Values]</rows>
        <cols>[federated.0nwptkc1p8324u1eimeud1o88ar9].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{5402015A-1FA0-4BEC-AA2C-CECB864A7120}' />
    </worksheet>
    <worksheet name='Types Of Power Plants'>
      <table>
        <view>
          <datasources>
            <datasource caption='global_power_plant_database (global_power_plant_database)' name='federated.16rnq7y079v2cy13achj50ego07y' />
          </datasources>
          <datasource-dependencies datasource='federated.16rnq7y079v2cy13achj50ego07y'>
            <column aggregation='None' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[estimated_generation_gwh]' role='measure' type='quantitative' />
            <column datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[primary_fuel]' derivation='None' name='[none:primary_fuel:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' datatype='string' name='[primary_fuel]' role='dimension' type='nominal' />
            <column-instance column='[estimated_generation_gwh]' derivation='Sum' name='[sum:estimated_generation_gwh:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16rnq7y079v2cy13achj50ego07y].[none:primary_fuel:nk]'>
            <groupfilter from='&quot;Biomass&quot;' function='range' level='[none:primary_fuel:nk]' to='&quot;Wind&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.16rnq7y079v2cy13achj50ego07y].[none:primary_fuel:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.16rnq7y079v2cy13achj50ego07y].[sum:estimated_generation_gwh:qk]' value='false' />
            <format attr='break-on-special' field='[federated.16rnq7y079v2cy13achj50ego07y].[sum:estimated_generation_gwh:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.16rnq7y079v2cy13achj50ego07y].[sum:estimated_generation_gwh:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.16rnq7y079v2cy13achj50ego07y].[none:primary_fuel:nk]' />
              <size column='[federated.16rnq7y079v2cy13achj50ego07y].[sum:estimated_generation_gwh:qk]' />
              <text column='[federated.16rnq7y079v2cy13achj50ego07y].[none:name:nk]' />
              <text column='[federated.16rnq7y079v2cy13achj50ego07y].[none:country:nk]' />
              <lod column='[federated.16rnq7y079v2cy13achj50ego07y].[none:country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#1b1b1b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.16rnq7y079v2cy13achj50ego07y].[none:country:nk]</field>
                  <field>[federated.16rnq7y079v2cy13achj50ego07y].[none:name:nk]</field>
                  <field>[federated.16rnq7y079v2cy13achj50ego07y].[none:primary_fuel:nk]</field>
                  <field>[federated.16rnq7y079v2cy13achj50ego07y].[sum:estimated_generation_gwh:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;United States of America&quot;</value>
                <value>&quot;A.E.S. Corp.&quot;</value>
                <value>&quot;Coal&quot;</value>
                <value>450562.69234955101</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{60D654F5-5991-404F-9ECE-A983F4B52A72}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1300' minheight='800' minwidth='1300' preset-index='2' sizing-mode='fixed' />
      <datasources>
        <datasource caption='fossil-electricity-per-capita (fossil-electricity-per-capita)' name='federated.1gk4jrf1xn51cn1acxvni1y0y642' />
      </datasources>
      <datasource-dependencies datasource='federated.1gk4jrf1xn51cn1acxvni1y0y642'>
        <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
        <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='16' param='vert' type='layout-flow' w='98770' x='615' y='1000'>
            <zone h='98000' id='7' param='horz' type='layout-flow' w='98770' x='615' y='1000'>
              <zone h='98000' id='5' type='layout-basic' w='87385' x='615' y='1000'>
                <zone h='98000' id='3' name='Electricity From Fossil Fuel' w='46761' x='615' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='98000' id='10' name='Sheet 14' w='40624' x='47376' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='148' h='98000' id='6' is-fixed='true' param='vert' type='layout-flow' w='11385' x='88000' y='1000'>
                <zone h='8625' id='8' name='Electricity From Fossil Fuel' param='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Year:qk]' show-domain='false' show-filter-state='false' show-null-ctrls='false' type='filter' w='11385' x='88000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='8125' id='9' name='Electricity From Fossil Fuel' pane-specification-id='0' param='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[avg:Fossil fuel electricity per capita (kWh):qk]' type='color' w='11385' x='88000' y='9625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='8625' id='11' name='Sheet 14' param='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='11385' x='88000' y='17750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='8125' id='12' name='Sheet 14' pane-specification-id='0' param='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[sum:Fossil fuel electricity per capita (kWh):qk]' type='color' w='11385' x='88000' y='26375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='850' minheight='850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='174' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='173' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='8625' id='8' name='Electricity From Fossil Fuel' param='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Year:qk]' show-domain='false' show-filter-state='false' show-null-ctrls='false' type='filter' w='11385' x='88000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Electricity From Fossil Fuel' w='46761' x='615' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='9' name='Electricity From Fossil Fuel' pane-specification-id='0' param='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[avg:Fossil fuel electricity per capita (kWh):qk]' type='color' w='11385' x='88000' y='9625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8625' id='11' name='Sheet 14' param='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='11385' x='88000' y='17750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='10' is-fixed='true' name='Sheet 14' w='40624' x='47376' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='12' name='Sheet 14' pane-specification-id='0' param='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[sum:Fossil fuel electricity per capita (kWh):qk]' type='color' w='11385' x='88000' y='26375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{CA9C285F-965B-4A38-A232-948F40FC2EB3}' />
    </dashboard>
  </dashboards>
  <windows source-height='351'>
    <window class='worksheet' name='Global Electric Car Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='measures' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wsc9uc02jgx4d13u6t3e0ts0yt8].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{042F67FA-E2A9-4DC0-8036-DE9CA8500DB1}' />
    </window>
    <window class='worksheet' name='Global Energy Use'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[federated.0b3hmbr0eai96h15v83u00vr57p1].[none:Types:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0b3hmbr0eai96h15v83u00vr57p1].[:Measure Names]</field>
            <field>[federated.0b3hmbr0eai96h15v83u00vr57p1].[none:Types:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8EE7C2D4-F30A-4A3A-AEB2-69BDA22DF935}' />
    </window>
    <window class='worksheet' name='Electricity From Fossil Fuel'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[avg:Fossil fuel electricity per capita (kWh):qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Year:qk]' show-domain='false' show-filter-state='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gk4jrf1xn51cn1acxvni1y0y642].[avg:Fossil fuel electricity per capita (kWh):qk]</field>
            <field>[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{A5D2BC3F-F0E0-481F-AAB1-336D0E46E165}' />
    </window>
    <window class='worksheet' name='Sheet 14'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[sum:Fossil fuel electricity per capita (kWh):qk]' type='color' />
            <card param='[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Country:nk]</field>
            <field>[federated.1gk4jrf1xn51cn1acxvni1y0y642].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{84E3BD54-BBCD-4BD9-B6DF-7318F653E7C1}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Electricity From Fossil Fuel'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 14'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{64376C7C-0335-4A6D-A3FD-EC8F91D11EA0}' />
    </window>
    <window class='worksheet' name='Types Of Power Plants'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.16rnq7y079v2cy13achj50ego07y].[none:primary_fuel:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16rnq7y079v2cy13achj50ego07y].[none:country:nk]</field>
            <field>[federated.16rnq7y079v2cy13achj50ego07y].[none:name:nk]</field>
            <field>[federated.16rnq7y079v2cy13achj50ego07y].[none:primary_fuel:nk]</field>
            <field>[federated.16rnq7y079v2cy13achj50ego07y].[none:source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{595F779F-5C99-4C0B-90B6-D5B72C9D2904}' />
    </window>
    <window class='worksheet' name='Electricity generation from Power Plants'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.01aa8lq04kpily16skfsu0yx1tje].[none:Year:qk]' show-domain='false' show-filter-state='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.01aa8lq04kpily16skfsu0yx1tje].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01aa8lq04kpily16skfsu0yx1tje].[:Measure Names]</field>
            <field>[federated.01aa8lq04kpily16skfsu0yx1tje].[none:Country:nk]</field>
            <field>[federated.01aa8lq04kpily16skfsu0yx1tje].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{863854BF-84F0-4AFB-BD28-16947F50B0D7}' />
    </window>
    <window class='worksheet' name='Types Deforestation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0nwptkc1p8324u1eimeud1o88ar9].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0nwptkc1p8324u1eimeud1o88ar9].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0nwptkc1p8324u1eimeud1o88ar9].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{55BA6AA3-C652-492C-A272-56CEAA523146}' />
    </window>
    <window class='worksheet' name='Annual Deforestation '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[none:Year:qk]' show-domain='false' show-filter-state='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='2' param='[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[sum:Deforestation:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[:Measure Names]</field>
            <field>[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[none:Country:nk]</field>
            <field>[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[none:Entity:nk]</field>
            <field>[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[none:Year:qk]</field>
            <field>[federated.08ko4rp1bkc3tn1ebdp4l1nhumnl].[sum:Deforestation:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{47C398D8-7BC7-46BC-9DBD-B5AF03503403}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='4' param='[federated.0r9d3c01gc3fvo19whl3r0pk963r].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0r9d3c01gc3fvo19whl3r0pk963r].[none:Lowess:nk]</field>
            <field>[federated.0r9d3c01gc3fvo19whl3r0pk963r].[none:No_Smooting:nk]</field>
            <field>[federated.0r9d3c01gc3fvo19whl3r0pk963r].[none:Year:nk]</field>
            <field>[federated.0r9d3c01gc3fvo19whl3r0pk963r].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4787FEB0-0DD4-4CD4-BF36-F5F14B04D8E9}' />
    </window>
    <window class='worksheet' name='Earth Temperature'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1juel6n1dq3l2b1c2oool1rpny2q].[sum:temperature_anomaly:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.1juel6n1dq3l2b1c2oool1rpny2q].[sum:temperature_anomaly:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1juel6n1dq3l2b1c2oool1rpny2q].[none:Country:nk]</field>
            <field>[federated.1juel6n1dq3l2b1c2oool1rpny2q].[none:Day:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{824E2EF0-35D9-418F-B0DD-8D97996E7149}' />
    </window>
    <window class='worksheet' name='Greenhouse'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.0h8b2o61vxszg414kx4r40ud4c6i].[sum:value:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0h8b2o61vxszg414kx4r40ud4c6i].[none:category:nk]</field>
            <field>[federated.0h8b2o61vxszg414kx4r40ud4c6i].[sum:value:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CB3F6EA0-1F2B-431B-AECB-ED74F38FFCC5}' />
    </window>
    <window class='worksheet' name='CO2 Transport Emission'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0n8g3ka0foyhu215s8ly51pxgj27].[sum:CO2 emissions (gCO2/km):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1972188A-2943-4FC5-A500-CD6D1C8F87F2}' />
    </window>
    <window class='worksheet' name='Sheet 13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='31' type='pages' />
            <card size='70' type='filters' />
            <card size='240' type='marks' />
            <card pane-specification-id='1' param='[federated.1negdth1velvj20zroh431nqvxc7].[:Measure Names]' size='22' type='color' />
            <card size='45' type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1negdth1velvj20zroh431nqvxc7].[:Measure Names]</field>
            <field>[federated.1negdth1velvj20zroh431nqvxc7].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3CA512CE-F299-4109-BB03-985BE7CF44BE}' />
    </window>
    <window class='worksheet' name='Sheet 15'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.16rnq7y079v2cy13achj50ego07y].[sum:capacity_mw:qk]' type='color' />
            <card pane-specification-id='1' param='[federated.16rnq7y079v2cy13achj50ego07y].[sum:capacity_mw:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.16rnq7y079v2cy13achj50ego07y].[none:capacity_mw:qk]</field>
            <field>[federated.16rnq7y079v2cy13achj50ego07y].[none:name:nk]</field>
            <field>[federated.16rnq7y079v2cy13achj50ego07y].[none:primary_fuel:nk]</field>
            <field>[federated.1u5oo631ax02om12hazm119x8psu].[:Measure Names]</field>
            <field>[federated.1u5oo631ax02om12hazm119x8psu].[none:City:nk]</field>
            <field>[federated.1u5oo631ax02om12hazm119x8psu].[none:State:nk]</field>
            <field>[federated.1u5oo631ax02om12hazm119x8psu].[yr:Date Local:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{6C22ED22-1377-42DA-8F10-7C3838BE3428}' />
    </window>
    <window class='worksheet' name='SO2 CO O3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1u5oo631ax02om12hazm119x8psu].[none:City:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1u5oo631ax02om12hazm119x8psu].[:Measure Names]</field>
            <field>[federated.1u5oo631ax02om12hazm119x8psu].[none:City:nk]</field>
            <field>[federated.1u5oo631ax02om12hazm119x8psu].[none:State:nk]</field>
            <field>[federated.1u5oo631ax02om12hazm119x8psu].[yr:Date Local:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{84E6A2B5-FEFC-494C-A959-8D9126D46246}' />
    </window>
    <window class='worksheet' name='Sheet 17'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0ecjhcs1g5jesl140kxcq15s5kub].[none:Food product:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.0ecjhcs1g5jesl140kxcq15s5kub].[sum:Number of Records:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0ecjhcs1g5jesl140kxcq15s5kub].[none:Food product:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B9345ACA-6D27-413D-B35B-3F951546CAA8}' />
    </window>
    <window class='worksheet' name='Sheet 18'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[federated.103js1e0c5wwq418qbx181lswi0o].[usr:Calculation_854276600714723332:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.103js1e0c5wwq418qbx181lswi0o].[none:Date:ok]</field>
            <field>[federated.103js1e0c5wwq418qbx181lswi0o].[none:Date:qk]</field>
            <field>[federated.103js1e0c5wwq418qbx181lswi0o].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0C2E443D-3CE9-4B9B-8AB4-EA896E4BBD7B}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 19'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19478at1fsti8e17c9mhx1gz4oog].[none:Entity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19478at1fsti8e17c9mhx1gz4oog].[none:Entity:nk]</field>
            <field>[federated.19478at1fsti8e17c9mhx1gz4oog].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{99BAB6F5-0FF8-4D71-9285-7B6791D122DB}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Annual Deforestation ' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='CO2 Transport Emission' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Earth Temperature' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29WZMcR37g+XOPK++6T9wAAQIgCRIg2U022RTZTal7Wj3TLc3ITDKbl509
      PsF+AL2P2drsvs2a6WFsbG1MMo1JsxptH9L0wfsAAQIkQNxnHagrq7LyjMt9HyIzq7IqC0gU
      qooAMn5mNKIyIyM8Ivzv/j/dhdZaExPTpchvuwExMd8msQDEdDU7KgBhGBJrXDGPEzsqAHHn
      j3nciFWgmK4mFoCYriYWgJiuJhaAmK4mFoCYriYWgJiuJhaAmK4mFoCYriYWgJiuJhaAmK4m
      FoCYriYWgJiuJhaAmK4mFoCYriYWgJiuJhaAmK4mFoCYriYWgJiuJhaAmK4mFoCYriYWgJiu
      JhaAmK4mFoCYriYWgJiuJhaAmK4mFoCYriYWgJiuJhaAmK4mFoCYriYWgJiuZksEQAUuV86f
      5l7Bjz7Qmtk7V/jg488peeFWXCImZlvYEgHwa1WqS9PcW44EQHlFvrg4wdF9WT4/e3UrLhET
      sy2YW3ESJ9PLYG+GufrfyvcwkmmyPYP4l6+hlCIMQ5RSKKW24pIxMVvClgiAW1lmZn6JfDBD
      qacPLW1kdYnLly7RM7QPKSVSSoIgwDAMhBBbcdmYmEdGbMU2qbXSIlMzebS0GOpLo60stiox
      u1Rj164xTBl1+FgAYh43tkQAOiUWgJjHjdgNGtPVxAIQ09XEAhDT1cQCENPVxAIQ09XEAhDT
      1cQCENPVxAIQ09XEAhDT1cQCENPVxAIQ09XEAhDT1cQCENPVxAIQ09XEAhDT1cQCENPVxAIQ
      09XEAhDT1cQCENPVdCAAFc58eoZC1d/+1sTE7DAdLItiEZam+M//8TeQ3cWf/8WfMZjaktVU
      YmK+dTqaAS5+fRUjN85rJ8b46qvb29+qmJgd4r5D+dK9C/yf/8dfMVMKyGSmSY8c4N/+i4M7
      1baYmG2no3WB8jMT5Is10r1DjA32bPpi8bpAMY8bHSjzBf7qP/x7Zlybo2/9nP/l529sf6ti
      YnaIDmwAgwMvvMr4YAI7HrljnjI6mAEyvP7aKYbGxhk+cGj7WxQTs4N0MAPk+Zv//HdcvX6D
      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
    </thumbnail>
    <thumbnail height='192' name='Electricity From Fossil Fuel' width='192'>
      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
      D6SbEJU1JwmNAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Electricity generation from Power Plants' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Global Electric Car Sales' width='192'>
      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
      JADC1P4/rWEHD5sz6coAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Global Energy Use' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Greenhouse' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SO2 CO O3' width='192'>
      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
      zAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 13' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 14' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 15' width='192'>
      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
      CxRa5W25Xyw2B7npySAEnE9sAMlUknjcuQFsY2U4k2AkQiTWgxC/zdrKAkakm6fD9595k8kk
      ExM/cWYypRxFWWd+fv4e58vj8dhKEjNEC1Owt506e/Ysv/d7v7fxWFVV4tPziF6Z7z/x+sbz
      n/rUp/jd3/3dLcuXZZnW3o5tKV+yUXTMsaR1NNOgZhmopvP4CUChWETWoLxNQbrk6hqpFWcl
      6mE7y6KIIqVsmvnJIlJDN61KkLBcZHY1T18s8q5dEIeHh+nr69t4vDa1wN+/+Cb/+e/8N5w4
      cWLj+Xr37ZZl3bM/F3QTUVvPK7r7fL2pAqdOneK73/3uxuOFhQV+57O/zuHxQ/zBv//fNp63
      mxZdq9VYuD5NTa3hsbFFSyQSGx3hNU0jnlhFr2ksLCzcY1QdHR11fX4LCwsbQa+VlRVK5RJK
      Ic/8O+qgRiIRW808ypUyZUknk3VW7/UumUxm496HE7avMpwkM7ZviIVUlbH+VsrFMKGAl0z+
      /p1UFEW558uRJQkME4/HY2vpLZVK99T/SWcyWKpGJpPZWFF8Ph/t7Zs3zEulUrz++k9m+lwu
      R0dfN5pP4MUXX9x4fmBgwNb9glKpxPzEFNVS2ZYB/OZv/iavvPLKP3n+u48/fs/jV155haGh
      oU3lPfXUU/+0icgU/Mnff23j4Re/+MV7VsV60TQdwRJIJOw5ri+//DL5d9SKvXztCivzC/dM
      UJ2dnRw7dmxLcrfxFEggFI1xILr+KPz20V60qWFjab47u7wztP7WW2/x6quvbjx+7dJ51moF
      vvnNb25cbAE4c+YMR44c2VSLP//zP79nUBSzeSwspv7Vv9oIrA0ODvJHf/RHm8oyTfOe6gqG
      YdDa1oYS9N3zvKZpdaULfPnLX+YrX/nKxmPLskgnkjz2xOMI78jh/9KXvsQnPvGJTeV9/vOf
      3zjONU2TGxeugGlx4OSRe4KIzc3Nden3+7//+xuTRKFQID5xGznsZ3D8J8UEjh07VpesP/7j
      P+a5557beFypVKiUyrzxl4t89Tt/s/H8H/zBH/DII49sKu+b3/wms7Oz9zwnxEL86Z/+6cbj
      M2fOcPTo0U1lvfTSS3znO99Zl2E9hESPu7Uu671GaJpmXVHgeuTdfXubOZmmaW5kaD4s3eqV
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 17' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 18' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 19' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2daWxcWXbff/cttS+svbhJoiRqb23d6u7pZabXWW1PbMczY2CCxBMHQWDY
      QJaPiTFBECDAfAiQIDEQI7HheJ1k4Nhxxp7pcfe0u6e71Wq11C2JlChKJMWdLO5Lbe+9mw+P
      LEoiJRXFKraouj+g0SxW6dzDV+//7nbOuUJKKVEoGhTts3ZAofgsUQJQNDTG7S9mZ2cplUp1
      a6xUKuHxeLZsR0qJEKIGHm2f7Z1oF9hxPm/WrtjOOUAulyMej6NpW+t4aiWk7bS90+zatg2A
      rus1t10vny3LQtO0Td1fagikaGiUABQNjRKAoqFRAlA0NEoAioZGCUDR0NREAPn5Cc799K/p
      m1n5hXTo/vg93vjxGwxP52vRhEJRF4wHf+TB+CNpTh3axQ136RhZXKDgy/LSi0m6+4doie1H
      SonjONi2zVa3HqSUlXXqWlMv2zvNruM4Nbe5Sr193sz9tW1DIBVzp9gONnuf1aQHWJwe5vzH
      V5n2LJI+sYuSJ4Y3P8pP373JkSefQwiBrutomlb5/1awbbsuO5T1tL3T7K6yk3yWUm56J1iF
      QmyT7Z1mV4VCKBQNgBKAoqFRAlA0NEoAioZGCUDR0CgBKBoaJQBFQ6MEoGholAAUDY0SgKKh
      UQJQNDRKAIqGRglA0dAoASgaGiUARUNTGwFIm4nRIaYXVvN/Jcvz09waGqFkq0wwxaNLTQQw
      PdLHwPgMVz+5yLINWMt8euU6hfkprt4cqkUTCkVdqElK5EKhROf+QyyPdbOwbBMIefBrZYZG
      J9hztL2SDG/bNuVyecuVgW3brlsV63rZ3ml2VxMF65G8Xi+fHcdBCLGp+6smAjCFZG5xiaW5
      ZVp3aTjFRfJ6lGefTHGpf5y92aZKPrBpmiolcgfYVSmRmyDbvpeZW11oiQ4CxRyTRS+tUcH5
      y/3s27enFk0oFHWhJj2AZvo5+fRzldcZgOgx2jtrYV2hqB9qGVTR0CgBKBoaJQBFQ6MEoGho
      lAAUDY0SgKKhUQJQNDRKAIqGRglA0dAoASgaGiUARUOjBKBoaJQAFA2NEoCioVECUDQ0NckH
      WJoa4v2PuxC+GC8+fwaPcLh64QOG522OnDhNcyxYi2YUippTEwHkZuY4/exLLI10MbvskPYs
      MjpbIpFMEvJ7cRyn8p9lWVvOCXYch3K5XAvXt832TrQrhKjLgdn19HnV72qpiQCEcPMxLcsm
      oAsQAn8oSnumia7u6zx98hC6rlfOC66FAOp1Nm69bO80u6vf0Vbztzeint+fpmnbL4DmbDMf
      fPQBnmgrLVaO8XKE1iadS1dvsOvA8YpDqxn7W72otbCx3bZ3mt3VqhA7yefVp786KPsRtL3T
      7KqqEApFA6AEoGholAAUDY0SgKKhUQJQNDRKAIqGRglA0dAoASgaGiUARUOjBKBoaJQAFA2N
      EoCioVECUDQ0SgCKhkYJQNHQ1EQA5aVp3n37TT64cJXKoZrS4uzf/hWjC7VoQaGoDzXJCBsd
      G+XA8WdZGulmNi9J+GGsrwcjEKRgrWUXSSmRUm45z7QWNrbb9k60C+w4nzdruyYCkBIMw8Aw
      dGxbYuXnudQzRMhYZjI3xe5oDMdxkFJi2/aWc4JX7dSDetneaXZX0wvrkTBYT5+llNufE5yM
      RXn/g5+i++M80zxFrhzg1OkT5AYuYwV8lTQ1TdMwDGPLKZFSSkzTrIXr22Z7p9mtZ0pkvXx+
      mJTImgggmGjjtdfbKq8D7m9JpjO1MK9Q1A21CqRoaKroAQqcO3uF6cFP0fe8yGtP7a+/VwrF
      NlFFD5Dn/Ns/ZUJ6mBocqb9HCsU2UkUP0MTPffMXKS7NUQ7tqr9HCsU2UoUApvm7tz6iULyF
      mXyaQ7s+X3+vFIptogoBRIgFCoQPPYetJ+rvkUKxjVQhAJ14PIruD6F7AvX3SKHYRqqYBM/x
      SdcNcmNjXO2+WX+PFIptpAoBRHji8G56r93gxJnj9fdIodhGqhBAgbl5h9bd7chyof4eKRTb
      SBUCMAgFvcxPjTI8MVd/jxSKbaQKAeg0t7VRnJ9gYCRXf48Uim2kilUgi+WCwzNf+hZHD+6t
      v0cKxTZShQAk58++TzQZomdkkV959UT9vVIotokqhkA2aD5SqTh2qVR/jxSKbaSKHiDE3//V
      rzMyOU1KRDb8RH5mhPfOX0bzJ3jhuScxZZnLFz5iYmaJbOdxjuxO19hthaI23FcAtlVkdmYe
      B0GsSeONN7s5uL9l3ecmpmY49cxLLI1cYXbZIRUwOHr6WVJDN1nSRCVVzXEcbNvecj7o6nnD
      9aBetneiXaAuKZH18tm27QfnBC+OQzAJws10u68Aiks53n3rZxQBcMh2bDz+F6weUryWjzly
      8ypWMENHJg64F1Edk7pz7O7kY1JFaQFMP0K/8yRK6ViULvxPPM/+M4Q3DDxAAIFoK1//xjce
      2HA2k+H9j36GGWnmSTvH+IzJ9Zu3wBynWD7KgfbUHTe/EsCjb3cnCkDTNDQB5Yt/jNHxIlrz
      nZELslxCzvTB8iSaPwrUKCfYE07yhZdfrbzOAJnXv1QL0wrFppDFReyJLrTMYe5O53cWRkFo
      yMUJSLiZjSonWPFYYQ+fR2gmcnZo3fzFmelHmH6cXO9aD/dZOKlQ1AXpYI9cQPgiOAvr03ed
      mQEwAziLE6zOS5UAFI8Pi2PIpUkQArkwDvbavpV0bOTCKELTkfPDlfeUABSPDc7wRwjh3tJS
      Osjlqcp7sjCHLC27PyORS+57SgCKxwLp2DizQ6C5U1+hGThzQ2vvL4yBU157b9pN7lICUDwe
      OBZOYRZWegBMH9NDPXzcM8rMQh5nfhi0lUVPw4czO+D++Bm5q1DUFrsEhQXw+AFYKjq8+7Oz
      /Mm8l2jIy69lL3AqrSMAoek4s7eQ0lE9gOLxQOZnkStDnPmlIhevj7E7YvE7v/UK3/xCJ3OT
      w9wcXUvokqVlKC0pASgeD9zVH43c3DIXeseIR/x0NgeJmwW+4L/EsRYfg5ML5ObciTBWEVmY
      VwJQPB44C2NML5a40jdJNhbi4K4EpnAofvi72EPnSSWaaEtF6B7IkS+WAYkszCkBKB4PCnPj
      XB2eZ3e2iYO7EuiaBp4Q2CWE6UMIwd6WJrymztVbORxhIBfHlQAUjwcTgzfwmCbt6bWcFSEE
      Ql87iEPXNA7vTjG/VGJwYh6Zn1ECUOx8Bsen6esfZHc2iq7d/3ikkN/k0K4EAxMLzE8MKgEo
      dja24/BXb39Ck1+Qij64dKcQgkw8RKIpxM3+fiUAxc7m0o0Jrl27xu50aFOH4+1ribEwnauN
      AKzlWd5756d8dKkXNxnNof/qRd766TvkFlUivaI+2I7Dn711hf3RMsGAf1P/1u816Uj5anRO
      8Ogwe4+eYWm4m9mCJKYtMlXy8+zpNq4PDZM4uAeo4TnBpWWc8nwNPN/AdrmMU67DaY47zK6z
      cpytU49ssxr5/GnvGNPjQ/z6M15EWeKsRn9W2RMkwp7aCMBB4DVNLK+BZTlgOBgeL6bpRToz
      lZvecRyWl5cr58Tqul5JjZNSVo65vP1oztXkacNYcVU6lD/4HfTFETRt7XNSSiRuTrLAvQAS
      V3ACcUf36Ehn3e9W/z0Syrf5VJ1NibNBO1I6sPI7x3Eoa1rFpiYErNrcgu+O41ASYsWmdlvb
      W7seqw+p21MXt+r76vWQSMpCu8vmJnzHIW/rjPct8C+zZTJLIcThX0BIDbE6CZas/ewaRUp3
      DrBiEnN5ujYCSERCnP3wHTRPmGeyM+SKAeyZAd4e7qXjyJlKHrCu6wSDwS3lg0rHomAaiGCs
      aqVvhlVhNrrdSoL5I3aNpWODZnDReJ0f9IzwHw+OYMgS3gOvYztyUznnMj9XGwGEku289IUW
      WElK9iFIPvMitiPr8uUoGhdZXkZ7+jf44fd7efb4foLPfx2Zn1uJAt3k6fO+SI1WgYRANwx0
      TUMIDU0IhKZhGHo9HtKKBkaYAa5PC8amFvnimb0I3YMWSj1UTyWEUMugip2DlA54o/zwo0Ge
      PtJKa2rjSoWbQQlAsXOQDn2zGp/czPHVZ/avTMa3xo4WwOqyqqJBcBze7S+zKxNlf1u8JiZ3
      pACclWUymZ+Bcv6zdkexTSzn8/Qt+PnWK8fcaM8asOMEIB1J3+gMI7kFtKZ2tNRBpF3+rN26
      L7Kch6Xxz9qNHY0jJQPjc+zdt4+jHama2d1xAhCaIBLw0jc8iZM8gufENxG6ubLJ8ogiJQTT
      7hq2AnAntM7MQNVD2Km5ZeYLkp979RlMo3ZL6ztOAACxsI+w6fD+qB/hDWMe+yVYqfmyaaTE
      menfkj/SsZC2dW8Rmn609s/dUaip4SkX0FIHoPzg7822HfpGZ2lrzdKcqd3TH3aoAAxdJ5uM
      8kdnpxmanEdLdCJ8kYeaEEu7CGgP/XSWdglhBtDTh2AjEUiJFs6itZyCx7wHkI59Ry2e+3/Y
      xjz8827vuO49Wfm9lJKJ2SWWCyWyuzpr6K3LjhQA0iHd1kEmFef7b11BGn60+F6QD3GD2WX0
      XU9XiiZtGsfGPPQ1PKf/gSuCu75QablPOhFMISLNG3/hjwtWATTjwcNR6SAibWjJTkQ4s+7z
      0i6u1O8Ey5bcHJ2lPe7Fm9hTc5d3pgCcMkb6MN965Shnu4bpG51ByxwBa3NDDCklwteEnjq8
      haezQIQy7k+BBNz95dsl9IT75NJbTiGt4kO2swNwyuitT8KDFiUcCz19CGH40DPH1g8NHbvy
      QBrOzSMdSVvCjxau/VFbO1MAUqIl9nG0I83pA8380RuXoKljrfJX1XZstOQBRDgDzuaP7JFS
      IjxBhL8JYGM7ugcRaXV/bD7xUO1sFelYSKuALMzXdyKu+9CzTzzwYSKQ6CuHV+jNJ1YLNa8h
      HfTmk0xNz9A3OktHcxMe00RE2mru8o4UgDD9aJEWDF3jW68cpXsgx6WRIlqkZXOrQXYZveUE
      whOkEiO7WV8CcTB8AGiB1B09gJQOWmwPrKxZC18EEUpv7zBopS3PU9/BOPiVhxsmVtmOCCbR
      EvvWyhPeC18TItwMgAhnEYHYne8LnU/sw/QMjNGaDNOSDCP8TQhvqOZu7zwBCA1t/+uwcsbT
      7mwTL53awx/++BLl9AkoLVVvS/egxTrAE3640Gppo0Xb1gKxfGGKZZuPe0Z5/8oQE7kZiO6m
      Ii7NRAs3b+tyqJQ2Wnyf29MFkw8enjxsO04ZrWm32yN6AvdckJCOBdF2RKWIrY6W6HSXRR3J
      zEKeC/2z/O7bY6SSSfa3xsEuoree3nwPXwU7TgBCaJA6jLjtYnz9hYPk5pZ4fzxcvSEp0Zp2
      uTVjPAEeqgewSojY7srL8SWdrqEFbMehKeSjb2Sa3/9wkULJWvFdIMLZ+j2FN8KxEYG427av
      qX69j11Gi60IIJhi/bhmBasE4TtPGhWxPUzlprjYO8aFnlEMf4R/9e1X6XziSQQ2SNDbn61L
      bkJtBCAl5VIJy17t/iWObVEslnC2obvPxIJ86cx+/vd7/RSNaFVfsnQs94kI7tPf8G6+4ZUe
      AKBncIrf/v13WHK8nNif5dCuBMf2NdM94fAHP/q04pIWaanbU3hjHx00n3sgnDA3lze7WbTI
      yrBmg2GelBLbcXBsC9uMUirbzC8V+av3e/jeX16nb2QSj6nz1MEsx48e5MCerDt8tIromaPu
      ULMO1KRPWcjd4tzlmwg9wHMvPIMXi6ufXmR6YZloaydP7Ft/tnAtEULw888f4O2LfbzXV+Tl
      vRpCPGC30C6jBVYFoLnzgM1uVJl+8MXp6p/ke3/yHsf2pnm65Sie/CgSCCVa+M4TL/Ef/vg9
      DrTFePn0Xvfm0LYxSUg6CL87xhbe8KbbllYBWVpGu98NKCXCDLirYICeOoh96wPwBN1hzWKB
      W+NzLCwX8ZHnzy9/yjTDlCyboM/klROdHF9uxhuKIe0ymi+CEAI9c5Ty5T/H6HytLk9/qJEA
      pueXOPXU8yyNdjG3bJMOGhw++RSDvd2IkL+SD2zbNuVyect/jG3blEp33qxeQ/BLnz/EhR9f
      4HMtC3h993/aSdvCMkM4pRJIB0eYYOerT9qXDgSSvHt5kP/+/y7y4hNt/Oqrx9B6R7HnB0A3
      0IIZDu1K8KUzHfzBjy6xryVGNhpEGn7kFgsDVNx4gL/SkVhGCLtUAmHiSBBVtF2JtC3lAYFj
      2/ecJ8kVkZWlBqUS0hPDsixmlhaZmxxheFEjEgqwvzWGaXv51UNPYnma8HoM2lIRYmEf1ltN
      7oHqto3wNLnfr6cJcewbWL4klB78cHqYNM6tCaAwx3sXugiHgnhKJQpFi4ChAZL+a1cINO8j
      HQkAspIAb5pmTdRsmuurCrzy5D6mbhyid/CHHOncdd94cSHADCXRTBOQyEAUpzS3LpH7XkjH
      5v0Rk//x9sf83HMH+ObLRxBCYMfaKA++B47ETO5DN02+9dpxBicW+K//5zzf/c5L6KFUZaNn
      qzzoCxe6jhlsQqxcL8cf3dRehBbOIEIZN1zkHu0ICVawBSl1CgWL968uE7oxhfAEcTIv8UxL
      F76gOwzD8pA52onpu7OIlYy24MwNIoSDEc2ir/hr7nuxal9t20bTtG0UgC/Kc5/7HFZ+jnPn
      z+ONtbOrnGN82cPI2ATlsSnm9rkHZQMVx2ohgI1smIbO115/kSt/+jf0jc66Kwj3QApR6WpB
      ILyrcwcBVhGsQmV9/24cKRmdmOZvb6X5zldP8tKpPZVE7MpE0ymhxfcghMBrGvyjLx/nX/+P
      t/nB2938cjoDC6N3TOTXOyhxFscRwTTiAaG/97yeUoLhQxi+tWtvBqoa6kkp3flDpBUt3oGT
      u44wfes+M79cYmIyx4+upOh75ycsF8o4UvLPn/4aB0+/gBeL4nvX1nz0BN0h510+a9E2V2RS
      ovljW7pHtk8Aq0b8UT73whcqrzNA5qVX7/0P6kgklmRPezMXrw3RFPKRiPg3viC6xx3DryB8
      YXdYIzT3BjF9btd+15q2bTv0jc0yObXML//Clzl9vOMO+yKYdO2YgcoOMUA6FuQ3f+lpvven
      79H8pMazFO67ri3Ly+6+RjkP2kNM0HHXYYTpB8Oz5p8/hpOfXvd3bUi5gNZ8HC2crexvSOmW
      gJldKDA4Mc/MYoF01MszL3+VZwwvfq9JZ2ucSNCLEAJZXLgtrsdBeCMb9iQilHY30DQdfFtP
      dayWx+6IJGF4SDTvYdfMAl39k5w51ILfe9dwSUp3QnjbTSDM27pk3cQ8+FXKXX8Jt92kZcvh
      6q0cM/PLnDp+jOSxznXicm84H1q0fd1NdvpAM9/5yin+11+/xd49s2SagxuKUzo2IpjE2P0C
      5a6/2MLVkAhvBKHfJoBADCatO0Rxb2z01EHQTTC8WLbDxMwSQ5PzLBfLpKIBTuyJknzii3gO
      H9jYhO5Zu4arE/IN/mYt0uKKTA8gPLXf8LoXj50AwO1O96RvMr2Q59qtKZ7Yl74jg0gi0XxN
      lG0413WLNz66SWD6Ms9qw5SlQVnqvH1jmm+GLDqbbYSmIR3Jlb4JFvIlnuhI0NR++I7S22uN
      GwjTh3bb/sAqQghee2ovAQ8M/u2bFPU5dqWj6wp0YRUxj/8KGH7uuZ5eJcIXvut1dCUc40EC
      kG4Ih+lnMV9mcMHP+NANCiWblkSIo3tSBHwmWAWM9jP3cUBHeCNuT+A4aP4YcoM9F+ENu8M1
      T2Dj61onHk8BJDvRr7/BsY40H10boas/R3s6QjjgQSCwymUu9i/z/Q/fIF8sc+ZQK8f3PUHL
      wBUs4cEKtTHu3cM7XS3MTH2Ko7lPP69H58kDzfi1Elr2+D0a1xG+JrR4x8Zva4LnT3QwPHCA
      T6/eJBr00RS6c2ytRdvQMseQhbn1wXWbwXEQvrvCDLwRqhKVXUZLHeHD7hH+2//9mBOGhy8n
      TLKZFjwrCSnSttCzT6xsfN0DTUcLxLELs2679xr2mQGEN1RZst0uHk8BRNx9h4DP5Pi+DH2j
      s3zcM7o2FLJLXBdhPn9qN6+c7iAR8SMXRiguhHHQ8HQc5ODhk8w/287ij/8dRcetbxSP+PGa
      BtIW7rh4A4TQ0NueQlsJgNsYQap9P9mxEa70T/LUwWa85upXIRHhjBsqYHgqcUYPhVNet4Ek
      vJEHbhRKu4TjOLwzaPKH587x9148yGudR/Cc/y9gL4MWBN1AmH6MvS/ddz4hhHAFMtVbGQJt
      1LrQTYQvWtlL2C4eSwFgBhCBONIu0xTycXJ/hqVCmYWlIrYjMUWZzz37ebwdRyrDD2n43QmY
      XXZXXoQgGksSOPVVrOs/WQmXWA1w233fXVVjz/P3dU8IgZ7Yy4HWT/mod4prt6Y41pFG04Tb
      /upNoHkQviiytPRwqyKOve6Gcp+w7q4s4BYxE8INIrQK2MLLsN7Jj+fb+fDmAt/+4gm+eGYv
      2GXKzU+gpY+gt5xa2VATDw58YzVMXN6xKbfh50IptFDtQ57vx+MpAEBvO4N1400w3VWgkN9D
      yO+Oe2VpGTOUvHP1Rve4EzarXOlBAIw9L2Lf+sCdmAoBpWX0zNEt+yfCzejC4fDuJBeujzGc
      m6c9HQXbWrtpddPNdCsuwIN2tjdEumP+28gtWkyNLzK5NI+UEkPXaUkESYRNeoyT/Hg4xqXh
      PAfbTf7FNz7Hyc6s+3cbHjxPfefh/tZQ2p13rO643wM9fRTMLfR4D8FjKQAhBHr7M1j977ox
      +3c/PQXrbgx0D8LwglW8c/3f9GPsf5Vy118gNRNMH1r68JZ91IJJMHxETI39bXGuD00TDXoJ
      6/Za6IIQCH8cZqtMM7wboSO8YSzbXb36m7O9XLs5xLeDDplYEF0XLOXL3BjO8abVzJtlP8f2
      Rvjtf3iGjmwTprG5TaV7uuGNuD2Fbt6359QzR7bc1mZ5LAUAoAVi6OnD2BNdgI4sLa7d5Lrn
      zmVP3OVTdI/7hLptGU4Igd52BnuiGxFIYnS8eP+4mCoR3jBaOIOzOEFrMszMQp7LfZOcbA/g
      9a6t3LgBew83EbYwON83zw/PnufSjQlOdmb5zV95jv1DfWjlpcpypNUcIuM5xpdOvkbbSrlB
      265dxKrwBNyb3/C5c5pHqIDHYysAAGPfy9jD55EIjINfwer5EVJ6EJq5YfSnMP1oZqASq175
      veF1u/8NdjC3gghlYGEcoWkcaE/wSe84V29NsTevk10ZKWihtBs9qlezbr9GoWhx/uYsv3fh
      A07uz/Lv/8kr7G2JoWtQyoVxyouV2vu6kBw+2IlRg1qbG+IJug+c1WHmw+Zf14HHWgBapAV9
      17PomWNo6cPI5WnskQsQiG/cFZv+9cuGK9wtilqgpw5h3zoL3hBe0+BUZ5YrfeP8m997l3/7
      ay+5mVCBRFUTzduxbIfugQlCsWb+8699hVj4zr9VmAFwHNBX7Ernjl3rWiOE5g459drEgdWS
      HZcQs1k8x7+BnnFXe4zdzwEgzI0nYsLwVvJ3twPR1M7ta/KmoXPsQAetyTD/6QdnKZQsd0i2
      SQEMjM+xuLTEkWPH1938sDr/uW0xUuj3nZzWAhFIuPFWjxiPvQBuR0Tb0KKt6yfAK2ixPbCd
      AvA1ucFzK0jpYIYS/MYvnmF6Ps+fvXkF6QlvKpFlej7P6MQ0x888T+jY1zb+kO/OpCFheOou
      AC2cRWxjjE+1PNZDoLsRQmAc+DJyaXLD9409L6zLM6i3PyLcjDM74A6xVtbtU01B/unXn+J7
      f/IzfB6DV6WfEA/OdbZth1ujkzR3niT14q+7E/6N2vXH7kzL1L1b23CrAhFpQViFurbxMDSU
      AAC0xH5I7P+s3aigpzpxcj3gCbgC8Lu905MHmvnHXzvF99/qYtHO8YX2Is3JyH2rIk/OLVMq
      Ftjz+W+j3SfFU1uNWF1B+JvqMse5o83kPYLlPmMaTgCP3CQs0bl2M0rbXTNf4fWn9vH8sV3c
      /KBI/9kfML9c5tCupLtjfBeW5XBzZJo9u3YTiN4/nECEs5Uhj3RstG2Iv3nUrvsqNZkDlBYm
      +embP+HdDy+vHVMmy7zzwx8wXJ/jfB8bhD/mJomsjMnvDhUI+EyOPPkCh3bFmZxbpnsgd1vx
      ARcpJYMTczhWmczeEw8sHyJ0s1KXB6fslmxsUGpzUPb4BE889SKLw13MLDskA4Lh3qtEUilK
      9lp+6Wr+6lZPdVk9Z7ge1Mv2Pe3qXkS0HTnT74bLeCPrPxdIktx3mtO+bi7edMuHHN+bxjR0
      pJT0Ds8wODHH0bYonrZT1eU0R1rdNq0i+OLr2tzqYeb3o17XeNXnzdxfNckJDgaDhHE3FqWE
      8vIMF7r6COh5FoJj7I6m7xDBVqnn0Uj1sn0/u6JpN85Ur5t4opkbfk7f/RzBiS5Od2a53DfJ
      xz2jhANet7xIvsTh3UlSUS8ilK7Kfy2+F7v3J+6LQHzdv1l9vd3XYrvt1iQnOD87ynsf/h1G
      MMXTrVNM2yFefvUVpm9dppiKV/JlVw/L3spB2eAqvXJyfI2pl+372RWpAzi9byA8AXSvH7HB
      52RyP3Y4Q6C4yKkDWQbGZimULAxD41RnlrDfgxZIoAeqy6eViX1YmgHSwQjE17W5+oSu1yHc
      9fr+NnNQNtRoCORvaubV19bGkaur1sEjz9bC/GOPFs64T39PyF2S3AChmxh7X6b86Z/h8QTp
      bHMnunZ+Hs0E7CJacn/1k03dRARTyMKsuwLVoDTURtijymqxX+FZH4d0O3rrqZX6+yvDE6sE
      qSNuSXLHRm8+uYlGNbSmtkqeQ6PScMugjypabDdyeeq+nxGagbH/VazrP3GD+RwL4+BX8MTb
      kEe/jtsVVIcQAi22B1mY52ErYz8OqB7gEUHPHKsqIE1vOQ2a7lZ9TuyrJM8I3bPptXatafed
      1a0bENUDPCKI2B6MDSpJrPtcII6ePY499CHGvpewt7CDK6JtGNHti316FFE9wJhDF+sAAAZ9
      SURBVCOCW+KwivxaITA6XkCEm91d5G1o83Gmsf/6HYqItOJ9/rfqHr/TCKgh0A5EPOx5Bop1
      qB5A0dAoASgaGiUARUOjBKBoaJQAFA3NHatAs7Ozdc2JXVpawrbtmpwRVo8oxXra3ml2H+a8
      rWp5lHwWsl6B9XWkXC5veEbYo2x7p9ldfVBtNXR9Ix4ln9UQSNHQ7MgeYMOCt4+47Z1oF+qT
      zP4o+bwjBaBQ1Ar9u9/97nc/ayfuhXTK9F29RsH0E9AtPj1/juGZEqmoh0/On2N80SEZ9XHx
      3AfMWR4S0dC9jrJdR2l5jq7LvUSb0xSnRzh77iLSG0EujvPRxS6CMfcs33PnP8UfzxL0Vjdp
      c6wivV1XkcEIhrXIx+c+YlH6iAcEH587y4LtJRYUnP/gLHktSCwcqM5naTM+1M/YfJlY2Ev3
      xQ+5lcuTSkYZ6+tmxvIT9ev0XPqYgck82VS86muxMD3G9YEJEokooze7udQzQDyVZnr4Ohcu
      9xBoSrE41ssn1wZJptOYepUjZ2kz3NfLdFEQ9etcOv8BI/M2iYjBxXPnuJVbJJOKcvXiR4zO
      26QTTVVeC8lcboQbIzOk4hFu9Vyiu2+URDqNIRy6L13EF02T6+/i8o0x0tkUxgalZOBRnwM4
      ZXQ9QKG4xELuFkaik3BhgmsDA0TbjhDIj9Ld1UOi8wSl6UGWy9VXMigWy/iEpAD09PRz6unT
      jA0O0Ns/ytNnTnLjWhc3bo5w/PQx+q73VO+yXcYQXvLlAuMDN8keehJ7/CZd13vJdh6nlBvg
      6qVuWo8/xcxoH7ZTZQcsbYQvRnEhRznXx1J4H82eAsMzC3h0jcV8icWZUcq+LGltmpF5q2qf
      y46GKOexS3mGZko8eXQPPT296P4kTx3tYGRsgP7RIk/sCnFjZLpquzhlhCdKcWmG4lgPVuoY
      8fIUE0XBkZNniJVz9PQPYiQ7CJXGyS1VWylCYuHBLi7iLM8yVvBwrCPFjf4hZkdvMjI5w2Jx
      nqGc5Eha48bYvavqPdICEEaAVNyt1e8LxZjq/5TBeYdMPMZQzwVGFgS2rpEOBwgE/ThW9aU2
      wrEkAdP981PJMOd+9gHCG2JXc5yzZz9mcnYGzRsk5A9i6psos+ENkWhy0wxTrbsYunKOwfFJ
      5ko6TcEAkZCX6ZJBJuTH7/NUX8VA85BKNiEAM9GOMdXD1Rt9LBQ0Ukm3llBJ2jSFIkSTUYqL
      1Z8GH0+mMTQQHj/pIJy90M38Up6I1+Ha0Bydu+P4g3HCsSh2fhPL5LqPdNKtdOdJ78UZ+YTe
      gQEWSzpDPZ8yWvDiNR3iwRDhpgjlam0LjUQqhSFA80eIa0uc//Qac7M5bowV2JONYluL+INJ
      oqkYpcX8PU090gKQpWUGBgcZHRoiNzGJL9lGzFNkaHSGcLKFkFkmoGt80tXN+NQSprf64NbF
      2UmGx8cZGR5jYmqetj27KSzO4AlEyCaDZJo7MKx5rnR3Y2nVF6e1C4vcGh5mZGiIIibZlhb8
      kTR7Yzrd164yPFVkb0Ln/OUuZhatDau8bWy4xPDgAGNjY8wulUikmvGF47Q06QzeGmJ8ZAjH
      9jB4q4drPWNEE9X7PDU2xNj4OOO5WYLRBMmwQSab5dzHVwgHvSznTfKz/Vy+dINA0ybO8LWK
      DA7eYmx0lIWiTTLdihnOkNYWsANxEt48xaJBb18PfbdyhKJV1ieVDpOjg4yNjzMxs0A4liIW
      8ZGMJZDWAlev9TIy6bA4fZ1PPrlJNBW+p6lHehIsy3lujUwAkMy0sDQzjmOGyMSCTIyPI7wR
      UvEQubFRzHBi3XGj92NpLkdudgnd4ycVCzIxMUU0mcGwlpiaL5JtySKsPOMTMySbW/Dq1d2o
      dnGRobEpQJBIp5jNTRJNNhP2aUyMjeGNJIgETCZGRvHHUkQCVYY122VGRsco2w7RRIri3BR6
      IEY8ajIyOIYNxNMt2EvTlPQA6di9v/S7mZ4YYSFfxhuM4hdFFss6LZkmJkbHKJRtQk1JgnqZ
      qcUy2XQSvVrRWkWGRsexHUkslWFpagJvNEnUrzM+PoHwBMmmmpiZHEd6IySiVVaolg658VGW
      ihb+SAzTWqYgPWTTcQRQKiwjTD/lpRlm85JsOo52j8nFIy0AhaLePNJDIIWi3igBKBoaJQBF
      Q6MEoGholAAUDY0SgKKhUQJQNDRKAIqGRglA0dAoASgaGiUARUPz/wEDZ5ci6cfDUAAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Types Deforestation' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Types Of Power Plants' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
